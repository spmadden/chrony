diff -urNpa s01/chrony.html s02/chrony.html
--- s01/chrony.html	1970-01-01 01:00:00.000000000 +0100
+++ s02/chrony.html	2015-04-10 21:57:00.000000000 +0200
@@ -0,0 +1,5110 @@
+<html lang="en">
+<head>
+<title>User guide for the chrony suite</title>
+<meta http-equiv="Content-Type" content="text/html">
+<meta name="description" content="User guide for the chrony suite">
+<meta name="generator" content="makeinfo 4.13">
+<link title="Top" rel="top" href="#Top">
+<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
+<meta http-equiv="Content-Style-Type" content="text/css">
+<style type="text/css"><!--
+  pre.display { font-family:inherit }
+  pre.format  { font-family:inherit }
+  pre.smalldisplay { font-family:inherit; font-size:smaller }
+  pre.smallformat  { font-family:inherit; font-size:smaller }
+  pre.smallexample { font-size:smaller }
+  pre.smalllisp    { font-size:smaller }
+  span.sc    { font-variant:small-caps }
+  span.roman { font-family:serif; font-weight:normal; } 
+  span.sansserif { font-family:sans-serif; font-weight:normal; } 
+--></style>
+</head>
+<body>
+<h1 class="settitle">User guide for the chrony suite</h1>
+<div class="node">
+<a name="Top"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Introduction">Introduction</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#dir">(dir)</a>
+
+</div>
+
+<h2 class="unnumbered">User guide for the chrony suite</h2>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Introduction">Introduction</a>:                 What the chrony suite does
+<li><a accesskey="2" href="#Installation">Installation</a>:                 How to compile and install the software
+<li><a accesskey="3" href="#Typical-scenarios">Typical scenarios</a>:            How to configure the software for some common cases
+<li><a accesskey="4" href="#Usage-reference">Usage reference</a>:              Reference manual
+<li><a accesskey="5" href="#Porting-guide">Porting guide</a>:                Hints to help with porting the software
+<li><a accesskey="6" href="#GPL">GPL</a>:                          The GNU General Public License
+</ul>
+<!-- }}} -->
+<!-- {{{ Ch:Introduction -->
+<!-- {{{ Chapter top -->
+<div class="node">
+<a name="Introduction"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Installation">Installation</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Top">Top</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="chapter">1 Introduction</h2>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Overview">Overview</a>:                     What the programs do
+<li><a accesskey="2" href="#Acknowledgements">Acknowledgements</a>:             Credit where credit is due
+<li><a accesskey="3" href="#Availability">Availability</a>:                 Where to get the software
+<li><a accesskey="4" href="#Other-time-synchronisation-packages">Other time synchronisation packages</a>:   Comparision with other software
+<li><a accesskey="5" href="#Distribution-and-warranty">Distribution and warranty</a>:    There is no warranty
+<li><a accesskey="6" href="#Bug-reporting">Bug reporting</a>:                How to report bugs and make suggestions
+<li><a accesskey="7" href="#Contributing">Contributing</a>:                 Areas where contributions are particularly welcome
+</ul>
+<!-- }}} -->
+<!-- {{{ S:Overview -->
+<div class="node">
+<a name="Overview"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Acknowledgements">Acknowledgements</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.1 Overview</h3>
+
+<p>Chrony is a software package for maintaining the accuracy of computer
+system clocks.  It consists of a pair of programs :
+
+     <ul>
+<li><code>chronyd</code>.  This is a daemon which runs in background on the
+system.  It obtains measurements (e.g. via the network) of the system's
+offset relative to other systems, and adjusts the system time
+accordingly.  For isolated systems, the user can periodically enter the
+correct time by hand (using <code>chronyc</code>).  In either case,
+<code>chronyd</code> determines the rate at which the computer gains or loses
+time, and compensates for this.
+
+     <p><code>chronyd</code> can also act as an NTP server, and provide a time-of-day service
+to other computers.  A typical set-up is to run <code>chronyd</code> on a gateway
+computer that has a dial-up link to the Internet, and use it to serve time to
+computers on a private LAN sitting behind the gateway.  The IP addresses that
+can act as clients of <code>chronyd</code> can be tightly controlled.  The default is
+no client access.
+
+     <li><code>chronyc</code>.  This is a command-line driven control and
+monitoring program.  An administrator can use this to fine-tune various
+parameters within the daemon, add or delete servers etc whilst the
+daemon is running.
+
+     <p>The IP addresses from which <code>chronyc</code> clients may connect can be tightly
+controlled.  The default is just the computer that <code>chronyd</code> itself is
+running on. 
+</ul>
+   <!-- }}} -->
+<!-- {{{ S:Acknowledgments -->
+<div class="node">
+<a name="Acknowledgements"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Availability">Availability</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Overview">Overview</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.2 Acknowledgements</h3>
+
+<p>The <code>chrony</code> suite makes use of the algorithm known as <em>RSA
+Data Security, Inc. MD5 Message-Digest Algorithm</em> for authenticating
+messages between different machines on the network.
+
+   <p>In writing the <code>chronyd</code> program, extensive use has been made of
+RFC1305, written by David Mills.  I have occasionally referred to the
+<code>xntp</code> suite's source code to check details of the protocol that
+the RFC did not make absolutely clear.  The core algorithms in
+<code>chronyd</code> are all completely distinct from <code>xntp</code>, however. 
+<!-- }}} -->
+<!-- {{{ S:Availability -->
+<div class="node">
+<a name="Availability"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Other-time-synchronisation-packages">Other time synchronisation packages</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Acknowledgements">Acknowledgements</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.3 Availability</h3>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Getting-the-software">Getting the software</a>:         Where can I get the software from? 
+<li><a accesskey="2" href="#Platforms">Platforms</a>:                    Which platforms will it run on? 
+</ul>
+
+<div class="node">
+<a name="Getting-the-software"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Platforms">Platforms</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Availability">Availability</a>
+
+</div>
+
+<h4 class="subsection">1.3.1 Getting the software</h4>
+
+<p>Links on <a href="http://chrony.tuxfamily.org">the chrony home page</a>
+describe how to obtain the software.
+
+<div class="node">
+<a name="Platforms"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Getting-the-software">Getting the software</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Availability">Availability</a>
+
+</div>
+
+<h4 class="subsection">1.3.2 Platforms</h4>
+
+<p>Although most of the program is portable between
+Unix-like systems, there are parts that have to be tailored to each
+specific vendor's system.  These are the parts that interface with the
+operating system's facilities for adjusting the system clock;
+different operating systems may provide different function calls to
+achieve this, and even where the same function is used it may have
+different quirks in its behaviour.
+
+   <p>The software is known to work in the following environments:
+     <ul>
+<li>Linux on i386, x86_64 and PowerPC architectures.  The software is known
+to work on Linux 2.0.x and newer.  Prior to 2.0.31, the real time clock can't
+be used.
+
+     <li>NetBSD
+<li>BSD/386
+
+     <li>Solaris 2.3/2.5/2.5.1/2.6/2.7/2.8 on Sparc (Sparc 20, Ultrasparc) and
+i386
+
+     <li>SunOS 4.1.4 on Sparc 2 and Sparc20. 
+</ul>
+
+   <p>Closely related systems may work too, but they have not been tested.
+
+   <p>Porting the software to other system (particularly to those supporting
+an <code>adjtime</code> system call) should not be difficult, however it
+requires access to such systems to test out the driver. 
+<!-- }}} -->
+<!-- {{{ S:Other programs -->
+<div class="node">
+<a name="Other-time-synchronisation-packages"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Distribution-and-warranty">Distribution and warranty</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Availability">Availability</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.4 Relationship to other software packages</h3>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Comparison-with-xntpd">Comparison with xntpd</a>
+<li><a accesskey="2" href="#Comparison-with-timed">Comparison with timed</a>
+</ul>
+
+<div class="node">
+<a name="Comparison-with-xntpd"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Comparison-with-timed">Comparison with timed</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Other-time-synchronisation-packages">Other time synchronisation packages</a>
+
+</div>
+
+<h4 class="subsection">1.4.1 xntpd</h4>
+
+<p>The `reference' implementation of the Network Time Protocol is the
+program <code>xntpd</code>, available via
+<a href="http://www.eecis.udel.edu/~ntp">The NTP home page</a>.
+
+   <p><code>xntpd</code> is designed to support all the operating modes defined by
+RFC1305, and has driver support for a large number of reference clocks
+(such as GPS receivers) that can be connected directly to a computer,
+thereby providing a so-called 'stratum 1' server.
+
+   <p>Things <code>chronyd</code> can do that <code>xntpd</code> can't:
+
+     <ul>
+<li><code>chronyd</code> can perform usefully in an environment where access to
+the time reference is intermittent.  <code>chronyd</code> estimates
+<em>both</em> the current time offset <em>and</em> the rate at which the
+computer's clock gains or loses time, and can use that rate estimate to
+trim the clock after the reference disappears.  <code>xntpd</code> corrects
+any time offset by speeding up and slowing down the computer clock, and
+so could be left with a significant rate error if the reference
+disappears whilst it is trying to correct a big offset.
+
+     <li><code>chronyd</code> provides support for isolated networks whether the only
+method of time correction is manual entry (e.g. by the administrator
+looking at a clock).  <code>chronyd</code> can look at the errors corrected at
+different updates to work out the rate at which the computer gains or
+loses time, and use this estimate to trim the computer clock
+subsequently.
+
+     <li><code>chronyd</code> provides support to work out the gain or loss rate of the
+`real-time clock', i.e. the clock that maintains the time when the
+computer is turned off.  It can use this data when the system boots to
+set the system time from a corrected version of the real-time clock. 
+These real-time clock facilities are only available on certain releases
+of Linux, so far.
+
+     <li>The <code>xntpd</code> program is supported by other programs to carry out
+certain functions.  <code>ntpdate</code> is used to provide an initial
+correction to the system clock based on a `one-shot' sampling of other
+NTP servers.  <code>tickadj</code> is used to adjust certain operating system
+parameters to make <code>xntpd</code> work better.  All this functionality is
+integrated into <code>chronyd</code>. 
+</ul>
+
+   <p>Things <code>xntpd</code> can do that <code>chronyd</code> can't:
+
+     <ul>
+<li><code>xntpd</code> supports effectively all of RFC1305, including broadcast /
+multicast clients and extra encryption schemes for authenticating
+data packets.
+
+     <li><code>xntpd</code> has been ported to more types of computer / operating
+system (so far).
+
+     <li>xntpd is designed to work solely with integer arithmetic (i.e. does not
+require floating point support from its host). 
+</ul>
+
+<div class="node">
+<a name="Comparison-with-timed"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Comparison-with-xntpd">Comparison with xntpd</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Other-time-synchronisation-packages">Other time synchronisation packages</a>
+
+</div>
+
+<h4 class="subsection">1.4.2 timed</h4>
+
+<p><code>timed</code> is a program that is part of the BSD networking suite.  It
+uses broadcast packets to find all machines running the daemon within a
+subnet.  The machines elect a master which periodically measures the
+system clock offsets of the other computers using ICMP timestamps. 
+Corrections are sent to each member as a result of this process.
+
+   <p>Problems that may arise with <code>timed</code> are :
+
+     <ul>
+<li>Because it uses broadcasts, it is not possible to isolate its
+functionality to a particular group of computers; there is a risk of
+upsetting other computers on the same network (e.g. where a whole
+company is on the same subnet but different departments are independent
+from the point of view of administering their computers.) 
+<li>The update period appears to be 10 minutes.  Computers can build up
+significant offsets relative to each other in that time.  If a
+computer can estimate its rate of drift it can keep itself closer to
+the other computers between updates by adjusting its clock every few
+seconds.  <code>timed</code> does not seem to do this. 
+<li><code>timed</code> does not have any integrated capability for feeding
+real-time into its estimates, or for estimating the average rate of time
+loss/gain of the machines relative to real-time (unless one of the
+computers in the group has access to an external reference and is always
+appointed as the `master'). 
+</ul>
+
+   <p><code>timed</code> does have the benefit over <code>chronyd</code> that for isolated
+networks of computers, they will track the `majority vote' time.  For
+such isolated networks, <code>chronyd</code> requires one computer to be the
+`master' with the others slaved to it.  If the master has a particular
+defective clock, the whole set of computers will tend to slip relative
+to real time (but they <em>will</em> stay accurate relative to one
+another). 
+<!-- }}} -->
+<!-- {{{ S:Rights + warranty -->
+<div class="node">
+<a name="Distribution-and-warranty"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Bug-reporting">Bug reporting</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Other-time-synchronisation-packages">Other time synchronisation packages</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.5 Distribution rights and (lack of) warranty</h3>
+
+<p>Chrony may be distributed in accordance with the GNU General Public License
+version 2, reproduced in See <a href="#GPL">GPL</a>.
+
+<!-- }}} -->
+<!-- {{{ S:Bug reporting + suggestions -->
+<div class="node">
+<a name="Bug-reporting"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Contributing">Contributing</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Distribution-and-warranty">Distribution and warranty</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.6 Bug reporting and suggestions</h3>
+
+<p>If you think you've found a bug in chrony, or have a suggestion, please let us
+know.  You can join chrony users mailing list by sending a message with the
+subject subscribe to <a href="mailto:chrony-users-request@chrony.tuxfamily.org">chrony-users-request@chrony.tuxfamily.org</a>.  Only
+subscribers can post to the list.
+
+   <p>When you are reporting a bug, please send us all the information you can. 
+Unfortunately, chrony has proven to be one of those programs where it is very
+difficult to reproduce bugs in a different environment.  So we may have to
+interact with you quite a lot to obtain enough extra logging and tracing to
+pin-point the problem in some cases.  Please be patient and plan for this!
+
+   <p>Of course, if you can debug the problem yourself and send us a source code
+patch to fix it, we will be very grateful!
+
+<!-- }}} -->
+<!-- {{{ S:Contributions -->
+<div class="node">
+<a name="Contributing"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Bug-reporting">Bug reporting</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Introduction">Introduction</a>
+
+</div>
+
+<h3 class="section">1.7 Contributions</h3>
+
+<p>Although chrony is now a fairly mature and established project, there are still
+areas that could be improved.  If you can program in C and have some expertise
+in these areas, you might be able to fill the gaps.
+
+   <p>Particular areas that need addressing are :
+
+     <ol type=1 start=1>
+<li>Porting to other Unices
+
+     <p>This involves creating equivalents of sys_solaris.c, sys_linux.c etc for the
+new system.  Note, the Linux driver has been reported as working on a range of
+different architectures (Alpha, Sparc, MIPS as well as x86 of course).
+
+     <li>Porting to Windows NT
+
+     <p>I did a small amount of work on this under Cygwin.  Only the sorting out of the
+include files has really been achieved so far.  The two main areas still to
+address are
+
+          <ol type=1 start=1>
+<li>The system clock driver. 
+<li>How to make chronyd into an NT service (i.e. what to replace fork(),
+setsid() etc with so that chronyd can be automatically started in the system
+bootstrap.
+          </ol>
+
+     <li>More drivers for reference clock support
+
+     <li>Automation of the trimrtc and writertc mechanisms
+
+     <p>Currently, the RTC trimming mechanism is a manual operation, because there has
+to be a reasonable guarantee that the system will stay up for a reasonable
+length of time afterwards.  (If it is shut down too soon, a poor
+characterisation of the RTC drift rate will be stored on disc, giving a bad
+system clock error when the system is next booted.)
+
+     <p>To make chrony more automated for the non-expert user, it would be useful if
+this problem could be avoided so that trimrtc could be done automatically (e.g. 
+in a crontab, or as part of the ip-up or ip-down scripts.)
+
+        </ol>
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ Ch:Installation -->
+<div class="node">
+<a name="Installation"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Typical-scenarios">Typical scenarios</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Introduction">Introduction</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="chapter">2 Installation</h2>
+
+<!-- {{{ main introduction text -->
+<p>The software is distributed as source code which has to be compiled. 
+The source code is supplied in the form of a gzipped tar file, which
+unpacks to a subdirectory identifying the name and version of the
+program.
+
+   <p>After unpacking the source code, change directory into it, and type
+
+<pre class="example">     ./configure
+</pre>
+   <p>This is a shell script that automatically determines the system type. 
+There is a single optional parameter, <code>--prefix</code> which indicates
+the directory tree where the software should be installed.  For example,
+
+<pre class="example">     ./configure --prefix=/opt/free
+</pre>
+   <p>will install the <code>chronyd</code> daemon into /opt/free/sbin and the
+chronyc control program into /opt/free/bin.  The default value for the
+prefix is /usr/local.
+
+   <p>The configure script assumes you want to use gcc as your compiler. 
+If you want to use a different compiler, you can configure this way:
+
+<pre class="example">     CC=cc CFLAGS=-O ./configure --prefix=/opt/free
+</pre>
+   <p>for Bourne-family shells, or
+
+<pre class="example">     setenv CC cc
+     setenv CFLAGS -O
+     ./configure --prefix=/opt/free
+</pre>
+   <p>for C-family shells.
+
+   <p>If the software cannot (yet) be built on your system, an error message
+will be shown.  Otherwise, <samp><span class="file">Makefile</span></samp> will be generated.
+
+   <p>If editline or readline library is available, chronyc will be built with line
+editing support.  If you don't want this, specify the &ndash;disable-readline flag
+to configure.  Please refer to see <a href="#line-editing-support">line editing support</a> for more information.
+
+   <p>If a <samp><span class="file">timepps.h</span></samp> header is available, chronyd will be built with PPS API
+reference clock driver.  If the header is installed in a location that isn't
+normally searched by the compiler, you can add it to the searched locations by
+setting <code>CPPFLAGS</code> variable to <code>-I/path/to/timepps</code>.
+
+   <p>Now type
+
+<pre class="example">     make
+</pre>
+   <p>to build the programs.
+
+   <p>If you want to build the manual in plain text, HTML and info versions, type
+
+<pre class="example">     make docs
+</pre>
+   <p>Once the programs have been successfully compiled, they need to be
+installed in their target locations.  This step normally needs to be
+performed by the superuser, and requires the following command to be
+entered.
+
+<pre class="example">     make install
+</pre>
+   <p>This will install the binaries, plain text manual and manpages.
+
+   <p>To install the HTML and info versions of the manual as well, enter the command
+
+<pre class="example">     make install-docs
+</pre>
+   <p>If you want chrony to appear in the top level info directory listing, you need
+to run the <samp><span class="command">install-info</span></samp> command manually after this step. 
+<samp><span class="command">install-info</span></samp> takes 2 arguments.  The first is the path to the
+<samp><span class="file">chrony.info</span></samp> file you have just installed.  This will be the argument you
+gave to &ndash;prefix when you configured (<samp><span class="file">/usr/local</span></samp> by default), with
+<samp><span class="file">/share/info/chrony.info</span></samp> on the end.  The second argument is the location of
+the file called <samp><span class="file">dir</span></samp>.  This will typically be <samp><span class="file">/usr/share/info/dir</span></samp>.  So
+the typical command line would be
+
+<pre class="example">     install-info /usr/local/share/info/chrony.info /usr/share/info/dir
+</pre>
+   <p>Now that the software is successfully installed, the next step is to
+set up a configuration file.  The contents of this depend on the
+network environment in which the computer operates.  Typical scenarios
+are described in the following section of the document. 
+<!-- }}} -->
+
+<ul class="menu">
+<li><a accesskey="1" href="#line-editing-support">line editing support</a>:         If libraries are in a non-standard place
+<li><a accesskey="2" href="#package-builders">package builders</a>:             Extra options useful to package builders
+</ul>
+<!-- {{{ line editing support -->
+<div class="node">
+<a name="line-editing-support"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#package-builders">package builders</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Installation">Installation</a>
+
+</div>
+
+<h3 class="section">2.1 Support for line editing libraries</h3>
+
+<p>Chronyc can be built with support for line editing, this allows you to use the
+cursor keys to replay and edit old commands.  Two libraries are supported which
+provide such functionality, editline and GNU readline.
+
+   <p>Please note that readline since version 6.0 is licensed under GPLv3+ which is
+incompatible with chrony's license GPLv2.  You should use editline instead if
+you don't want to use older readline versions.
+
+   <p>The configure script will automatically enable the line editing support if one
+of the supported libraries is available.  If they are both available, the
+editline library will be used.
+
+   <p>If you don't want to use it (in which case chronyc will use a minimal command
+line interface), invoke configure like this:
+
+<pre class="example">     ./configure --disable-readline other-options...
+</pre>
+   <p>If you have editline, readline or ncurses installed in locations that aren't
+normally searched by the compiler and linker, you need to use extra options:
+
+     <dl>
+<dt>&lsquo;<samp><span class="samp">--with-readline-includes=directory_name</span></samp>&rsquo;<dd>This defines the name of the directory above the one where <samp><span class="file">readline.h</span></samp>
+is.  <samp><span class="file">readline.h</span></samp> is assumed to be in <samp><span class="file">editline</span></samp> or <samp><span class="file">readline</span></samp>
+subdirectory of the named directory.
+
+     <br><dt>&lsquo;<samp><span class="samp">--with-readline-library=directory_name</span></samp>&rsquo;<dd>This defines the directory containing the <samp><span class="file">libedit.a</span></samp> or <samp><span class="file">libedit.so</span></samp>
+file, or <samp><span class="file">libreadline.a</span></samp> or <samp><span class="file">libreadline.so</span></samp> file.
+
+     <br><dt>&lsquo;<samp><span class="samp">--with-ncurses-library=directory_name</span></samp>&rsquo;<dd>This defines the directory containing the <samp><span class="file">libncurses.a</span></samp> or
+<samp><span class="file">libncurses.so</span></samp> file. 
+</dl>
+
+<!-- }}} -->
+<!-- {{{ -->
+<div class="node">
+<a name="package-builders"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#line-editing-support">line editing support</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Installation">Installation</a>
+
+</div>
+
+<h3 class="section">2.2 Extra options for package builders</h3>
+
+<p>The configure and make procedures have some extra options that may be useful if
+you are building a distribution package for chrony.
+
+   <p>The &ndash;infodir=DIR option to configure specifies an install directory
+for the info files.  This overrides the <samp><span class="file">info</span></samp> subdirectory of the
+argument to the &ndash;prefix option.  For example, you might use
+
+<pre class="example">     ./configure --prefix=/usr --infodir=/usr/share/info
+</pre>
+   <p>The &ndash;mandir=DIR option to configure specifies an install directory
+for the man pages.  This overrides the <samp><span class="file">man</span></samp> subdirectory of the
+argument to the &ndash;prefix option.
+
+<pre class="example">     ./configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man
+</pre>
+   <p>to set both options together.
+
+   <p>The final option is the DESTDIR option to the make command.  For example, you
+could use the commands
+
+<pre class="example">     ./configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man
+     make all docs
+     make install DESTDIR=./tmp
+     cd tmp
+     tar cvf - . | gzip -9 &gt; chrony.tar.gz
+</pre>
+   <p>to build a package.  When untarred within the root directory, this will install
+the files to the intended final locations.
+
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ Ch:Typical operating scenarios -->
+<!-- {{{ Chapter top -->
+<div class="node">
+<a name="Typical-scenarios"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Usage-reference">Usage reference</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Installation">Installation</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="chapter">3 Typical operating scenarios</h2>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Computers-on-the-net">Computers on the net</a>:         Your computer is permanently on the Internet (or on
+                                a private network with NTP servers)
+<li><a accesskey="2" href="#Infrequent-connection">Infrequent connection</a>:        You connect to the Internet sometimes (e.g. via a modem)
+<li><a accesskey="3" href="#Isolated-networks">Isolated networks</a>:            You have an isolated network with no reference clocks
+<li><a accesskey="4" href="#Dial_002dup-home-PCs">Dial-up home PCs</a>:             Additional considerations if you turn your computer off
+                                when it's not in use. 
+<li><a accesskey="5" href="#Configuration-options-overview">Configuration options overview</a>:   Overview of some configuration options. 
+</ul>
+<!-- }}} -->
+<!-- {{{ S:Permanent connection -->
+<div class="node">
+<a name="Computers-on-the-net"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Infrequent-connection">Infrequent connection</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Typical-scenarios">Typical scenarios</a>
+
+</div>
+
+<h3 class="section">3.1 Computers connected to the internet</h3>
+
+<p>In this section we discuss how to configure chrony for computers that
+have permanent connections to the internet (or to any network
+containing true NTP servers which ultimately derive their time from a
+reference clock).
+
+   <p>To operate in this mode, you will need to know the names of the NTP
+server machines you wish to use.  You may be able to find names of
+suitable servers by one of the following methods:
+
+     <ul>
+<li>Your institution may already operate servers on its network. 
+Contact your system administrator to find out.
+
+     <li>Your ISP probably has one or more NTP servers available for its
+customers.
+
+     <li>Somewhere under the NTP homepage there is a list of public
+stratum 1 and stratum 2 servers.  You should find one or more servers
+that are near to you &mdash; check that their access policy allows you to
+use their facilities. 
+</ul>
+
+   <p>Assuming that you have found some servers, you need to set up a
+configuration file to run chrony.  The (compiled-in) default location
+for this file is <samp><span class="file">/etc/chrony.conf</span></samp>.  Assuming that your ntp
+servers are called <code>a.b.c</code> and <code>d.e.f</code>, your
+<samp><span class="file">chrony.conf</span></samp> file could contain as a minimum
+
+<pre class="example">     server a.b.c
+     server d.e.f
+     server g.h.i
+</pre>
+   <p>However, you will probably want to include some of the other directives
+described later.  The following directives will be particularly useful :
+<code>driftfile</code>, <code>commandkey</code>, <code>keyfile</code>.  The smallest
+useful configuration file would look something like
+
+<pre class="example">     server a.b.c
+     server d.e.f
+     server g.h.i
+     keyfile /etc/chrony.keys
+     commandkey 1
+     driftfile /etc/chrony.drift
+</pre>
+   <!-- }}} -->
+<!-- {{{ S:Infrequent connection -->
+<div class="node">
+<a name="Infrequent-connection"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Isolated-networks">Isolated networks</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Computers-on-the-net">Computers on the net</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Typical-scenarios">Typical scenarios</a>
+
+</div>
+
+<h3 class="section">3.2 Infrequent connection to true NTP servers</h3>
+
+<p>In this section we discuss how to configure chrony for computers that
+have occasional connections to the internet.
+
+<ul class="menu">
+<li><a accesskey="1" href="#Configuration-for-infrequent-connections">Configuration for infrequent connections</a>:   How to set up the <code>/etc/chrony</code> file
+<li><a accesskey="2" href="#Advising-chronyd-of-internet-availability">Advising chronyd of internet availability</a>:   How to tell chronyd when the link is available
+</ul>
+
+<div class="node">
+<a name="Configuration-for-infrequent-connections"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Advising-chronyd-of-internet-availability">Advising chronyd of internet availability</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Infrequent-connection">Infrequent connection</a>
+
+</div>
+
+<h4 class="subsection">3.2.1 Setting up the configuration file for infrequent connections</h4>
+
+<p>As in the previous section, you will need access to NTP servers on the
+internet.  The same remarks apply for how to find them.
+
+   <p>In this case, you will need some additional configuration to tell
+<code>chronyd</code> when the connection to the internet goes up and down. 
+This saves the program from continuously trying to poll the servers when
+they are inaccessible.
+
+   <p>Again, assuming that your ntp servers are called <code>a.b.c</code> and
+<code>d.e.f</code>, your <samp><span class="file">chrony.conf</span></samp> file would need to contain
+something like
+
+<pre class="example">     server a.b.c
+     server d.e.f
+     server g.h.i
+</pre>
+   <p>However, the following issues need to be addressed:
+
+     <ol type=1 start=1>
+<li>Your computer probably doesn't have DNS access whilst offline to turn
+the machine names into IP addresses. 
+<li>Your computer will keep trying to contact the servers to obtain
+timestamps, even whilst offline.  If you operate a dial-on-demand
+system, things are even worse, because the link to the internet will
+keep getting established.
+        </ol>
+
+   <p>For this reason, it would be better to specify this part of your
+configuration file in the following way:
+
+<pre class="example">     server 1.2.3.4 offline
+     server 5.6.7.8 offline
+     server 9.10.11.12 offline
+</pre>
+   <p>Because numeric IP addresses have been used, the first problem is
+overcome.  The <code>offline</code> keyword indicates that the servers start
+in an offline state, and that they should not be contacted until <code>chronyd</code>
+receives notification that the link to the internet is present.
+
+   <p>An alternative is to use the names of the NTP servers, and put entries for them
+into your <samp><span class="file">/etc/hosts</span></samp> file.  This will be OK as long as &lsquo;<samp><span class="samp">files</span></samp>&rsquo;
+comes before &lsquo;<samp><span class="samp">dns</span></samp>&rsquo; in the &lsquo;<samp><span class="samp">hosts</span></samp>&rsquo; line of the
+<samp><span class="file">/etc/nsswitch.conf</span></samp> file.
+
+   <p>In order to notify <code>chronyd</code> of the presence of the link, you will need to
+be able to log in to it with the program chronyc.  To do this, <code>chronyd</code>
+needs to be configured with an administrator password.  To set up an
+administrator password, you can create a file <samp><span class="file">/etc/chrony.keys</span></samp>
+containing a single line
+
+<pre class="example">     1 xyzzy
+</pre>
+   <p>and add the following line to <samp><span class="file">/etc/chrony.conf</span></samp> (the order of the
+lines does not matter)
+
+<pre class="example">     commandkey 1
+</pre>
+   <p>The smallest useful configuration file would look something like
+
+<pre class="example">     server 1.2.3.4 offline
+     server 5.6.7.8 offline
+     server 9.10.11.12 offline
+     keyfile /etc/chrony.keys
+     commandkey 1
+     driftfile /etc/chrony.drift
+</pre>
+   <p>The next section describes how to tell <code>chronyd</code> when the internet link
+goes up and down.
+
+<div class="node">
+<a name="Advising-chronyd-of-internet-availability"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Configuration-for-infrequent-connections">Configuration for infrequent connections</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Infrequent-connection">Infrequent connection</a>
+
+</div>
+
+<h4 class="subsection">3.2.2 How to tell chronyd when the internet link is available.</h4>
+
+<p>To use this option, you will need to configure a command key in
+<code>chronyd's</code> configuration file <samp><span class="file">/etc/chrony.conf</span></samp>, as described in
+the previous section.
+
+   <p>To tell <code>chronyd</code> when to start and finish sampling the servers, the
+<code>online</code> and <code>offline</code> commands of chronyc need to be used. 
+To give an example of their use, we assume that <code>pppd</code> is the
+program being used to connect to the internet, and that chronyc has been
+installed at its default location <samp><span class="file">/usr/local/bin/chronyc</span></samp>.  We
+also assume that the command key has been set up as described in the
+previous section.
+
+   <p>In the file <samp><span class="file">/etc/ppp/ip-up</span></samp> we add the command sequence
+
+<pre class="example">     /usr/local/bin/chronyc &lt;&lt;EOF
+     password xyzzy
+     online
+     EOF
+</pre>
+   <p>and in the file <samp><span class="file">/etc/ppp/ip-down</span></samp> we add the sequence
+
+<pre class="example">     /usr/local/bin/chronyc &lt;&lt;EOF
+     password xyzzy
+     offline
+     EOF
+</pre>
+   <p><code>chronyd's</code> polling of the servers will now only occur whilst the
+machine is actually connected to the Internet. 
+<!-- }}} -->
+<!-- {{{ S:Isolated networks -->
+<div class="node">
+<a name="Isolated-networks"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Dial_002dup-home-PCs">Dial-up home PCs</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Infrequent-connection">Infrequent connection</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Typical-scenarios">Typical scenarios</a>
+
+</div>
+
+<h3 class="section">3.3 Isolated networks</h3>
+
+<p>In this section we discuss how to configure chrony for computers that
+never have network conectivity to any computer which ultimately derives
+its time from a reference clock.
+
+   <p>In this situation, one computer is selected to be the master timeserver. 
+The other computers are either direct clients of the master, or clients
+of clients.
+
+   <p>The rate value in the master's drift file needs to be set to the average
+rate at which the master gains or loses time.  <code>chronyd</code> includes
+support for this, in the form of the <code>manual</code> directive in the
+configuration file and the <code>settime</code> command in the <code>chronyc</code>
+program.
+
+   <p>If the master is rebooted, <code>chronyd</code> can re-read the drift rate
+from the drift file.  However, the master has no accurate estimate of
+the current time.  To get around this, the system can be configured so
+that the master can initially set itself to a `majority-vote' of
+selected clients' times; this allows the clients to `flywheel' the
+master across its outage.
+
+   <p>A typical configuration file for the master (called <code>master</code>) might
+be (assuming the clients are in the 192.168.165.x subnet and that the
+master's address is 192.168.169.170)
+
+<pre class="example">     driftfile /etc/chrony.drift
+     commandkey 25
+     keyfile /etc/chrony.keys
+     initstepslew 10 client1 client3 client6
+     local stratum 8
+     manual
+     allow 192.168.165
+</pre>
+   <p>For the clients that have to resynchronise the master when it restarts,
+the configuration file might be
+
+<pre class="example">     server master
+     driftfile /etc/chrony.drift
+     logdir /var/log/chrony
+     log measurements statistics tracking
+     keyfile /etc/chrony.keys
+     commandkey 24
+     local stratum 10
+     initstepslew 20 master
+     allow 192.168.169.170
+</pre>
+   <p>The rest of the clients would be the same, except that the <code>local</code>
+and <code>allow</code> directives are not required. 
+<!-- }}} -->
+<!-- {{{ S:Dial-up home PCs -->
+<div class="node">
+<a name="Dial-up-home-PCs"></a>
+<a name="Dial_002dup-home-PCs"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Configuration-options-overview">Configuration options overview</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Isolated-networks">Isolated networks</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Typical-scenarios">Typical scenarios</a>
+
+</div>
+
+<h3 class="section">3.4 The home PC with a dial-up connection</h3>
+
+<ul class="menu">
+<li><a accesskey="1" href="#Dial_002dup-overview">Dial-up overview</a>:             General discussion of how the software operates in this mode
+<li><a accesskey="2" href="#Dial_002dup-configuration">Dial-up configuration</a>:        Typical configuration files
+</ul>
+
+<div class="node">
+<a name="Dial-up-overview"></a>
+<a name="Dial_002dup-overview"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Dial_002dup-configuration">Dial-up configuration</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Dial_002dup-home-PCs">Dial-up home PCs</a>
+
+</div>
+
+<h4 class="subsection">3.4.1 Assumptions/how the software works</h4>
+
+<p>This section considers the home computer which has a dial-up connection. 
+It assumes that Linux is run exclusively on the computer.  Dual-boot
+systems may work; it depends what (if anything) the other system does to
+the system's real-time clock.
+
+   <p>Much of the configuration for this case is discussed earlier
+(see <a href="#Infrequent-connection">Infrequent connection</a>).  This section addresses specifically
+the case of a computer which is turned off between 'sessions'.
+
+   <p>In this case, <code>chronyd</code> relies on the computer's real-time clock
+(RTC) to maintain the time between the periods when it is powered up. 
+The arrangement is shown in the figure below.
+
+<pre class="example">                 trim if required                          PSTN
+           +---------------------------+               +----------+
+           |                           |               |          |
+           v                           |               |          |
+     +---------+                    +-------+       +-----+     +---+
+     | System's|  measure error/    |chronyd|       |modem|     |ISP|
+     |real-time|-------------------&gt;|       |-------|     |     |   |
+     |  clock  |   drift rate       +-------+       +-----+     +---+
+     +---------+                       ^                          |
+           |                           |                          |
+           +---------------------------+                  --o-----o---
+              set time at boot up                           |
+                                                       +----------+
+                                                       |NTP server|
+                                                       +----------+
+</pre>
+   <p>When the computer is connected to the Internet (via the modem),
+<code>chronyd</code> has access to external NTP servers which it makes
+measurements from.  These measurements are saved, and straight-line fits
+are performed on them to provide an estimate of the computer's time
+error and rate of gaining/losing time.
+
+   <p>When the computer is taken offline from the Internet, the best estimate
+of the gain/loss rate is used to free-run the computer until it next
+goes online.
+
+   <p>Whilst the computer is running, <code>chronyd</code> makes measurements of the
+real-time clock (RTC) (via the <samp><span class="file">/dev/rtc</span></samp> interface, which must be
+compiled into the kernel).  An estimate is made of the RTC error at a
+particular RTC second, and the rate at which the RTC gains or loses time
+relative to true time.
+
+   <p>The RTC is fully supported in 2.2, 2.4 and 2.6 kernels.
+
+   <p>On 2.6 kernels, if your motherboard has a HPET, you need to enable the
+&lsquo;<samp><span class="samp">HPET_EMULATE_RTC</span></samp>&rsquo; option in your kernel configuration.  Otherwise, chrony
+will not be able to interact with the RTC device and will give up using it.
+
+   <p>For kernels in the 2.0 series prior to 2.0.32, the kernel was set up to
+trim the RTC every 11 minutes.  This would be disasterous for
+<code>chronyd</code> &ndash; there is no reliable way of synchronising with this
+trimming. For this reason, <code>chronyd</code> only supports the RTC in 2.0
+kernels from v2.0.32 onwards.
+
+   <p>When the computer is powered down, the measurement histories for all the
+NTP servers are saved to files (if the <code>dumponexit</code> directive is
+specified in the configuration file), and the RTC tracking information
+is also saved to a file (if the <code>rtcfile</code> directive has been
+specified).  These pieces of information are also saved if the
+<code>dump</code> and <code>writertc</code> commands respectively are issued through
+<code>chronyc</code>.
+
+   <p>When the computer is rebooted, <code>chronyd</code> reads the current RTC time
+and the RTC information saved at the last shutdown.  This information is
+used to set the system clock to the best estimate of what its time would
+have been now, had it been left running continuously.  The measurement
+histories for the servers are then reloaded.
+
+   <p>The next time the computer goes online, the previous sessions'
+measurements can contribute to the line-fitting process, which gives a
+much better estimate of the computer's gain/loss rate.
+
+   <p>One problem with saving the measurements and RTC data when the machine
+is shut down is what happens if there is a power failure; the most
+recent data will not be saved.  Although <code>chronyd</code> is robust enough
+to cope with this, some performance may be lost.  (The main danger
+arises if the RTC has been changed during the session, with the
+<code>trimrtc</code> command in <code>chronyc</code>.  Because of this,
+<code>trimrtc</code> will make sure that a meaningful RTC file is saved out
+after the change is completed).
+
+   <p>The easiest protection against power failure is to put the <code>dump</code>
+and <code>writertc</code> commands in the same place as the <code>offline</code>
+command is issued to take <code>chronyd</code> offline; because <code>chronyd</code>
+free-runs between online sessions, no parameters will change
+significantly between going offline from the Internet and any power
+failure.
+
+   <p>A final point regards home computers which are left running for extended
+periods and where it is desired to spin down the hard disc when it is
+not in use (e.g. when not accessed for 15 minutes).  <code>chronyd</code> has
+been planned so it supports such operation; this is the reason why the
+RTC tracking parameters are not saved to disc after every update, but
+only when the user requests such a write, or during the shutdown
+sequence.  The only other facility that will generate periodic writes to
+the disc is the <code>log rtc</code> facility in the configuration file; this
+option should not be used if you want your disc to spin down.
+
+<div class="node">
+<a name="Dial-up-configuration"></a>
+<a name="Dial_002dup-configuration"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Dial_002dup-overview">Dial-up overview</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Dial_002dup-home-PCs">Dial-up home PCs</a>
+
+</div>
+
+<h4 class="subsection">3.4.2 Typical configuration files.</h4>
+
+<p>To illustrate how a dial-up home computer might be configured, example
+configuration files are shown in this section.
+
+   <p>For the <samp><span class="file">/etc/chrony.conf</span></samp> file, the following can be used as an
+example.  <em>NOTE : The </em><code>server</code><em> directives are only applicable
+to customers of Demon Internet; users of other ISPs will need to use
+their own ISP's NTP servers or public NTP servers.</em>
+
+<pre class="example">     server 158.152.1.65 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 158.152.1.76 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.159.253.2 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     logdir /var/log/chrony
+     log statistics measurements tracking
+     driftfile /etc/chrony.drift
+     keyfile /etc/chrony.keys
+     commandkey 25
+     maxupdateskew 100.0
+     dumponexit
+     dumpdir /var/log/chrony
+     rtcfile /etc/chrony.rtc
+</pre>
+   <p>With Freeserve as the ISP, I use the following server lines :
+
+<pre class="example">     server 194.152.64.68 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.152.64.35 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.152.64.34 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+</pre>
+   <p>I use <code>pppd</code> for connecting to my ISP.  This runs two scripts
+<samp><span class="file">/etc/ppp/ip-up</span></samp> and <samp><span class="file">/etc/ppp/ip-down</span></samp> when the link goes
+online and offline respectively.
+
+   <p>The relevant part of the <samp><span class="file">/etc/ppp/ip-up</span></samp> file is (with a dummy
+password)
+
+<pre class="example">     /usr/local/bin/chronyc &lt;&lt;EOF
+     password xxxxxxxx
+     online
+     EOF
+</pre>
+   <p>and the relevant part of the <samp><span class="file">/etc/ppp/ip-down</span></samp> script is
+
+<pre class="example">     /usr/local/bin/chronyc &lt;&lt;EOF
+     password xxxxxxxx
+     offline
+     dump
+     writertc
+     EOF
+</pre>
+   <p>(Because they have to contain the administrator password, it would be
+desirable to make the files readable only by root on a multiuser
+machine).
+
+   <p>To start <code>chronyd</code> during the boot sequence, I have the following
+in <samp><span class="file">/etc/rc.d/rc.local</span></samp> (this is a Slackware system)
+
+<pre class="example">     if [ -f /usr/local/sbin/chronyd -a -f /etc/chrony.conf ]; then
+       /usr/local/sbin/chronyd -r -s
+       echo "Start chronyd"
+     fi
+</pre>
+   <p>The placement of this command may be important on some systems.  In
+particular, <code>chronyd</code> may need to be started several seconds (about
+10 as a minimum) before any software that depends on the system clock
+not jumping or moving backwards, depending on the directives in
+<code>chronyd's</code> configuration file.
+
+   <p>For the system shutdown, <code>chronyd</code> should receive a SIGTERM several
+seconds before the final SIGKILL; the SIGTERM causes the measurement
+histories and RTC information to be saved out.  There should be no need
+to add anything to the shutdown sequence, unless (as my system had)
+there is no pause between the SIGTERM and SIGKILL being delivered to the
+remaining processes.  So if you find something like
+
+<pre class="example">     killall5 -15
+     killall5 -9
+</pre>
+   <p>in your <code>/etc/rc.d/rc.0</code> script, you will need to insert a sleep, e.g.
+
+<pre class="example">     killall5 -15
+     sleep 5
+     killall5 -9
+</pre>
+   <p>Otherwise, <code>chronyd</code> will not always save information on shutdown,
+which could be a problem if you don't use <code>dump</code> and
+<code>writertc</code> when you go offline. 
+<!-- }}} -->
+<!-- {{{ S:Other config options -->
+<div class="node">
+<a name="Configuration-options-overview"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Dial_002dup-home-PCs">Dial-up home PCs</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Typical-scenarios">Typical scenarios</a>
+
+</div>
+
+<h3 class="section">3.5 Other important configuration options</h3>
+
+<p>The most common option to include in the configuration file is the
+<code>driftfile</code> option.  One of the major tasks of <code>chronyd</code> is to
+work out how fast or how slow the system clock runs relative to real
+time - e.g. in terms of seconds gained or lost per day.  Measurements
+over a long period are usually required to refine this estimate to an
+acceptable degree of accuracy.  Therefore, it would be bad if
+<code>chronyd</code> had to work the value out each time it is restarted,
+because the system clock would not run so accurately whilst the
+determination is taking place.
+
+   <p>To avoid this problem, <code>chronyd</code> allows the gain or loss rate to be
+stored in a file, which can be read back in when the program is
+restarted.  This file is called the drift file, and might typically be
+stored in <samp><span class="file">/etc/chrony.drift</span></samp>.  By specifying an option like the
+following
+
+<pre class="example">     driftfile /etc/chrony.drift
+</pre>
+   <p>in the configuration file (<samp><span class="file">/etc/chrony.conf</span></samp>), the drift file
+facility will be activated. 
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ Ch:Usage reference -->
+<div class="node">
+<a name="Usage-reference"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Porting-guide">Porting guide</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Typical-scenarios">Typical scenarios</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="chapter">4 Usage reference</h2>
+
+<!-- {{{ Chapter top -->
+<ul class="menu">
+<li><a accesskey="1" href="#Starting-chronyd">Starting chronyd</a>:             Command line options for the daemon
+<li><a accesskey="2" href="#Configuration-file">Configuration file</a>:           Format of the configuration file
+<li><a accesskey="3" href="#Running-chronyc">Running chronyc</a>:              The run-time configuration program
+</ul>
+<!-- }}} -->
+<!-- {{{ S:Starting chronyd -->
+<div class="node">
+<a name="Starting-chronyd"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Configuration-file">Configuration file</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Usage-reference">Usage reference</a>
+
+</div>
+
+<h3 class="section">4.1 Starting chronyd</h3>
+
+<p>If <code>chronyd</code> has been installed to its default location
+<samp><span class="file">/usr/local/sbin/chronyd</span></samp>, starting it is simply a matter of
+entering the command
+
+<pre class="example">     /usr/local/sbin/chronyd
+</pre>
+   <p>Information messages and warnings will be logged to syslog.
+
+   <p>The command line options supported are as follows:
+
+     <dl>
+<dt><code>-d</code><dd>When run in this mode, the program will not detach itself from the
+terminal, and all messages will be sent to the terminal instead of to
+syslog. 
+<br><dt><code>-f &lt;conf-file&gt;</code><dd>This option can be used to specify an alternate location for the
+configuration file (default <samp><span class="file">/etc/chrony.conf</span></samp>). 
+<br><dt><code>-r</code><dd>This option will reload sample histories for each of the servers being
+used.  These histories are created by using the <code>dump</code> command in
+<code>chronyc</code>, or by setting the <code>dumponexit</code> directive in the
+configuration file.  This option is useful if you want to stop and
+restart <code>chronyd</code> briefly for any reason, e.g. to install a new
+version.  However, it only makes sense on systems where the kernel can
+maintain clock compensation whilst not under <code>chronyd's</code> control. 
+The only version where this happens so far is Linux.  On systems where
+this is not the case, e.g. Solaris and SunOS the option should not be
+used. 
+<br><dt><code>-s</code><dd>This option will set the system clock from the computer's real-time
+clock.  This is analogous to supplying the `-s' flag to the
+<samp><span class="file">/sbin/clock</span></samp> program during the Linux boot sequence.
+
+     <p>Support for real-time clocks is limited at present - the criteria are
+described in the section on the <code>rtcfile</code> directive (see <a href="#rtcfile-directive">rtcfile directive</a>).
+
+     <p>If <code>chronyd</code> cannot support the real time clock on your computer,
+this option cannot be used and a warning message will be logged to the
+syslog.
+
+     <p>If used in conjunction with the `-r' flag, <code>chronyd</code> will attempt
+to preserve the old samples after setting the system clock from the real
+time clock.  This can be used to allow <code>chronyd</code> to perform long
+term averaging of the gain or loss rate across system reboots, and is
+useful for dial-up systems that are shut down when not in use.  For this
+to work well, it relies on <code>chronyd</code> having been able to determine
+accurate statistics for the difference between the real time clock and
+system clock last time the computer was on. 
+<br><dt><code>-u &lt;user&gt;</code><dd>When this option is used, chronyd will drop root privileges to the specified
+user.  So far, it works only on Linux when compiled with capabilities support. 
+<br><dt><code>-v</code><dd>This option displays <code>chronyd's</code> version number to the terminal and
+exits. 
+<br><dt><code>-P &lt;priority&gt;</code><dd>This option will select the SCHED_FIFO real-time scheduler at the
+specified priority (which must be between 0 and 100).  This mode is
+supported only on Linux. 
+<br><dt><code>-m</code><dd>This option will lock chronyd into RAM so that it will never be paged
+out.  This mode is only supported on Linux. 
+<br><dt><code>-4</code><dd>With this option hostnames will be resolved only to IPv4 addresses. 
+<br><dt><code>-6</code><dd>With this option hostnames will be resolved only to IPv6 addresses. 
+</dl>
+
+   <p>On systems that support an <samp><span class="file">/etc/rc.local</span></samp> file for starting
+programs at boot time, <code>chronyd</code> can be started from there.
+
+   <p>On systems with a System V style initialisation (e.g. Solaris), a
+suitable start/stop script might be as shown below.  This might be
+placed in the file <samp><span class="file">/etc/rc2.d/S83chrony</span></samp>.
+
+<pre class="example">     #!/bin/sh
+     # This file should have uid root, gid sys and chmod 744
+     #
+     
+     killproc() {            # kill the named process(es)
+             pid=`/usr/bin/ps -e |
+                  /usr/bin/grep -w $1 |
+                  /usr/bin/sed -e 's/^  *//' -e 's/ .*//'`
+             [ "$pid" != "" ] &amp;&amp; kill $pid
+     }
+     
+     case "$1" in
+     
+     'start')
+        if [ -f /opt/free/sbin/chronyd -a -f /etc/chrony.conf ]; then
+          /opt/free/sbin/chronyd
+        fi
+        ;;
+     'stop')
+        killproc chronyd
+        ;;
+     *)
+        echo "Usage: /etc/rc2.d/S83chrony { start | stop }"
+        ;;
+     esac
+</pre>
+   <p>(In both cases, you may want to bear in mind that <code>chronyd</code> can
+step the time when it starts.  There may be other programs started at
+boot time that could be upset by this, so you may need to consider the
+ordering carefully.  However, <code>chronyd</code> will need to start after
+daemons providing services that it may require, e.g. the domain name
+service.) 
+<!-- }}} -->
+<!-- {{{ S:chronyd configuration file -->
+<div class="node">
+<a name="Configuration-file"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Running-chronyc">Running chronyc</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Starting-chronyd">Starting chronyd</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Usage-reference">Usage reference</a>
+
+</div>
+
+<h3 class="section">4.2 The chronyd configuration file</h3>
+
+<!-- {{{ section top -->
+<p>The configuration file is normally called <samp><span class="file">/etc/chrony.conf</span></samp>; in
+fact, this is the compiled-in default. However, other locations can be
+specified with a command line option.
+
+   <p>Each command in the configuration file is placed on a separate line. 
+The following sections describe each of the commands in turn.  The
+directives can occur in any order in the file.
+
+<ul class="menu">
+<li><a accesskey="1" href="#comments-in-config-file">comments in config file</a>:      How to write a comment
+<li><a accesskey="2" href="#acquisitionport-directive">acquisitionport directive</a>:    Set port to use for initial time probes
+<li><a accesskey="3" href="#allow-directive">allow directive</a>:              Give access to NTP clients
+<li><a accesskey="4" href="#bindaddress-directive">bindaddress directive</a>:        Limit the network interface that is used for NTP
+<li><a accesskey="5" href="#bindcmdaddress-directive">bindcmdaddress directive</a>:     Limit the network interface that is used for commands
+<li><a accesskey="6" href="#broadcast-directive">broadcast directive</a>:          Make chronyd act as an NTP broadcast server
+<li><a accesskey="7" href="#cmdallow-directive">cmdallow directive</a>:           Give control access to chronyc on other computers
+<li><a accesskey="8" href="#cmddeny-directive">cmddeny directive</a>:            Deny control access to chronyc on other computers
+<li><a accesskey="9" href="#commandkey-directive">commandkey directive</a>:         Set runtime command key
+<li><a href="#cmdport-directive">cmdport directive</a>:            Set port to use for runtime commanding
+<li><a href="#deny-directive">deny directive</a>:               Deny access to NTP clients
+<li><a href="#driftfile-directive">driftfile directive</a>:          Specify location of file containing drift data
+<li><a href="#dumpdir-directive">dumpdir directive</a>:            Specify directory for dumping measurements
+<li><a href="#dumponexit-directive">dumponexit directive</a>:         Dump measurements when daemon exits
+<li><a href="#initstepslew-directive">initstepslew directive</a>:       Trim the system clock on boot-up. 
+<li><a href="#keyfile-directive">keyfile directive</a>:            Specify location of file containing keys
+<li><a href="#linux_005fhz-directive">linux_hz directive</a>:           Define a non-standard value of the kernel HZ constant
+<li><a href="#linux_005ffreq_005fscale-directive">linux_freq_scale directive</a>:   Define a non-standard value to compensate the kernel frequency bias
+<li><a href="#local-directive">local directive</a>:              Allow unsynchronised machine to act as server
+<li><a href="#log-directive">log directive</a>:                Make daemon log certain sets of information
+<li><a href="#logchange-directive">logchange directive</a>:          Generate syslog messages if large offsets occur
+<li><a href="#logdir-directive">logdir directive</a>:             Specify directory for logging
+<li><a href="#mailonchange-directive">mailonchange directive</a>:       Send email if a clock correction above a threshold occurs
+<li><a href="#makestep-directive">makestep directive</a>:           Step system clock if large correction is needed
+<li><a href="#manual-directive">manual directive</a>:             Allow manual entry using chronyc's settime cmd. 
+<li><a href="#maxupdateskew-directive">maxupdateskew directive</a>:      Stop bad estimates upsetting machine clock
+<li><a href="#noclientlog-directive">noclientlog directive</a>:        Prevent chronyd from gathering data about clients
+<li><a href="#clientloglimit-directive">clientloglimit directive</a>:     Set client log memory limit
+<li><a href="#peer-directive">peer directive</a>:               Specify an NTP peer
+<li><a href="#pidfile-directive">pidfile directive</a>:            Specify the file where chronyd's pid is written
+<li><a href="#port-directive">port directive</a>:               Set port to use for NTP packets
+<li><a href="#refclock-directive">refclock directive</a>:           Specify a reference clock
+<li><a href="#rtcdevice-directive">rtcdevice directive</a>:          Specify name of enhanced RTC device (if not /dev/rtc)
+<li><a href="#rtcfile-directive">rtcfile directive</a>:            Specify the file where real-time clock data is stored
+<li><a href="#rtconutc-directive">rtconutc directive</a>:           Specify that the real time clock keeps UTC not local time
+<li><a href="#server-directive">server directive</a>:             Specify an NTP server
+<li><a href="#sched_005fpriority-directive">sched_priority directive</a>:     Require real-time scheduling and specify a priority for it. 
+<li><a href="#lock_005fall-directive">lock_all directive</a>:           Require that chronyd be locked into RAM.
+
+   </ul>
+<!-- }}} -->
+<!-- {{{ comments in config file -->
+<div class="node">
+<a name="comments-in-config-file"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#acquisitionport-directive">acquisitionport directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.1 Comments in the configuration file</h4>
+
+<p>The configuration file may contain comment lines.  A comment line is any line
+that starts with zero or more spaces followed by any one of the following
+characters:
+     <ul>
+<li>! 
+<li>;
+<li>#
+<li>%
+</ul>
+   Any line with this format will be ignored. 
+<!-- }}} -->
+<!-- {{{ acquisitionport directive -->
+<div class="node">
+<a name="acquisitionport-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#allow-directive">allow directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#comments-in-config-file">comments in config file</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.2 acquisitionport</h4>
+
+<p><code>chronyd</code> uses a separate client-side port for the rapid-fire
+measurements requested with the <code>initstepslew</code> directive
+(see <a href="#initstepslew-directive">initstepslew directive</a>).  Normally, that port is chosen
+arbitrarily by the operating system.  However, you can use
+<code>acquisitionport</code> to explicitly specify a port.  This may be useful
+for getting through firewalls.
+
+   <p>Do not make acquisition and regular NTP service (see <a href="#port-directive">port directive</a>)
+use the same port.
+
+   <p>An example of the <code>acquisitionport</code> command is
+
+<pre class="example">     acquisitionport 1123
+</pre>
+   <p>This would change the port used for rapid queries to udp/1123.  You
+could then persuade the firewall administrator to let that port through. 
+<!-- }}} -->
+<!-- {{{ allow -->
+<div class="node">
+<a name="allow-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#bindaddress-directive">bindaddress directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#acquisitionport-directive">acquisitionport directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.3 allow</h4>
+
+<p>The <code>allow</code> command is used to designate a particular subnet from
+which NTP clients are allowed to access the computer as an NTP server.
+
+   <p>The default is that no clients are allowed access, i.e. <code>chronyd</code>
+operates purely as an NTP client.  If the <code>allow</code> directive is
+used, <code>chronyd</code> will be both a client of its servers, and a server
+to other clients.
+
+   <p>Examples of use of the command are as follows:
+
+<pre class="example">     allow foo.bar.com
+     allow 1.2
+     allow 3.4.5
+     allow 6.7.8/22
+     allow 6.7.8.9/22
+     allow 2001:db8::/32
+     allow 0/0
+     allow ::/0
+     allow
+</pre>
+   <p>The first command allows the named node to be an NTP client of this computer. 
+The second command allows any node with an IPv4 address of the form 1.2.x.y (with
+x and y arbitrary) to be an NTP client of this computer.  Likewise, the third
+command allows any node with an IPv4 address of the form 3.4.5.x to have client
+NTP access.  The fourth and fifth forms allow access from any node with an IPv4
+address of the form 6.7.8.x, 6.7.9.x, 6.7.10.x or 6.7.11.x (with x arbitrary),
+i.e. the value 22 is the number of bits defining the specified subnet.  (In the
+fifth form, the final byte is ignored).  The sixth form is used for IPv6
+addresses.  The seventh and eighth forms allow access by any IPv4 and IPv6 node
+respectively.  The ninth forms allows access by any node (IPv4 or IPv6).
+
+   <p>A second form of the directive, <code>allow all</code>, has a greater effect,
+depending on the ordering of directives in the configuration file.  To
+illustrate the effect, consider the two examples
+
+<pre class="example">     allow 1.2.3.4
+     deny 1.2.3
+     allow 1.2
+</pre>
+   <p>and
+
+<pre class="example">     allow 1.2.3.4
+     deny 1.2.3
+     allow all 1.2
+</pre>
+   <p>In the first example, the effect is the same regardles of what order the
+three directives are given in.  So the 1.2.x.y subnet is allowed access,
+except for the 1.2.3.x subnet, which is denied access, however the host
+1.2.3.4 is allowed access.
+
+   <p>In the second example, the <code>allow all 1.2</code> directives overrides the
+effect of <em>any</em> previous directive relating to a subnet within the
+specified subnet.  Within a configuration file this capability is
+probably rather moot; however, it is of greater use for reconfiguration
+at run-time via <code>chronyc</code> (see <a href="#allow-all-command">allow all command</a>).
+
+   <p>Note, if the <code>initstepslew</code> directive (see <a href="#initstepslew-directive">initstepslew directive</a>) is used in the configuration file, each of the computers
+listed in that directive must allow client access by this computer for
+it to work. 
+<!-- }}} -->
+<!-- {{{ bindaddress -->
+<div class="node">
+<a name="bindaddress-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#bindcmdaddress-directive">bindcmdaddress directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#allow-directive">allow directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.4 bindaddress</h4>
+
+<p>The bindaddress allows you to restrict the network interface to which
+chronyd will listen for NTP packets.  This provides an additional level of
+access restriction above that available through the 'deny' mechanism.
+
+   <p>Suppose you have a local ethernet with addresses in the 192.168.1.0
+subnet together with a dial-up connection.  The ethernet interface's IP
+address is 192.168.1.1.  Suppose (for some reason) you want to block all
+access through the dialup connection (note, this will even block replies
+from servers on the dialup side, so you will not be able to synchronise
+to an external source).  You could add the line
+
+<pre class="example">     bindaddress 192.168.1.1
+</pre>
+   <p>to the configuration file.
+
+   <p>This directive affects NTP (UDP port 123) packets.  If no <code>bindcmdaddress</code>
+directive is present, the address supplied by <code>bindaddress</code> will be used
+to control binding of the command socket (UDP port 323) as well.
+
+   <p>The <code>bindaddress</code> directive has been found to cause problems when used on
+computers that need to pass NTP traffic over multiple network interfaces (e.g. 
+firewalls).  It is, therefore, not particularly useful.  Use of the
+<code>allow</code> and <code>deny</code> directives together with a network firewall is
+more likely to be successful.
+
+   <p>For each of IPv4 and IPv6 protocols, only one <code>bindaddress</code>
+directive can be specified.
+
+<!-- }}} -->
+<!-- {{{ bindcmdaddress -->
+<div class="node">
+<a name="bindcmdaddress-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#broadcast-directive">broadcast directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#bindaddress-directive">bindaddress directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.5 bindcmdaddress</h4>
+
+<p>The bindcmdaddress allows you to restrict the network interface to which
+chronyd will listen for command packets (issued by chronyc).
+
+   <p>Suppose you have a local ethernet with addresses in the 192.168.1.0 subnet
+together with a dial-up connection.  The ethernet interface's IP address is
+192.168.1.1.  Suppose you want to block all access through the dialup
+connection.  You could add the line
+
+<pre class="example">     bindcmdaddress 192.168.1.1
+</pre>
+   <p>to the configuration file.
+
+   <p>The <code>bindcmdaddress</code> directive has been found to cause problems when used
+on computers that need to pass command traffic over multiple network
+interfaces.  It is, therefore, not particularly useful.  Use of the
+<code>cmdallow</code> and <code>cmddeny</code> directives together with a network firewall
+is more likely to be successful.
+
+   <p>For each of IPv4 and IPv6 protocols, only one <code>bindcmdaddress</code>
+directive can be specified.
+
+<!-- }}} -->
+<!-- {{{ broadcast directive -->
+<div class="node">
+<a name="broadcast-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmdallow-directive">cmdallow directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#bindcmdaddress-directive">bindcmdaddress directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.6 broadcast</h4>
+
+<p>The <code>broadcast</code> directive is used to declare a broadcast address to which
+chronyd should send packets in NTP broadcast mode (i.e. make chronyd act as a
+broadcast server).  Broadcast clients on that subnet will be able to
+synchronise.
+
+   <p>The syntax is as follows
+
+<pre class="example">     broadcast 30 192.168.1.255
+     broadcast 60 192.168.2.255 12123
+     broadcast 60 ff02::101
+</pre>
+   <p>In the first example, the destination port defaults to 123/udp (the normal NTP
+port).  In the second example, the destionation port is specified as 12123. 
+The first parameter in each case (30 or 60 respectively) is the interval in
+seconds between broadcast packets being sent.  The second parameter in each
+case is the broadcast address to send the packet to.  This should correspond to
+the broadcast address of one of the network interfaces on the computer where
+chronyd is running.
+
+   <p>You can have more than 1 <code>broadcast</code> directive if you have more than 1
+network interface onto which you wish to send NTP broadcast packets.
+
+   <p>Chronyd itself cannot currently act as a broadcast client; it must always be
+configured as a point-to-point client by defining specific NTP servers and
+peers.  This broadcast server feature is intended for providing a time source
+to other NTP software (e.g. various MS Windows clients).
+
+   <p>If xntpd is used as the broadcast client, it will try to use a point-to-point
+client/server NTP access to measure the round-trip delay.  Thus, the broadcast
+subnet should also be the subject of an <code>allow</code> directive (see <a href="#allow-directive">allow directive</a>). 
+<!-- }}} -->
+<!-- {{{ cmdallow -->
+<div class="node">
+<a name="cmdallow-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmddeny-directive">cmddeny directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#broadcast-directive">broadcast directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.7 cmdallow</h4>
+
+<p>This is similar to the <code>allow</code> directive (see <a href="#allow-directive">allow directive</a>), except
+that it allows control access (rather than NTP client access) to a particular
+subnet or host.  (By 'control access' is meant that chronyc can be run on those
+hosts and successfully connect to chronyd on this computer.)
+
+   <p>The syntax is identical to the <code>allow</code> directive.
+
+   <p>There is also a <code>cmdallow all</code> directive with similar behaviour to the
+<code>allow all</code> directive (but applying to control access in this case, of
+course). 
+<!-- }}} -->
+<!-- {{{ cmddeny -->
+<div class="node">
+<a name="cmddeny-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#commandkey-directive">commandkey directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmdallow-directive">cmdallow directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.8 cmddeny</h4>
+
+<p>This is similar to the <code>cmdallow</code> directive (see <a href="#cmdallow-directive">cmdallow directive</a>),
+except that it denies control access to a particular subnet or host,
+rather than allowing it.
+
+   <p>The syntax is identical.
+
+   <p>There is also a <code>cmddeny all</code> directive with similar behaviour to the
+<code>cmdallow all</code> directive. 
+<!-- }}} -->
+<!-- {{{ commandkey -->
+<div class="node">
+<a name="commandkey-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmdport-directive">cmdport directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmddeny-directive">cmddeny directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.9 commandkey</h4>
+
+<p>The commandkey command is used to set the key number used for
+authenticating user commands via the chronyc program at run time. 
+This allows certain actions of the chronyc program to be restricted to
+administrators.
+
+   <p>An example of the commandkey command is
+
+<pre class="example">     commandkey 20
+</pre>
+   <p>In the key file (see the keyfile command) there should be a line of
+the form
+
+<pre class="example">     20 foobar
+</pre>
+   <p>When running the chronyc program to perform run-time configuration,
+the command
+
+<pre class="example">     password foobar
+</pre>
+   <p>must be entered before any commands affecting the operation of the
+daemon can be entered. 
+<!-- }}} -->
+<!-- {{{ cmdport -->
+<div class="node">
+<a name="cmdport-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#deny-directive">deny directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#commandkey-directive">commandkey directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.10 cmdport</h4>
+
+<p>The <code>cmdport</code> directive allows the port that is used for run-time
+command and monitoring (via the program <code>chronyc</code>) to be altered
+from its default (323/udp).
+
+   <p>An example shows the syntax
+
+<pre class="example">     cmdport 257
+</pre>
+   <p>This would make <code>chronyd</code> use 257/udp as its command port. 
+(<code>chronyc</code> would need to be run with the <code>-p 257</code> switch to
+inter-operate correctly). 
+<!-- }}} -->
+<!-- {{{ deny -->
+<div class="node">
+<a name="deny-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#driftfile-directive">driftfile directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmdport-directive">cmdport directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.11 deny</h4>
+
+<p>This is similar to the <code>allow</code> directive (see <a href="#allow-directive">allow directive</a>),
+except that it denies NTP client access to a particular subnet or host,
+rather than allowing it.
+
+   <p>The syntax is identical.
+
+   <p>There is also a <code>deny all</code> directive with similar behaviour to the
+<code>allow all</code> directive. 
+<!-- }}} -->
+<!-- {{{ driftfile -->
+<div class="node">
+<a name="driftfile-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#dumpdir-directive">dumpdir directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#deny-directive">deny directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.12 driftfile</h4>
+
+<p>One of the main activities of the <code>chronyd</code> program is to work out
+the rate at which the system clock gains or loses time relative to real
+time.
+
+   <p>Whenever <code>chronyd</code> computes a new value of the gain/loss rate, it
+is desirable to record it somewhere.  This allows <code>chronyd</code> to
+begin compensating the system clock at that rate whenever it is
+restarted, even before it has had a chance to obtain an equally good
+estimate of the rate during the new run.  (This process may take many
+minutes, at least).
+
+   <p>The driftfile command allows a file to be specified into which
+<code>chronyd</code> can store the rate information.  Two parameters are
+recorded in the file.  The first is the rate at which the system clock
+gains or loses time, expressed in parts per million, with gains
+positive.  Therefore, a value of 100.0 indicates that when the system
+clock has advanced by a second, it has gained 100 microseconds on
+reality (so the true time has only advanced by 999900 microseconds). 
+The second is an estimate of the error bound around the first value in
+which the true rate actually lies.
+
+   <p>An example of the driftfile command is
+
+<pre class="example">     driftfile /etc/chrony.drift
+</pre>
+   <!-- }}} -->
+<!-- {{{ dumpdir -->
+<div class="node">
+<a name="dumpdir-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#dumponexit-directive">dumponexit directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#driftfile-directive">driftfile directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.13 dumpdir</h4>
+
+<p>To compute the rate of gain or loss of time, <code>chronyd</code> has to store
+a measurement history for each of the time sources it uses.
+
+   <p>Certain systems (so far only Linux) have operating system support for
+setting the rate of gain or loss to compensate for known errors.  (On
+other systems, <code>chronyd</code> must simulate such a capability by
+periodically slewing the system clock forwards or backwards by a
+suitable amount to compensate for the error built up since the previous
+slew).
+
+   <p>For such systems, it is possible to save the measurement history across
+restarts of <code>chronyd</code> (assuming no changes are made to the system
+clock behaviour whilst it is not running).  If this capability is to be
+used (via the dumponexit command in the configuration file, or the dump
+command in chronyc), the dumpdir command should be used to define the
+directory where the measurement histories are saved.
+
+   <p>An example of the command is
+
+<pre class="example">     dumpdir /var/log/chrony
+</pre>
+   <p>A source whose reference id (the IP address for IPv4 sources) is
+1.2.3.4 would have its measurement history saved in the file
+<samp><span class="file">/var/log/chrony/1.2.3.4.dat</span></samp>. 
+<!-- }}} -->
+<!-- {{{ dumponexit -->
+<div class="node">
+<a name="dumponexit-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#initstepslew-directive">initstepslew directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#dumpdir-directive">dumpdir directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.14 dumponexit</h4>
+
+<p>If this command is present, it indicates that <code>chronyd</code> should save
+the measurement history for each of its time sources recorded whenever
+the program exits.  (See the dumpdir command above). 
+<!-- }}} -->
+<!-- {{{ initstepslew -->
+<div class="node">
+<a name="initstepslew-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#keyfile-directive">keyfile directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#dumponexit-directive">dumponexit directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.15 initstepslew</h4>
+
+<p>In normal operation, <code>chronyd</code> always slews the time when it needs to
+adjust the system clock.  For example, to correct a system clock which
+is 1 second slow, <code>chronyd</code> slightly increases the amount by which the
+system clock is advanced on each clock interrupt, until the error is
+removed.  (Actually, this is done by calling the <code>adjtime()</code> or
+similar system function which does it for us.)  Note that at no time
+does time run backwards with this method.
+
+   <p>On most Unix systems it is not desirable to step the system clock,
+because many programs rely on time advancing monotonically forwards.
+
+   <p>When the <code>chronyd</code> daemon is initially started, it is possible that the
+system clock is considerably in error.  Attempting to correct such an
+error by slewing may not be sensible, since it may take several hours
+to correct the error by this means.
+
+   <p>The purpose of the <code>initstepslew</code> directive is to allow <code>chronyd</code> to
+make a rapid measurement of the system clock error at boot time, and to
+correct the system clock by stepping before normal operation begins. 
+Since this would normally be performed only at an appropriate point in
+the system boot sequence, no other software should be adversely affected
+by the step.
+
+   <p>If the correction required is less than a specified threshold, a slew is
+used instead.  This makes it easier to restart <code>chronyd</code> whilst the
+system is in normal operation.
+
+   <p>The <code>initstepslew</code> directive takes a threshold and a list of NTP
+servers as arguments.  A maximum of 8 will be used.  Each of the servers
+is rapidly polled several times, and a majority voting mechanism used to
+find the most likely range of system clock error that is present.  A
+step (or slew) is applied to the system clock to correct this error. 
+<code>chronyd</code> then enters its normal operating mode (where only slews are
+used).
+
+   <p>An example of use of the command is
+
+<pre class="example">     initstepslew 30 foo.bar.com baz.quz.com
+</pre>
+   <p>where 2 NTP servers are used to make the measurement.  The <code>30</code>
+indicates that if the system's error is found to be 30 seconds or less,
+a slew will be used to correct it; if the error is above 30 seconds, a
+step will be used.
+
+   <p>The <code>initstepslew</code> directive can also be used in an isolated LAN
+environment, where the clocks are set manually.  The most stable
+computer is chosen as the master, and the other computers are slaved to
+it.  If each of the slaves is configured with the local option (see
+below), the master can be set up with an <code>initstepslew</code> directive
+which references some or all of the slaves.  Then, if the master machine
+has to be rebooted, the slaves can be relied on to 'flywheel' the time
+for the master. 
+<!-- }}} -->
+<!-- {{{ keyfile -->
+<div class="node">
+<a name="keyfile-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#linux_005fhz-directive">linux_hz directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#initstepslew-directive">initstepslew directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.16 keyfile</h4>
+
+<p>This command is used to specify the location of the file containing
+ID/key pairs for the following 2 uses:
+
+     <ul>
+<li>Authentication of NTP packets. 
+<li>Authentication of administrator commands entered via chronyc. 
+</ul>
+
+   <p>The format of the command is shown in the example below
+
+<pre class="example">     keyfile /etc/chrony.keys
+</pre>
+   <p>The argument is simply the name of the file containing the ID/key
+pairs.  The format of the file is shown below
+
+<pre class="example">     10 tulip
+     11 hyacinth
+     20 crocus
+     25 iris
+      ...
+</pre>
+   <p>Each line consists of an ID and a password.  The ID can be any
+unsigned integer in the range 0 through 2**32-1.  The password can be
+any string of characters not containing a space.
+
+   <p>For NTP use, the MD5 authentication scheme is always used.  This must be
+borne in mind if <code>chronyd</code> is to inter-operate in authenticated
+mode with <code>xntpd</code> running on other computers.
+
+   <p>The ID for the chronyc authentication key is specified with the
+commandkey command (see earlier). 
+<!-- }}} -->
+<!-- {{{ local -->
+<div class="node">
+<a name="local-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#log-directive">log directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#linux_005ffreq_005fscale-directive">linux_freq_scale directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.17 local</h4>
+
+<p>The local keyword is used to allow <code>chronyd</code> to appear synchronised
+to real time (from the viewpoint of clients polling it), even if it has
+no current synchronisation source.
+
+   <p>This option is normally used on computers in an isolated network,
+where several computers are required to synchronise to one other, this
+being the "master" which is kept vaguely in line with real time by
+manual input.
+
+   <p>An example of the command is
+
+<pre class="example">     local stratum 10
+</pre>
+   <p>The value 10 may be substituted with other values in the range 1
+through 15.  Stratum 1 indicates a computer that has a true real-time
+reference directly connected to it (e.g. GPS, atomic clock etc)
+&amp;ndash; such computers are expected to be very close to real time. 
+Stratum 2 computers are those which have a stratum 1 server; stratum 3
+computers have a stratum 2 server and so on.
+
+   <p>A large value of 10 indicates that the clock is so many hops away from
+a reference clock that its time is fairly unreliable.  Put another
+way, if the computer ever has access to another computer which is
+ultimately synchronised to a reference clock, it will almost certainly
+be at a stratum less than 10.  Therefore, the choice of a high value
+like 10 for the local command prevents the machine's own time from
+ever being confused with real time, were it ever to leak out to
+clients that have visibility of real servers. 
+<!-- }}} -->
+<!-- {{{ linux_hz -->
+<div class="node">
+<a name="linux_hz-directive"></a>
+<a name="linux_005fhz-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#linux_005ffreq_005fscale-directive">linux_freq_scale directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#keyfile-directive">keyfile directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.18 linux_hz</h4>
+
+<p>(This option only applies to Linux).
+
+   <p>By default, chronyd will find the value of <code>HZ</code> from a kernel header file
+at compile time.  <code>HZ</code> is the nominal number of timer interrupts per
+second.  If you're running chronyd on the system where it was built, the value
+it has should be right, and you don't need to worry about this option.
+
+   <p>This option is provided for people who move a pre-built chronyd onto a system
+where the value of HZ in the kernel headers has been changed from the default
+value.
+
+   <p>An example of the command is
+
+<pre class="example">     linux_hz 100
+</pre>
+   <!-- }}} -->
+<!-- {{{ linux_freq_scale -->
+<div class="node">
+<a name="linux_freq_scale-directive"></a>
+<a name="linux_005ffreq_005fscale-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#local-directive">local directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#linux_005fhz-directive">linux_hz directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.19 linux_freq_scale</h4>
+
+<p>(This option only applies to Linux).
+
+   <p>By default, chronyd will find the value of <code>HZ</code> and <code>SHIFT_HZ</code> from
+kernel header files at compile time.  An internal value called
+<code>freq_scale</code> is calculated from this.  By default it is (1&lt;&lt;SHIFT_HZ)/HZ,
+except for the case HZ=100, when special case code is used which leads to the
+value 128/128.125.  If you're running chronyd on the system where it was built,
+the value it has should be right, and you don't need to worry about this
+option.
+
+   <p>This option is provided for people who move a pre-built chronyd onto a system
+where the method by which the kernel computes the reciprocal of this value has been changed or where the HZ and SHIFT_HZ constants differ from those on the system where chronyd was built.
+
+   <p>An example of the command is
+
+<pre class="example">     linux_freq_scale 0.99902439
+</pre>
+   <!-- }}} -->
+<!-- {{{ log -->
+<div class="node">
+<a name="log-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#logchange-directive">logchange directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#local-directive">local directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.20 log</h4>
+
+<!-- {{{ section top -->
+<p>The log command indicates that certain information is to be logged.
+
+     <dl>
+<dt><code>measurements</code><dd>This option logs the raw NTP measurements and related information to a
+file called measurements.log.
+
+     <br><dt><code>statistics</code><dd>This option logs information about the regression processing to a file
+called statistics.log.
+
+     <br><dt><code>tracking</code><dd>This option logs changes to the estimate of the system's gain or loss
+rate, and any slews made, to a file called tracking.log.
+
+     <br><dt><code>rtc</code><dd>This option logs information about the system's real-time clock.
+
+     <br><dt><code>refclocks</code><dd>This option logs the raw reference clock measurements to a file
+called refclocks.log. 
+</dl>
+
+   <p>The files are written to the directory specified by the logdir
+command.
+
+   <p>An example of the command is
+
+<pre class="example">     log measurements statistics tracking
+</pre>
+   <ul class="menu">
+<li><a accesskey="1" href="#measurements-log">measurements log</a>:             The format of the measurements log
+<li><a accesskey="2" href="#statistics-log">statistics log</a>:               The format of the statistics log
+<li><a accesskey="3" href="#tracking-log">tracking log</a>:                 The format of the tracking log
+<li><a accesskey="4" href="#RTC-log">RTC log</a>:                      The format of the RTC log
+<li><a accesskey="5" href="#refclocks-log">refclocks log</a>:                The format of the refclocks log
+</ul>
+<!-- }}} -->
+<!-- {{{ measurements.log -->
+<div class="node">
+<a name="measurements-log"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#statistics-log">statistics log</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#log-directive">log directive</a>
+
+</div>
+
+<h5 class="subsubsection">4.2.20.1 Measurements log file format</h5>
+
+<p>An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+<pre class="example">     1998-07-22 05:40:50 158.152.1.76    N  8 1111 11 1111 10 10  1 \
+        -4.966e-03  2.296e-01  1.577e-05  1.615e-01  7.446e-03
+</pre>
+   <p>The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+     <ol type=1 start=1>
+<li>Date [1998-07-22]
+<li>Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+expressed in UTC, not the local time zone. 
+<li>IP address of server/peer from which measurement comes [158.152.1.76]
+<li>Leap status (<code>N</code> means normal, <code>+</code> means that the last minute
+of today has 61 seconds, <code>-</code> means that the last minute of the day
+has 59 seconds, <code>?</code> means the remote computer is not currently
+synchronised.) [N]
+<li>Stratum of remote computer. [2]
+<li>RFC1305 tests 1 through 4 (1=pass, 0=fail) [1111]
+<li>Tests for maximum delay and maximum delay ratio, against user defined
+parameters (1=pass, 0=fail) [11]
+<li>RFC1305 tests 5 through 8 (1=pass, 0=fail) [1111]
+<li>Local poll [10]
+<li>Remote poll [10]
+<li>`Score' (an internal score within each polling level used to decide when
+to increase or decrease the polling level.  This is adjusted based on
+changes to the variance of the measurements obtained from the source). [1]
+<li>The estimated local clock error (`theta' in RFC1305).  Positive indicates that the local clock is slow. [-4.966e-03]. 
+<li>The peer delay (`delta' in RFC1305). [2.296e-01]
+<li>The peer dispersion (`epsilon' in RFC1305). [1.577e-05]
+<li>The root delay (`Delta' in RFC1305). [1.615e-01]
+<li>The root dispersion (`E' in RFC1305). [7.446e-03]
+        </ol>
+
+   <p>A banner is periodically written to the log file to indicate the
+meanings of the columns. 
+<!-- }}} -->
+<!-- {{{ statistics.log -->
+<div class="node">
+<a name="statistics-log"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#tracking-log">tracking log</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#measurements-log">measurements log</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#log-directive">log directive</a>
+
+</div>
+
+<h5 class="subsubsection">4.2.20.2 Statistics log file format</h5>
+
+<p>An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+<pre class="example">     1998-07-22 05:40:50 158.152.1.76     6.261e-03 -3.247e-03 \
+          2.220e-03  1.874e-06  1.080e-06 7.8e-02  16   0   8
+</pre>
+   <p>The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+     <ol type=1 start=1>
+<li>Date [1998-07-22]
+<li>Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+expressed in UTC, not the local time zone. 
+<li>IP address of server/peer from which measurement comes [158.152.1.76]
+<li>The estimated standard deviation of the measurements from the source (in
+seconds). [6.261e-03]
+<li>The estimated offset of the source (in seconds, positive means the local
+clock is estimated to be fast, in this case). [-3.247e-03]
+<li>The estimated standard deviation of the offset estimate (in
+seconds). [2.220e-03]
+<li>The estimated rate at which the local clock is gaining or losing time
+relative to the source (in seconds per second, positive means the local
+clock is gaining).  This is relative to the compensation currently being
+applied to the local clock, <em>not</em> to the local clock without any
+compensation. [1.874e-06]
+<li>The estimated error in the rate value (in seconds per
+second). [1.080e-06]. 
+<li>The ration of |old_rate - new_rate| / old_rate_error.  Large values
+indicate the statistics are not modelling the source very well. [7.8e-02]
+<li>The number of measurements currently being used for the regression
+algorithm. [16]
+<li>The new starting index (the oldest sample has index 0; this is the
+method used to prune old samples when it no longer looks like the
+measurements fit a linear model). [0, i.e. no samples discarded this
+time]
+<li>The number of runs.  The number of runs of regression residuals with the
+same sign is computed.  If this is too small it indicates that the
+measurements are no longer represented well by a linear model and that
+some older samples need to be discarded.  The number of runs for the
+data that is being retained is tabulated.  Values of approximately half
+the number of samples are expected. [8]
+        </ol>
+
+   <p>A banner is periodically written to the log file to indicate the
+meanings of the columns. 
+<!-- }}} -->
+<!-- {{{ tracking.log -->
+<div class="node">
+<a name="tracking-log"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#RTC-log">RTC log</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#statistics-log">statistics log</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#log-directive">log directive</a>
+
+</div>
+
+<h5 class="subsubsection">4.2.20.3 Tracking log file format</h5>
+
+<p>An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+<pre class="example">     1998-07-22 05:40:50 158.152.1.76     3    340.529      1.606  1.046e-03
+</pre>
+   <p>The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+     <ol type=1 start=1>
+<li>Date [1998-07-22]
+<li>Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+expressed in UTC, not the local time zone. 
+<li>The IP address of the server/peer to which the local system is
+synchronised. [158.152.1.76]
+<li>The stratum of the local system. [3]
+<li>The local system frequency (in ppm, positive means the local system runs
+fast of UTC). [340.529]
+<li>The error bounds on the frequency (in ppm) [1.606]
+<li>The estimated local offset at the epoch (which is rapidly corrected by
+slewing the local clock.  (In seconds, positive indicates the local
+system is fast of UTC). [1.046e-3]
+        </ol>
+
+   <p>A banner is periodically written to the log file to indicate the
+meanings of the columns. 
+<!-- }}} -->
+<!-- {{{ rtc.log -->
+<div class="node">
+<a name="RTC-log"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#refclocks-log">refclocks log</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#tracking-log">tracking log</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#log-directive">log directive</a>
+
+</div>
+
+<h5 class="subsubsection">4.2.20.4 Real-time clock log file format</h5>
+
+<p>An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+<pre class="example">     1998-07-22 05:40:50     -0.037360 1       -0.037434\
+               -37.948  12   5  120
+</pre>
+   <p>The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+     <ol type=1 start=1>
+<li>Date [1998-07-22]
+<li>Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+expressed in UTC, not the local time zone. 
+<li>The measured offset between the system's real time clock and the system
+(<code>gettimeofday()</code>) time.  In seconds, positive indicates that the
+RTC is fast of the system time. [-0.037360]. 
+<li>Flag indicating whether the regression has produced valid
+coefficients. (1 for yes, 0 for no). [1]
+<li>Offset at the current time predicted by the regression process.  A large
+difference between this value and the measured offset tends to indicate
+that the measurement is an outlier with a serious measurement
+error. [-0.037434]. 
+<li>The rate at which the RTC is losing or gaining time relative to the
+system clock.  In ppm, with positive indicating that the RTC is gaining
+time. [-37.948]
+<li>The number of measurements used in the regression. [12]
+<li>The number of runs of regression residuals of the same sign.  Low values
+indicate that a straight line is no longer a good model of the measured
+data and that older measurements should be discarded. [5]
+<li>The measurement interval used prior to the measurement being made (in
+seconds). [120]
+        </ol>
+
+   <p>A banner is periodically written to the log file to indicate the
+meanings of the columns. 
+<!-- }}} -->
+<!-- {{{ refclocks.log -->
+<div class="node">
+<a name="refclocks-log"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#RTC-log">RTC log</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#log-directive">log directive</a>
+
+</div>
+
+<h5 class="subsubsection">4.2.20.5 Refclocks log file format</h5>
+
+<p>An example line (which actually appears as a single line in the file)
+from the refclocks log file is shown below.
+
+<pre class="example">     2009-11-30 14:33:27.000000 PPS2    7 N 1  4.900000e-07 -6.741777e-07
+</pre>
+   <p>The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+     <ol type=1 start=1>
+<li>Date [2009-11-30]
+<li>Hour:Minute:Second.Microsecond [14:33:27.000000].  Note that the
+date/time pair is expressed in UTC, not the local time zone. 
+<li>Reference ID of refclock from which measurement comes. [PPS2]
+<li>Sequence number of driver poll within one polling interval. [7]
+<li>Leap status (<code>N</code> means normal, <code>+</code> means that the last minute
+of today has 61 seconds, <code>-</code> means that the last minute of the day
+has 59 seconds). [N]
+<li>Flag indicating whether the sample comes from PPS source. (1 for yes,
+0 for no). [1]
+<li>Local clock error measured by refclock driver. [4.900000e-07]
+<li>Local clock error with applied corrections.  Positive indicates
+that the local clock is slow. [-6.741777e-07]
+        </ol>
+
+   <p>A banner is periodically written to the log file to indicate the
+meanings of the columns. 
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ logchange -->
+<div class="node">
+<a name="logchange-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#logdir-directive">logdir directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#log-directive">log directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.21 logchange</h4>
+
+<p>This directive forces <code>chronyd</code> to send a message to syslog if it
+makes a system clock adjustment larger than a threshold value.  An
+example of use is
+
+<pre class="example">     logchange 0.5
+</pre>
+   <p>which would cause a syslog message to be generated a system clock error
+of over 0.5 seconds starts to be compensated.
+
+   <p>Clock errors detected either via NTP packets or via timestamps entered
+via the <code>settime</code> command of <code>chronyc</code> are logged.
+
+   <p>This directive assumes that syslog messages are appearing where somebody
+can see them.  This allows that person to see if a large error has
+arisen, e.g. because of a fault, or because of faulty timezone handling,
+for example when summer time (daylight saving) starts or ends. 
+<!-- }}} -->
+<!-- {{{ logdir -->
+<div class="node">
+<a name="logdir-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#mailonchange-directive">mailonchange directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#logchange-directive">logchange directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.22 logdir</h4>
+
+<p>This directive allows the directory where log files are written to be
+specified.
+
+   <p>An example of the use of this directive is
+
+<pre class="example">     logdir /var/log/chrony
+</pre>
+   <!-- }}} -->
+<!-- {{{ mailonchange -->
+<div class="node">
+<a name="mailonchange-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#makestep-directive">makestep directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#logdir-directive">logdir directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.23 mailonchange</h4>
+
+<p>This directive defines an email address to which mail should be sent if
+chronyd applies a correction exceeding a particular threshold to the
+system clock.
+
+   <p>An example of use of this directive is
+
+<pre class="example">     mailonchange root@localhost 0.5
+</pre>
+   <p>This would send a mail message to root if a change of more than 0.5
+seconds were applied to the system clock. 
+<!-- }}} -->
+<!-- {{{ makestep -->
+<div class="node">
+<a name="makestep-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#manual-directive">manual directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#mailonchange-directive">mailonchange directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.24 makestep</h4>
+
+<p>Normally chronyd will cause the system to gradually correct any time
+offset, by slowing down or speeding up the clock as required.  In
+certain situations, the system clock may be so far adrift that this
+slewing process would take a very long time to correct the system clock.
+
+   <p>This directive forces <code>chronyd</code> to step system clock if the
+adjustment is larger than a threshold value, but only if there were no
+more clock updates since <code>chronyd</code> was started than a specified
+limit (a negative value can be used to disable the limit).
+
+   <p>This is particularly useful when using reference clocks, because the
+<code>initstepslew</code> directive (see <a href="#initstepslew-directive">initstepslew directive</a>) works
+only with NTP sources.
+
+   <p>An example of the use of this directive is
+
+<pre class="example">     makestep 1000 10
+</pre>
+   <p>This would step system clock if the adjustment is larger than 1000
+seconds, but only in the first ten clock updates. 
+<!-- }}} -->
+<!-- {{{ manual -->
+<div class="node">
+<a name="manual-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#maxupdateskew-directive">maxupdateskew directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#makestep-directive">makestep directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.25 manual</h4>
+
+<p>The <code>manual</code> directive enables support at run-time for the
+<code>settime</code> command in chronyc (see <a href="#settime-command">settime command</a>).  If no
+<code>manual</code> directive is included, any attempt to use the
+<code>settime</code> command in chronyc will be met with an error message.
+
+   <p>Note that the <code>settime</code> command can be enabled at run-time using
+the <code>manual</code> command in chronyc (see <a href="#manual-command">manual command</a>).  (The
+idea of the two commands is that the <code>manual</code> command controls the
+manual clock driver's behaviour, whereas the <code>settime</code> command
+allows samples of manually entered time to be provided). 
+<!-- }}} -->
+<!-- {{{ maxupdateskew -->
+<div class="node">
+<a name="maxupdateskew-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#noclientlog-directive">noclientlog directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#manual-directive">manual directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.26 maxupdateskew</h4>
+
+<p>One of <code>chronyd's</code> tasks is to work out how fast or slow the computer's
+clock runs relative to its reference sources.  In addition, it computes
+an estimate of the error bounds around the estimated value.
+
+   <p>If the range of error is too large, it probably indicates that the
+measurements have not settled down yet, and that the estimated gain or
+loss rate is not very reliable.
+
+   <p>The <code>maxupdateskew</code> parameter allows the threshold for determining
+whether an estimate may be so unreliable that it should not be used.
+
+   <p>The syntax is
+
+<pre class="example">     maxupdateskew &lt;skew-in-ppm&gt;
+</pre>
+   <p>Typical values for &lt;skew-in-ppm&gt; might be 100 for a dial-up connection
+to servers over a phone line, and 5 or 10 for a computer on a LAN.
+
+   <p>It should be noted that this is not the only means of protection against
+using unreliable estimates.  At all times, <code>chronyd</code> keeps track of
+both the estimated gain or loss rate, and the error bound on the
+estimate.  When a new estimate is generated following another
+measurement from one of the sources, a weighted combination algorithm is
+used to update the master estimate.  So if <code>chronyd</code> has an existing
+highly-reliable master estimate and a new estimate is generated which
+has large error bounds, the existing master estimate will dominate in
+the new master estimate. 
+<!-- }}} -->
+<!-- {{{ noclientlog -->
+<div class="node">
+<a name="noclientlog-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#clientloglimit-directive">clientloglimit directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#maxupdateskew-directive">maxupdateskew directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.27 noclientlog</h4>
+
+<p>This directive, which takes no arguments, specifies that client accesses
+are not to be logged.  Normally they are logged, allowing statistics to
+be reported using the <code>clients</code> command in <code>chronyc</code>. 
+<!-- }}} -->
+<!-- {{{ clientloglimit -->
+<div class="node">
+<a name="clientloglimit-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#peer-directive">peer directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#noclientlog-directive">noclientlog directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.28 clientloglimit</h4>
+
+<p>This directive specifies the maximum size of the memory allocated to
+log client accesses.  When the limit is reached, only information for
+clients that have already been logged will be updated.  If 0 is
+specified, the memory size will be unlimited.  The default is 524288
+bytes.
+
+   <p>An example of the use of this directive is
+
+<pre class="example">     clientloglimit 1048576
+</pre>
+   <!-- }}} -->
+<!-- {{{ peer -->
+<div class="node">
+<a name="peer-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#pidfile-directive">pidfile directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#clientloglimit-directive">clientloglimit directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.29 peer</h4>
+
+<p>The syntax of this directive is identical to that for the <code>server</code>
+directive (see <a href="#server-directive">server directive</a>), except that it is used to specify
+an NTP peer rather than an NTP server. 
+<!-- }}} -->
+<!-- {{{ pidfile -->
+<div class="node">
+<a name="pidfile-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#port-directive">port directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#peer-directive">peer directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.30 pidfile</h4>
+
+<p>chronyd always writes its process ID (pid) to a file, and checks this file on startup to see if another chronyd may already be running on the system.  By default, the file used is <code>/var/run/chronyd.pid</code>.  The <code>pidfile</code> directive allows the name to be changed, e.g.
+
+<pre class="example">     pidfile /var/tmp/chronyd.pid
+</pre>
+   <!-- }}} -->
+<!-- {{{ port -->
+<div class="node">
+<a name="port-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#refclock-directive">refclock directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#pidfile-directive">pidfile directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.31 port</h4>
+
+<p>This option allows you to configure the port used for the NTP service
+on your machine.
+
+   <p>The compiled in default is udp/123, the standard NTP port.  It is
+unlikely that you would ever need to change this value.  A possible
+exception would be if you wanted to operate strictly in client-only
+mode and never be available as a server to xntpd clients.
+
+   <p>An example of the port command is
+
+<pre class="example">     port 11123
+</pre>
+   <p>This would change the NTP port served by chronyd on the computer to
+udp/11123. 
+<!-- }}} -->
+<!-- {{{ refclock -->
+<div class="node">
+<a name="refclock-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#rtcdevice-directive">rtcdevice directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#port-directive">port directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.32 refclock</h4>
+
+<p>The <code>refclock</code> directive allows reference clocks to be specified. 
+The directive is immediately followed by a refclock driver name and
+its parameter.
+
+   <p>There are currently three drivers implemented:
+
+     <dl>
+<dt><code>PPS</code><dd>Pulse per second (PPS) API driver.  The parameter is a path to the PPS
+device.  Assert events are used by default.  Driver option
+<code>:clear</code> can be appended to the path to use clear events instead.
+
+     <p>PPS refclock needs another source (NTP or non-PPS refclock) or local
+directive (see <a href="#local-directive">local directive</a>) enabled to function.  For example:
+
+     <pre class="example">          refclock SHM 0 offset 0.5 delay 0.1
+          refclock PPS /dev/pps0
+</pre>
+     <br><dt><code>SHM</code><dd>NTP shared memory driver.  The parameter is the number of the
+shared memory segment that should be used for receiving timestamps, usually
+0, 1, 2 or 3.  For example:
+
+     <pre class="example">          refclock SHM 1 poll 3 refid GPS1
+</pre>
+     <p>A driver option in form <code>:perm=NNN</code> can be appended to the
+segment number to create the segment with permissions other than the
+default <code>0600</code>.
+
+     <p>Software that can be used as a source of reference time includes
+<code>gpsd</code> and <code>shmpps</code>. 
+<br><dt><code>SOCK</code><dd>Unix domain socket driver.  The parameter is a path to the socket
+which is used as the source of timestamps.  This is as a better
+alternative to SHM, it does not require polling, the offset
+resolution is not limited to microsecond and it supports PPS. 
+The format for messages sent over the socket is declared in file
+<code>refclock_sock.c</code>. 
+</dl>
+
+   <p>The <code>refclock</code> command also supports a number of subfields (which
+may be defined in any order):
+
+     <dl>
+<dt><code>poll</code><dd>Timestamps produced by refclock drivers are not used immediately, but
+they are stored and processed by a median filter in intervals
+specified by this option.  This is defined as a power of 2.  The
+default is 4 (16 seconds).  A shorter interval allows <code>chronyd</code>
+to react faster to frequency changes, but it may increase noise. 
+<br><dt><code>dpoll</code><dd>Some drivers are not controlled by external events and thus require
+polling.  Again this is defined as a power of 2 and can be negative
+for sub-second intervals.  The default is 0 (1 second). 
+<br><dt><code>refid</code><dd>This option is used to specify a reference id of the refclock, as up
+to four ASCII characters.  By default, first three characters from
+driver name and the number of the refclock are used as refid.  Each
+refclock has to use an unique refid. 
+<br><dt><code>filter</code><dd>This option sets the length of the median filter which is used to
+reduce noise.  With each poll about half of the stored samples are
+discarded and one final sample is calculated as average of the
+remaining samples.  The default is 15. 
+<br><dt><code>rate</code><dd>PPS signal frequency (in Hz).  This option only controls how the
+received pulses are aligned.  To actually receive more than one
+pulse per second, a negative <code>dpoll</code> has to be specified (-3 for
+5Hz signal).  The default is 1. 
+<br><dt><code>lock</code><dd>This option can be used to lock a PPS refclock to another refclock
+whose reference id is specified by this option.  In this mode received
+pulses are aligned directly to unfiltered samples from the refclock. 
+By default, pulses are aligned to local clock, but only when it is
+well synchronised. 
+<br><dt><code>offset</code><dd>This option can be used to compensate a constant error.  The specified
+offset (in seconds) is applied to all samples produced by the
+refclock.  The default is 0.0. 
+<br><dt><code>delay</code><dd>This option is used to specify how the refclock is assumed
+to be inaccurate (in seconds).  Increasing the value is useful to
+avoid having no majority in the source selection algorithm or to make
+the algorithm prefer other refclocks.  The default is 1e-9 (1
+nanosecond). 
+</dl>
+
+<!-- }}} -->
+<!-- {{{ rtcdevice -->
+<div class="node">
+<a name="rtcdevice-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#rtcfile-directive">rtcfile directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#refclock-directive">refclock directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.33 rtcdevice</h4>
+
+<p>The <code>rtcdevice</code> directive defines the name of the device file for
+accessing the real time clock.  By default this is <code>/dev/rtc/</code>, unless the
+directive is used to set a different value.  This applies to Linux systems with
+devfs.  An example of use is
+
+<pre class="example">     rtcdevice /dev/misc/rtc
+</pre>
+   <!-- }}} -->
+<!-- {{{ rtcfile -->
+<div class="node">
+<a name="rtcfile-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#rtconutc-directive">rtconutc directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#rtcdevice-directive">rtcdevice directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.34 rtcfile</h4>
+
+<p>The <code>rtcfile</code> directive defines the name of the file in which
+<code>chronyd</code> can save parameters associated with tracking the accuracy
+of the system's real-time clock (RTC).
+
+   <p>The syntax is illustrated in the following example
+
+<pre class="example">     rtcfile /etc/chrony.rtc
+</pre>
+   <p><code>chronyd</code> saves information in this file when it exits and when the
+<code>writertc</code> command is issued in <code>chronyc</code>.  The information
+saved is the RTC's error at some epoch, that epoch (in seconds since
+January 1 1970), and the rate at which the RTC gains or loses time.
+
+   <p>So far, the support for real-time clocks is limited - their code is even
+more system-specific than the rest of the software.  You can only use
+the real time clock facilities (the <code>rtcfile</code> directive and the
+<code>-s</code> command line option to <code>chronyd</code>) if the following three
+conditions apply:
+
+     <ol type=1 start=1>
+<li>You are running Linux version 2.2.x or 2.4.x (for any value of x), or v2.0.x
+with x&gt;=32.
+
+     <li>You have compiled the kernel with extended real-time clock support
+(i.e. the <samp><span class="file">/dev/rtc</span></samp> device is capable of doing useful things).
+
+     <li>You don't have other applications that need to make use of
+<samp><span class="file">/dev/rtc</span></samp> at all.
+
+        </ol>
+<!-- }}} -->
+<!-- {{{ rtconutc -->
+<div class="node">
+<a name="rtconutc-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#server-directive">server directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#rtcfile-directive">rtcfile directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.35 rtconutc</h4>
+
+<p><code>chronyd</code> assumes by default that the real time clock (RTC) keeps
+local time (including any daylight saving changes).  This is convenient
+on PCs running Linux which are dual-booted with DOS or Windows.
+
+   <p>NOTE : IF YOU KEEP THE REAL TIME CLOCK ON LOCAL TIME AND YOUR COMPUTER
+IS OFF WHEN DAYLIGHT SAVING (SUMMER TIME) STARTS OR ENDS, THE COMPUTER'S
+SYSTEM TIME WILL BE ONE HOUR IN ERROR WHEN YOU NEXT BOOT AND START
+CHRONYD.
+
+   <p>An alternative is for the RTC to keep Universal Coordinated Time (UTC). 
+This does not suffer from the 1 hour problem when daylight saving starts
+or ends.
+
+   <p>If the <code>rtconutc</code> directive appears, it means the RTC is required
+to keep UTC.  The directive takes no arguments.  It is equivalent to
+specifying the <code>-u</code> switch to the Linux <samp><span class="file">/sbin/clock</span></samp> program. 
+<!-- }}} -->
+<!-- {{{ sched_priority -->
+<div class="node">
+<a name="sched_priority-directive"></a>
+<a name="sched_005fpriority-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#lock_005fall-directive">lock_all directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#server-directive">server directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.36 sched_priority</h4>
+
+<p>The <code>sched_priority</code> directive will select the SCHED_FIFO real-time
+scheduler at the specified priority (which must be between 0 and 100). 
+This mode is supported only on Linux.
+
+   <p>This directive uses the Linux sched_setscheduler() system call to
+instruct the kernel to use the SCHED_FIFO first-in, first-out
+real-time scheduling policy for Chronyd with the specified priority. 
+This means that whenever Chronyd is ready to run it will run,
+interrupting whatever else is running unless it is a higher priority
+real-time process.  This should not impact performance as Chronyd's
+resource requirements are modest, but it should result in lower and
+more consistent latency since Chronyd will not need to wait for the
+scheduler to get around to running it.  You should not use this unless
+you really need it.  The sched_setscheduler man page has more details. 
+<!-- }}} -->
+<!-- {{{ lock_all -->
+<div class="node">
+<a name="lock_all-directive"></a>
+<a name="lock_005fall-directive"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#sched_005fpriority-directive">sched_priority directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.37 lock_all</h4>
+
+<p>The <code>lock_all</code> directive will lock chronyd into RAM so that it
+will never be paged out.  This mode is only supported on Linux.  This
+directive uses the Linux mlockall() system call to prevent Chronyd
+from ever being swapped out.  This should result in lower and more
+consistent latency.  It should not have significant impact on
+performance as Chronyd's memory usage is modest.  The mlockall man
+page has more details. 
+<!-- }}} -->
+<!-- {{{ server -->
+<div class="node">
+<a name="server-directive"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#sched_005fpriority-directive">sched_priority directive</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#rtconutc-directive">rtconutc directive</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Configuration-file">Configuration file</a>
+
+</div>
+
+<h4 class="subsection">4.2.38 server</h4>
+
+<p>The <code>server</code> directive allows NTP servers to be specified.  The
+client/server relationship is strictly hierarchical : a client may
+synchronise its system time to that of the server, but the server's
+system time will never be influenced by that of a client.
+
+   <p>The <code>server</code> directive is immediately followed by either the name
+of the server, or its IP address.  The server command also supports a
+number of subfields (which may be defined in any order):
+
+     <dl>
+<dt><code>port</code><dd>This option allows the UDP port on which the server understands NTP
+requests to be specified.  For normal servers this option should not be
+required (the default is 123, the standard NTP port). 
+<br><dt><code>minpoll</code><dd>Although <code>chronyd</code> will trim the rate at which it samples the
+server during normal operation, the user may wish to constrain the
+minimum polling interval.  This is always defined as a power of 2, so
+&lt;tt/minpoll 5/ would mean that the polling interval cannot drop below 32
+seconds.  The default is 6 (64 seconds). 
+<br><dt><code>maxpoll</code><dd>In a similar way, the user may wish to constrain the maximum polling
+interval.  Again this is specified as a power of 2, so &lt;tt/maxpoll 9/
+indicates that the polling interval must stay at or below 512 seconds. 
+The default is 10 (1024 seconds). 
+<br><dt><code>maxdelay</code><dd><code>chronyd</code> uses the network round-trip delay to the server to
+determine how accurate a particular measurement is likely to be.  Long
+round-trip delays indicate that the request, or the response, or both
+were delayed.  If only one of the messages was delayed the measurement
+error is likely to be substantial.
+
+     <p>For small variations in round trip delay, <code>chronyd</code> uses a
+weighting scheme when processing the measurements.  However, beyond a
+certain level of delay the measurements are likely to be so corrupted as
+to be useless.  (This is particularly so on dial-up or other slow links,
+where a long delay probably indicates a highly asymmetric delay caused
+by the response waiting behind a lot of packets related to a download of
+some sort).
+
+     <p>If the user knows that round trip delays above a certain level should
+cause the measurement to be ignored, this level can be defined with the
+maxdelay command.  For example, &lt;tt/maxdelay 0.3/ would indicate that
+measurements with a round-trip delay of 0.3 seconds or more should be
+ignored.
+
+     <br><dt><code>maxdelayratio</code><dd>This option is similar to the maxdelay option above.  <code>chronyd</code>
+keeps a record of the minimum round-trip delay amongst the previous
+measurements that it has buffered.  If a measurement has a round trip
+delay that is greater than the maxdelayratio times the minimum delay, it
+will be rejected.
+
+     <br><dt><code>presend</code><dd>If the timing measurements being made by <code>chronyd</code> are the only
+network data passing between two computers, you may find that some
+measurements are badly skewed due to either the client or the server
+having to do an ARP lookup on the other party prior to transmitting a
+packet.  This is more of a problem with long sampling intervals, which
+may be similar in duration to the lifetime of entries in the ARP caches
+of the machines.
+
+     <p>In order to avoid this problem, the <code>presend</code> option may be used. 
+It takes a single integer argument, which is the smallest polling
+interval for which a pair of packets will be exchanged between the
+client and the server prior to the actual measurement being initiated by
+the client.  For example, with the following option included in a
+<code>server</code> directive :
+
+     <pre class="example">          presend 9
+</pre>
+     <p>when the polling interval is 512 seconds or more, a UDP echo datagram
+will be sent to the server a short time (currently 4 seconds) before the
+NTP client mode datagram.
+
+     <br><dt><code>key</code><dd>The NTP protocol supports the inclusion of checksums in the packets, to
+prevent computers having their system time upset by rogue packets being
+sent to them.  The checksums are generated as a function of a password,
+using the MD5 algorithm.
+
+     <p>The association between key numbers and passwords is contained in the
+keys file, defined by the keyfile command.
+
+     <p>If the key option is present, <code>chronyd</code> will attempt to use
+authenticated packets when communicating with this server.  The key
+number used will be the single argument to the key option.  The server
+must have the same password for this key number configured, otherwise no
+relationship between the computers will be possible.
+
+     <br><dt><code>offline</code><dd>If the server will not be reachable when <code>chronyd</code> is started, the
+offline option may be specified.  <code>chronyd</code> will not try to poll
+the server until it is enabled to do so (by using the online option of
+<code>chronyc</code>).
+
+     <br><dt><code>auto_offline</code><dd>If this option is set, the server will be assumed to have gone offline when 2
+requests have been sent to it without receiving a response.  This option avoids
+the need to run the <code>offline</code> (see <a href="#offline-command">offline command</a>) command from
+chrony when disconnecting the dial-up link.  (It will still be necessary to use
+chronyc's <code>online</code> (see <a href="#online-command">online command</a>) command when the link has been
+established, to enable measurements to start.)
+
+   </dl>
+   <!-- }}} -->
+<!-- }}} -->
+<!-- {{{ S:Running chronyc -->
+<div class="node">
+<a name="Running-chronyc"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Configuration-file">Configuration file</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Usage-reference">Usage reference</a>
+
+</div>
+
+<h3 class="section">4.3 Running chronyc</h3>
+
+<!-- {{{ Section top -->
+<p>Chronyc is the program that can be used to reconfigure options within
+the <code>chronyd</code> program whilst it is running.  Chronyc can also be
+used to generate status reports about the operation of <code>chronyd</code>.
+
+<ul class="menu">
+<li><a accesskey="1" href="#Chronyc-basic-use">Chronyc basic use</a>:            How to run chronyc
+<li><a accesskey="2" href="#Chronyc-command-line-options">Chronyc command line options</a>:   Chrony's command line options
+<li><a accesskey="3" href="#Security-with-chronyc">Security with chronyc</a>:        How chronyd restricts access
+<li><a accesskey="4" href="#Chronyc-command-reference">Chronyc command reference</a>:    All the commands chronyc supports
+</ul>
+<!-- }}} -->
+<!-- {{{ SS:Chronyc basic use -->
+<div class="node">
+<a name="Chronyc-basic-use"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Chronyc-command-line-options">Chronyc command line options</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Running-chronyc">Running chronyc</a>
+
+</div>
+
+<h4 class="subsection">4.3.1 Basic use</h4>
+
+<p>The program chronyc is run by entering
+
+<pre class="example">     chronyc
+</pre>
+   <p>at the command line.  The prompt <code>chronyc</code> is displayed whilst
+chronyc is expecting input from the user, when it is being run from a
+terminal.  If chronyc's input or output are redirected from/to a file,
+the prompt is now shown.
+
+   <p>When you are finished entering commands, the commands <code>exit</code> or
+<code>quit</code> will terminate the program.  (Entering &lt;Control-D&gt; will
+also terminate the program.) 
+<!-- }}} -->
+<!-- {{{ SS:Command line options -->
+<div class="node">
+<a name="Chronyc-command-line-options"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Security-with-chronyc">Security with chronyc</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Chronyc-basic-use">Chronyc basic use</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Running-chronyc">Running chronyc</a>
+
+</div>
+
+<h4 class="subsection">4.3.2 Command line options</h4>
+
+<p>Chronyc supports the following command line options.
+
+     <dl>
+<dt><code>-v</code><dd>Displays the version number of chronyc on the terminal, and exists. 
+<br><dt><code>-h &lt;host&gt;</code><dd>This option allows the user to specify which host running the
+<code>chronyd</code> program is to be contacted.  This allows for remote
+configuration, without having to telnet or rlogin to the other host
+first.
+
+     <p>The default is to contact <code>chronyd</code> running on the same host as
+that where chronyc is being run. 
+<br><dt><code>-p &lt;port&gt;</code><dd>This option allows the user to specify the UDP port number which the
+target <code>chronyd</code> is using for its command &amp; monitoring connections. 
+This defaults to the compiled-in default; there would rarely be a need
+to change this. 
+<br><dt><code>-n</code><dd>This option disables resolving IP addresses to hostnames. 
+<br><dt><code>-4</code><dd>With this option hostnames will be resolved only to IPv4 addresses. 
+<br><dt><code>-6</code><dd>With this option hostnames will be resolved only to IPv6 addresses. 
+</dl>
+   <!-- }}} -->
+<!-- {{{ SS:Security with chronyc -->
+<div class="node">
+<a name="Security-with-chronyc"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Chronyc-command-reference">Chronyc command reference</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Chronyc-command-line-options">Chronyc command line options</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Running-chronyc">Running chronyc</a>
+
+</div>
+
+<h4 class="subsection">4.3.3 Security with chronyc</h4>
+
+<p>Many of the commands available through chronyc have a fair amount of
+power to reconfigure the run-time behaviour of <code>chronyd</code>.  Consequently,
+<code>chronyc</code> is quite dangerous for the integrity of the target
+system's clock performance.  Having access to <code>chronyd</code> via chronyc is
+more or less equivalent to being able to modify <code>chronyd's</code> configuration
+file (typically <samp><span class="file">/etc/chrony.conf</span></samp>) and to restart <code>chronyd</code>.
+
+   <p>Chronyc also provides a number of monitoring (as opposed to commanding)
+commands, which will not affect the behaviour of <code>chronyd</code>.  However, you
+may still want to restrict access to these commands.
+
+   <p>In view of this, access to some of the capabilities of chronyc will
+usually be tightly controlled.  There are two mechanisms supported:
+
+     <ol type=1 start=1>
+<li>The set of hosts from which <code>chronyd</code> will accept commands can be
+restricted.  By default, commands will only be accepted from the same
+host that <code>chronyd</code> is running on. 
+<li>Any command that actually reconfigures some aspect of <code>chronyd's</code>
+behaviour requires the user of chronyc to know a password.  This
+password is specified in <code>chronyd's</code> keys file (see <a href="#keyfile-directive">keyfile directive</a>)
+and specified via the commandkey option in its configuration file
+(see <a href="#commandkey-directive">commandkey directive</a>).
+        </ol>
+
+   <p>Only the following commands can be used <em>without</em> providing a
+password:
+
+     <ul>
+<li><code>activity</code>
+<li><code>clients</code>
+<li><code>dns</code>
+<li><code>exit</code>
+<li><code>help</code>
+<li><code>password</code>
+<li><code>quit</code>
+<li><code>rtcdata</code>
+<li><code>sources</code>
+<li><code>sourcestats</code>
+<li><code>tracking</code>
+</ul>
+
+   <p>All other commands require a password to have been specified previously,
+because they affect <code>chronyd's</code> operation. 
+<!-- }}} -->
+<!-- {{{ SS:Chronyc command reference -->
+<div class="node">
+<a name="Chronyc-command-reference"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Security-with-chronyc">Security with chronyc</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Running-chronyc">Running chronyc</a>
+
+</div>
+
+<h4 class="subsection">4.3.4 Command reference</h4>
+
+<!-- {{{ Top/menu -->
+<p>This section describes each of the commands available within the chronyc
+program.  Chronyc offers the user a simple command-line driven
+interface.
+
+<ul class="menu">
+<li><a accesskey="1" href="#accheck-command">accheck command</a>:              Verifying NTP client access
+<li><a accesskey="2" href="#activity-command">activity command</a>:             Check how many NTP servers/peers are online/offline
+<li><a accesskey="3" href="#add-peer-command">add peer command</a>:             Add a new NTP peer
+<li><a accesskey="4" href="#add-server-command">add server command</a>:           Add a new NTP server
+<li><a accesskey="5" href="#allow-command">allow command</a>:                Allowing NTP client access
+<li><a accesskey="6" href="#allow-all-command">allow all command</a>:            Allowing NTP client access
+<li><a accesskey="7" href="#burst-command">burst command</a>:                Initiating a rapid set of measurements
+<li><a accesskey="8" href="#clients-command">clients command</a>:              Show clients that have accessed the server
+<li><a accesskey="9" href="#cmdaccheck-command">cmdaccheck command</a>:           Verifying command client access
+<li><a href="#cmdallow-command">cmdallow command</a>:             Allowing command client access
+<li><a href="#cmdallow-all-command">cmdallow all command</a>:         Allowing command client access
+<li><a href="#cmddeny-command">cmddeny command</a>:              Denying command client access
+<li><a href="#cmddeny-all-command">cmddeny all command</a>:          Denying command client access
+<li><a href="#cyclelogs-command">cyclelogs command</a>:            Close and re-open open log files
+<li><a href="#delete-command">delete command</a>:               Remove an NTP server or peer
+<li><a href="#deny-command">deny command </a>:                Denying NTP client access
+<li><a href="#deny-all-command">deny all command</a>:             Denying NTP client access
+<li><a href="#dns-command">dns command</a>:                  Configure how are hostnames and IP addresses resolved
+<li><a href="#dump-command">dump command</a>:                 Dump measurement histories to files
+<li><a href="#exit-command">exit command</a>:                 Exit from chronyc
+<li><a href="#help-command">help command</a>:                 Generate help summary
+<li><a href="#local-command">local command</a>:                Let computer be a server when it is unsynchronised
+<li><a href="#makestep-command">makestep command</a>:             Immediately correct the system clock instead of slewing
+<li><a href="#manual-command">manual command</a>:               Enable/disable/configure options for settime
+<li><a href="#maxdelay-command">maxdelay command</a>:             Set max measurement delay for a source
+<li><a href="#maxdelayratio-command">maxdelayratio command</a>:        Set max measurement delay for a source as ratio
+<li><a href="#maxpoll-command">maxpoll command</a>:              Set maximum polling interval for a source
+<li><a href="#maxupdateskew-command">maxupdateskew command</a>:        Set safety threshold for clock gain/loss rate
+<li><a href="#minpoll-command">minpoll command</a>:              Set minimum polling interval for a source
+<li><a href="#offline-command">offline command</a>:              Warn that connectivity to a source will be lost
+<li><a href="#online-command">online command</a>:               Warn that connectivity to a source has been restored
+<li><a href="#password-command">password command</a>:             Provide password needed for most commands
+<li><a href="#quit-command">quit command</a>:                 Exit from chronyc
+<li><a href="#rtcdata-command">rtcdata command</a>:              Display RTC parameters
+<li><a href="#settime-command">settime command</a>:              Provide a manual input of the current time
+<li><a href="#sources-command">sources command</a>:              Display information about the current set of sources
+<li><a href="#sourcestats-command">sourcestats command</a>:          Display the rate &amp; offset estimation performance of sources
+<li><a href="#tracking-command">tracking command</a>:             Display system clock performance
+<li><a href="#trimrtc-command">trimrtc command</a>:              Correct the RTC time to the current system time
+<li><a href="#writertc-command">writertc command</a>:             Write the RTC parameters to file. 
+</ul>
+<!-- }}} -->
+<!-- {{{ accheck -->
+<div class="node">
+<a name="accheck-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#activity-command">activity command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.1 accheck</h5>
+
+<p>This command allows you to check whether client NTP access is allowed
+from a particular host.
+
+   <p>Examples of use, showing a named host and a numeric IP address, are as
+follows:
+
+<pre class="example">     accheck a.b.c
+     accheck 1.2.3.4
+     accheck 2001:db8::1
+</pre>
+   <p>This command can be used to examine the effect of a series of
+<code>allow</code>, <code>allow all</code>, <code>deny</code> and <code>deny all</code> commands
+specified either via chronyc, or in <code>chronyd's</code> configuration file. 
+<!-- }}} -->
+<!-- {{{ activity command -->
+<div class="node">
+<a name="activity-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#add-peer-command">add peer command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#accheck-command">accheck command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.2 activity</h5>
+
+<p>This command reports the number of servers/peers that are online and offline. 
+If the auto_offline option is used in specifying some of the servers/peers, the
+<code>activity</code> command may be useful for detecting when all of them have
+entered the offline state after the PPP link has been disconnected.
+
+   <p>The report shows the number of servers/peers in 4 states:
+     <ul>
+<li><code>online</code> : the server/peer is currently online (i.e. assumed by
+chronyd to be reachable)
+<li><code>offline</code> : the server/peer is currently offline (i.e. assumed by
+chronyd to be unreachable, and no measurements from it will be attempted.) 
+<li><code>burst_online</code> : a burst command has been initiated for the
+server/peer and is being performed; after the burst is complete, the
+server/peer will be returned to the online state. 
+<li><code>burst_offline</code> : a burst command has been initiated for the
+server/peer and is being performed; after the burst is complete, the
+server/peer will be returned to the offline state. 
+</ul>
+   <!-- }}} -->
+<!-- {{{ add peer -->
+<div class="node">
+<a name="add-peer-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#add-server-command">add server command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#activity-command">activity command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.3 add peer</h5>
+
+<p>The <code>add peer</code> command allows a new NTP peer to be added whilst
+<code>chronyd</code> is running.
+
+   <p>Following the words <code>add peer</code>, the syntax of the following
+parameters and options is identical to that for the <code>peer</code>
+directive in the configuration file (see <a href="#peer-directive">peer directive</a>).
+
+   <p>An example of using this command is shown below.
+
+<pre class="example">     add peer foo.bar.com minpoll 6 maxpoll 10 authkey 25
+</pre>
+   <!-- }}} -->
+<!-- {{{ add server -->
+<div class="node">
+<a name="add-server-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#allow-command">allow command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#add-peer-command">add peer command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.4 add server</h5>
+
+<p>The <code>add server</code> command allows a new NTP server to be added whilst
+<code>chronyd</code> is running.
+
+   <p>Following the words <code>add server</code>, the syntax of the following
+parameters and options is identical to that for the <code>server</code>
+directive in the configuration file (see <a href="#server-directive">server directive</a>).
+
+   <p>An example of using this command is shown below.
+
+<pre class="example">     add server foo.bar.com minpoll 6 maxpoll 10 authkey 25
+</pre>
+   <!-- }}} -->
+<!-- {{{ allow -->
+<div class="node">
+<a name="allow-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#allow-all-command">allow all command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#add-server-command">add server command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.5 allow</h5>
+
+<p>The effect of the allow command is identical to the <code>allow</code> directive in
+the configuration file (see <a href="#allow-directive">allow directive</a>).
+
+   <p>The syntax is illustrated in the following examples:
+
+<pre class="example">     allow foo.bar.com
+     allow 1.2
+     allow 3.4.5
+     allow 6.7.8/22
+     allow 6.7.8.9/22
+     allow 2001:db8:789a::/48
+     allow 0/0
+     allow ::/0
+     allow
+</pre>
+   <p>The effect of each of these examples is the same as that of the <code>allow</code>
+directive in the configuration file. 
+<!-- }}} -->
+<!-- {{{ allow all -->
+<div class="node">
+<a name="allow-all-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#burst-command">burst command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#allow-command">allow command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.6 allow all</h5>
+
+<p>The effect of the allow command is identical to the <code>allow all</code>
+directive in the configuration file (see <a href="#allow-directive">allow directive</a>). 
+<!-- }}} -->
+<!-- {{{ burst -->
+<div class="node">
+<a name="burst-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#clients-command">clients command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#allow-all-command">allow all command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.7 burst</h5>
+
+<p>The <code>burst</code> command tells <code>chronyd</code> to make a set of measurements to
+each of its NTP sources over a short duration (rather than the usual
+periodic measurements that it makes).  After such a burst, <code>chronyd</code> will
+revert to the previous state for each source.  This might be either
+online, if the source was being periodically measured in the normal way,
+or offline, if the source had been indicated as being offline. 
+(Switching a source between the online and offline states is described
+in <a href="#online-command">online command</a>, <a href="#offline-command">offline command</a>).
+
+   <p>The syntax of the burst command is as follows
+
+<pre class="example">     burst &lt;n-good-measurements&gt;/&lt;max-measurements&gt; [&lt;mask&gt;/&lt;masked-address&gt;]
+     burst &lt;n-good-measurements&gt;/&lt;max-measurements&gt; [&lt;masked-address&gt;/&lt;masked-bits&gt;]
+</pre>
+   <p>The mask and masked-address arguments are optional, in which case
+<code>chronyd</code> will initiate a burst for all of its currently defined sources.
+
+   <p>The arguments have the following meaning and format.
+
+     <dl>
+<dt><code>n-good-measurements</code><dd>This defines the number of good measurements that <code>chronyd</code> will want to
+obtain from each source.  A measurement is good if it passes certain
+tests, for example, the round trip time to the source must be
+acceptable.  (This allows <code>chronyd</code> to reject measurements that are likely
+to be bogus.)
+
+     <br><dt><code>max-measurements</code><dd>This defines the maximum number of measurements that <code>chronyd</code> will
+attempt to make, even if the required number of good measurements has
+not been obtained.
+
+     <br><dt><code>mask</code><dd>This is an IP address with which the IP address of each of <code>chronyd</code>'s
+sources is to be masked.
+
+     <br><dt><code>masked-address</code><dd>This is an IP address.  If the masked IP address of a source matches this value
+then the burst command is applied to that source.
+
+     <br><dt><code>masked-bits</code><dd>This can be used with <code>masked-address</code> for CIDR notation, which is a
+shorter alternative to the form with mask.
+
+   </dl>
+
+   <p>If no mask or masked address arguments are provided, every source will
+be matched.
+
+   <p>An example of the two-argument form of the command is
+
+<pre class="example">     burst 2/10
+</pre>
+   <p>This will cause <code>chronyd</code> to attempt to get two good measurements from
+each source, stopping after two have been obtained, but in no event will
+it try more than ten probes to the source.
+
+   <p>Examples of the four-argument form of the command are
+
+<pre class="example">     burst 2/10 255.255.0.0/1.2.0.0
+     burst 2/10 2001:db8:789a::/48
+</pre>
+   <p>In the first case, the two out of ten sampling will only be applied to
+sources whose IPv4 addresses are of the form <code>1.2.x.y</code>, where x and y
+are arbitrary. In the second case, the sampling will be applied to sources
+whose IPv6 addresses have first 48 bits equal to <code>2001:db8:789a</code>. 
+<!-- }}} -->
+<!-- {{{ clients -->
+<div class="node">
+<a name="clients-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmdaccheck-command">cmdaccheck command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#burst-command">burst command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<!-- node-name,  next,  previous,  up -->
+<h5 class="subsubsection">4.3.4.8 clients</h5>
+
+<p>This command shows a list of all clients that have accessed the server,
+through either the NTP or command/monitoring ports.  There are no arguments.
+
+   <p>An example of the output is
+
+<pre class="example">     Hostname                   Client    Peer CmdAuth CmdNorm  CmdBad  LstN  LstC
+     =========================  ======  ======  ======  ======  ======  ====  ====
+     localhost                       0       0      15       1       0   29y     0
+     aardvark.xxx                    4       0       0       0       0    49   29y
+     badger.xxx                      4       0       0       0       0     6   29y
+</pre>
+   <p>Each row shows the data for a single host.  Only hosts that have passed
+the host access checks (set with the <code>allow</code>, <code>deny</code>,
+<code>cmdallow</code> and <code>cmddeny</code> commands or configuration file
+directives) are logged.
+
+   <p>The columns are as follows:
+
+     <ol type=1 start=1>
+<li>The hostname of the client
+<li>The number of times the client has accessed the server using an NTP
+client mode packet. 
+<li>The number of times the client has accessed the server using an NTP
+symmetric active mode packet. 
+<li>The number of authenticated command packets that have been processed
+from the client (i.e. those following a successful <code>password</code>
+command). 
+<li>The number of unauthenticated command packets that have been processed
+from the client. 
+<li>The number of bad command packets received from the client (not all
+forms of bad packet are logged). 
+<li>Time since the last NTP packet was received
+<li>Time since the last command packet was received
+        </ol>
+
+   <p>The last two entries will be shown as the time since 1970 if no packet
+of that type has ever been received. 
+<!-- }}} -->
+<!-- {{{ cmdaccheck -->
+<div class="node">
+<a name="cmdaccheck-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmdallow-command">cmdallow command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#clients-command">clients command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.9 cmdaccheck</h5>
+
+<p>This command is similar to the <code>accheck</code> command, except that it is
+used to check whether command access is permitted from a named host.
+
+   <p>Examples of use are as follows:
+
+<pre class="example">     cmdaccheck a.b.c
+     cmdaccheck 1.2.3.4
+     cmdaccheck 2001:db8::1
+</pre>
+   <!-- }}} -->
+<!-- {{{ cmdallow -->
+<div class="node">
+<a name="cmdallow-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmdallow-all-command">cmdallow all command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmdaccheck-command">cmdaccheck command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.10 cmdallow</h5>
+
+<p>This is similar to the <code>allow</code> command, except that it is used to
+allow particular hosts or subnets to use the chronyc program to interact
+with <code>chronyd</code> on the current host. 
+<!-- }}} -->
+<!-- {{{ cmdallow all -->
+<div class="node">
+<a name="cmdallow-all-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmddeny-command">cmddeny command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmdallow-command">cmdallow command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.11 cmdallow all</h5>
+
+<p>This is similar to the <code>allow all</code> command, except that it is used to<!-- {{{ -->
+allow particular hosts or subnets to use the chronyc program to interact<!-- }}} -->
+with <code>chronyd</code> on the current host. 
+<!-- }}} -->
+<!-- {{{ cmddeny -->
+<div class="node">
+<a name="cmddeny-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cmddeny-all-command">cmddeny all command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmdallow-all-command">cmdallow all command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.12 cmddeny</h5>
+
+<p>This is similar to the <code>deny</code> command, except that it is used to
+allow particular hosts or subnets to use the chronyc program to interact
+with <code>chronyd</code> on the current host. 
+<!-- }}} -->
+<!-- {{{ cmddeny all -->
+<div class="node">
+<a name="cmddeny-all-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#cyclelogs-command">cyclelogs command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmddeny-command">cmddeny command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.13 cmddeny all</h5>
+
+<p>This is similar to the <code>deny all</code> command, except that it is used
+to allow particular hosts or subnets to use the chronyc program to
+interact with <code>chronyd</code> on the current host. 
+<!-- }}} -->
+<!-- {{{ cyclelogs -->
+<div class="node">
+<a name="cyclelogs-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#delete-command">delete command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cmddeny-all-command">cmddeny all command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.14 cyclelogs</h5>
+
+<p>The <code>cyclelogs</code> command causes all of <code>chronyd's</code> open log files to
+be closed and re-opened.  This allows them to be renamed so that they can be
+periodically purged.  An example of how to do this is shown below.
+
+<pre class="example">     % mv /var/log/chrony/measurements.log /var/log/chrony/measurements1.log
+     % chronyc
+     chronyc&gt; password aardvark
+     200 OK
+     chronyc&gt; cyclelogs
+     200 OK
+     chronyc&gt; exit
+     % ls -l /var/log/chrony
+     -rw-r--r--   1 root     root            0 Jun  8 18:17 measurements.log
+     -rw-r--r--   1 root     root        12345 Jun  8 18:17 measurements1.log
+     % rm -f measurements1.log
+</pre>
+   <!-- }}} -->
+<!-- {{{ delete -->
+<div class="node">
+<a name="delete-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#deny-command">deny command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#cyclelogs-command">cyclelogs command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.15 delete</h5>
+
+<p>The <code>delete</code> command allows an NTP server or peer to be removed
+from the current set of sources.
+
+   <p>The syntax is illustrated in the examples below.
+
+<pre class="example">     delete foo.bar.com
+     delete 1.2.3.4
+     delete 2001:db8::1
+</pre>
+   <p>There is one parameter, the name or IP address of the server or peer to
+be deleted. 
+<!-- }}} -->
+<!-- {{{ deny -->
+<div class="node">
+<a name="deny-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#deny-all-command">deny all command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#delete-command">delete command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.16 deny</h5>
+
+<p>The effect of the allow command is identical to the <code>deny</code>
+directive in the configuration file (see <a href="#deny-directive">deny directive</a>).
+
+   <p>The syntax is illustrated in the following examples:
+
+<pre class="example">     deny foo.bar.com
+     deny 1.2
+     deny 3.4.5
+     deny 6.7.8/22
+     deny 6.7.8.9/22
+     deny 2001:db8:789a::/48
+     deny 0/0
+     deny ::/0
+     deny
+</pre>
+   <!-- }}} -->
+<!-- {{{ deny all -->
+<div class="node">
+<a name="deny-all-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#dns-command">dns command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#deny-command">deny command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.17 deny all</h5>
+
+<p>The effect of the allow command is identical to the <code>deny all</code>
+directive in the configuration file (see <a href="#deny-directive">deny directive</a>). 
+<!-- }}} -->
+<!-- {{{ dns -->
+<div class="node">
+<a name="dns-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#dump-command">dump command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#deny-all-command">deny all command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.18 dns</h5>
+
+<p>The <code>dns</code> command configures how are hostnames and IP addresses resolved in
+<code>chronyc</code>.  IP addresses can be resolved to hostnames when printing results
+of <code>sources</code>, <code>sourcestats</code>, <code>tracking</code> and <code>clients</code>
+commands.  Hostnames are resolved in commands that take an address as argument.
+
+   <p>There are five forms of the command:
+
+     <dl>
+<dt><code>dns -n</code><dd>Disables resolving IP addresses to hostnames.  Raw IP addresses will be
+displayed. 
+<br><dt><code>dns +n</code><dd>Enables resolving IP addresses to hostnames.  This is the default unless
+<code>chronyc</code> was started with <code>-n</code> option. 
+<br><dt><code>dns -4</code><dd>Resolves hostnames only to IPv4 addresses. 
+<br><dt><code>dns -6</code><dd>Resolves hostnames only to IPv6 addresses. 
+<br><dt><code>dns -46</code><dd>Resolves hostnames to both address families.  This is the default unless
+<code>chronyc</code> was started with <code>-4</code> or <code>-6</code> option. 
+</dl>
+   <!-- }}} -->
+<!-- {{{ dump -->
+<div class="node">
+<a name="dump-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#exit-command">exit command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#dns-command">dns command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.19 dump</h5>
+
+<p>The <code>dump</code> command causes <code>chronyd</code> to write its current history of
+measurements for each of its sources to dump files, either for
+inspection or to support the <code>-r</code> option when <code>chronyd</code> is restarted.
+
+   <p>The <code>dump</code> command is somewhat equivalent to the <code>dumponexit</code>
+directive in the chrony configuration file.  See <a href="#dumponexit-directive">dumponexit directive</a>.
+
+   <p>To use the <code>dump</code>, you probably want to configure the name of the
+directory into which the dump files will be written.  This can only be
+done in the configuration file, see <a href="#dumpdir-directive">dumpdir directive</a>. 
+<!-- }}} -->
+<!-- {{{ exit -->
+<div class="node">
+<a name="exit-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#help-command">help command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#dump-command">dump command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.20 exit</h5>
+
+<p>The exit command exits from chronyc and returns the user to the shell
+(same as the quit command). 
+<!-- }}} -->
+<!-- {{{ help -->
+<div class="node">
+<a name="help-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#local-command">local command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#exit-command">exit command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.21 help</h5>
+
+<p>The help command displays a summary of the commands and their arguments. 
+<!-- }}} -->
+<!-- {{{ local -->
+<div class="node">
+<a name="local-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#makestep-command">makestep command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#help-command">help command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.22 local</h5>
+
+<p>The <code>local</code> command allows <code>chronyd</code> to be told that it is to appear
+as a reference source, even if it is not itself properly synchronised to
+an external source.  (This can be used on isolated networks, to allow
+one computer to be a master time server with the other computers slaving
+to it.)  The <code>local</code> command is somewhat equivalent to the
+<code>local</code> directive in the configuration file, see <a href="#local-directive">local directive</a>.
+
+   <p>The syntax is as shown in the following examples.
+
+<pre class="example">     local stratum 10
+     local off
+</pre>
+   <p>The first example enables the local reference mode on the host, and sets
+the stratum at which it should claim to be synchronised.
+
+   <p>The second example disables the local reference mode. 
+<!-- }}} -->
+<!-- {{{ makestep -->
+<div class="node">
+<a name="makestep-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#manual-command">manual command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#local-command">local command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.23 makestep</h5>
+
+<p>Normally chronyd will cause the system to gradually correct any time
+offset, by slowing down or speeding up the clock as required.  In
+certain situations, the system clock may be so far adrift that this
+slewing process would take a very long time to correct the system clock.
+
+   <p>The <code>makestep</code> command can be used in this situation.  It cancels
+any remaining correction that was being slewed, and jumps the system
+clock by the equivalent amount, making it correct immediately.
+
+   <p>BE WARNED - certain software will be seriously affected by such jumps to
+the system time.  (That is the reason why chronyd uses slewing
+normally.)
+
+   <p>The <code>makestep</code> directive in the configuration file can be used
+to step the clock automatically when the adjustment is larger than a
+specified threshold, see <a href="#makestep-directive">makestep directive</a>. 
+<!-- }}} -->
+<!-- {{{ manual -->
+<div class="node">
+<a name="manual-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#maxdelay-command">maxdelay command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#makestep-command">makestep command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.24 manual</h5>
+
+<p>The manual command enables and disables use of the <code>settime</code>
+command (see <a href="#settime-command">settime command</a>), and is used to modify the behaviour
+of the manual clock driver.
+
+   <p>Examples of the command are shown below.
+
+<pre class="example">     manual on
+     manual off
+     manual delete 1
+     manual list
+     manual reset
+</pre>
+   <p>The <code>on</code> form of the command enables use of the <code>settime</code>
+command.
+
+   <p>The <code>off</code> form of the command disables use of the <code>settime</code>
+command.
+
+   <p>The <code>list</code> form of the command lists all the samples currently
+stored in <code>chronyd</code>.  The output is illustrated below.
+
+<pre class="example">     210 n_samples = 1
+     #    Date  Time(UTC)    Slewed   Original   Residual
+     ====================================================
+      0 27Jan99 22:09:20       0.00       0.97       0.00
+</pre>
+   <p>The columns as as follows :
+
+     <ol type=1 start=1>
+<li>The sample index (used for the <code>manual delete</code> command)
+<li>The date and time of the sample
+<li>The system clock error when the timestamp was entered, adjusted to allow
+for changes made to the system clock since. 
+<li>The system clock error when the timestamp was entered, as it originally
+was (without allowing for changes to the system clock since). 
+<li>The regression residual at this point, in seconds.  This allows
+'outliers' to be easily spotted, so that they can be deleted using the
+<code>manual delete</code> command.
+        </ol>
+
+   <p>The <code>delete</code> form of the command deletes a single sample.  The
+parameter is the index of the sample, as shown in the first column of
+the output from <code>manual list</code>.  Following deletion of the data
+point, the current error and drift rate are re-estimated from the
+remaining data points and the system clock trimmed if necessary.  This
+option is intended to allow 'outliers' to be discarded, i.e. samples
+where the administrator realises he/she has entered a very poor
+timestamp.
+
+   <p>The <code>reset</code> form of the command deletes all samples at once.  The
+system clock is left running as it was before the command was entered. 
+<!-- }}} -->
+<!-- {{{ maxdelay -->
+<div class="node">
+<a name="maxdelay-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#maxdelayratio-command">maxdelayratio command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#manual-command">manual command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.25 maxdelay</h5>
+
+<p>This allows the <code>maxdelay</code> option for one of the sources to be
+modified, in the same way as specifying the <code>maxdelay</code> option for
+the <code>server</code> directive in the configuration file (see <a href="#server-directive">server directive</a>).
+
+   <p>The following examples illustrate the syntax
+
+<pre class="example">     maxdelay foo.bar.com 0.3
+     maxdelay 1.2.3.4 0.0015
+     maxdelay 2001:db8::1 0.0015
+</pre>
+   <p>The first example sets the maximum network delay allowed for a
+measurement to the host <code>foo.bar.com</code> to 0.3 seconds.  The second
+and third examples set the maximum network delay for a measurement to
+the host with IPv4 address <code>1.2.3.4</code> and the host with IPv6 address
+<code>2001:db8::1</code> to 1.5 milliseconds.
+
+   <p>(Any measurement whose network delay exceeds the specified value is
+discarded.) 
+<!-- }}} -->
+<!-- {{{ maxdelayratio -->
+<div class="node">
+<a name="maxdelayratio-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#maxpoll-command">maxpoll command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#maxdelay-command">maxdelay command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.26 maxdelayratio</h5>
+
+<p>This allows the <code>maxdelayratio</code> option for one of the sources to be
+modified, in the same way as specifying the <code>maxdelayratio</code> option
+for the <code>server</code> directive in the configuration file (see <a href="#server-directive">server directive</a>).
+
+   <p>The following examples illustrate the syntax
+
+<pre class="example">     maxdelayratio foo.bar.com 1.5
+     maxdelayratio 1.2.3.4 2.0
+     maxdelayratio 2001:db8::1 2.0
+</pre>
+   <p>The first example sets the maximum network delay for a measurement to
+the host <code>foo.bar.com</code> to be 1.5 times the minimum delay found
+amongst the previous measurements that have been retained.  The second
+and third examples set the maximum network delay for a measurement to
+the host with IPv4 address <code>1.2.3.4</code> and the host with IPv6
+address <code>2001:db8::1</code> to be double the retained minimum.
+
+   <p>As for <code>maxdelay</code>, any measurement whose network delay is too large
+will be discarded. 
+<!-- }}} -->
+<!-- {{{ maxpoll -->
+<div class="node">
+<a name="maxpoll-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#maxupdateskew-command">maxupdateskew command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#maxdelayratio-command">maxdelayratio command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.27 maxpoll</h5>
+
+<p>The <code>maxpoll</code> command is used to modify the minimum polling
+interval for one of the current set of sources.  It is equivalent to the
+<code>maxpoll</code> option in the <code>server</code> directive in the
+configuration file (see <a href="#server-directive">server directive</a>).
+
+   <p>The syntax is as follows
+
+<pre class="example">     maxpoll &lt;host&gt; &lt;new-maxpoll&gt;
+</pre>
+   <p>where the host can be specified as either a machine name or
+IP address.  The new minimum poll is specified as a base-2 logarithm of
+the number of seconds between polls (e.g. specify 6 for 64 second
+sampling).
+
+   <p>An example is
+
+<pre class="example">     maxpoll foo.bar.com 10
+</pre>
+   <p>which sets the maximum polling interval for the host <code>foo.bar.com</code>
+to 1024 seconds.
+
+   <p>Note that the new maximum polling interval only takes effect after the
+next measurement has been made. 
+<!-- }}} -->
+<!-- {{{ maxupdateskew -->
+<div class="node">
+<a name="maxupdateskew-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#minpoll-command">minpoll command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#maxpoll-command">maxpoll command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.28 maxupdateskew</h5>
+
+<p>This command has the same effect as the <code>maxupdateskew</code> directive
+in the configuration file, see <a href="#maxupdateskew-directive">maxupdateskew directive</a>. 
+<!-- }}} -->
+<!-- {{{ minpoll -->
+<div class="node">
+<a name="minpoll-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#offline-command">offline command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#maxupdateskew-command">maxupdateskew command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.29 minpoll</h5>
+
+<p>The <code>minpoll</code> command is used to modify the minimum polling
+interval for one of the current set of sources.  It is equivalent to the
+<code>minpoll</code> option in the <code>server</code> directive in the
+configuration file (see <a href="#server-directive">server directive</a>).
+
+   <p>The syntax is as follows
+
+<pre class="example">     minpoll &lt;host&gt; &lt;new-minpoll&gt;
+</pre>
+   <p>where the host can be specified as either a machine name or
+IP address.  The new minimum poll is specified as a base-2 logarithm of
+the number of seconds between polls (e.g. specify 6 for 64 second
+sampling).
+
+   <p>An example is
+
+<pre class="example">     minpoll foo.bar.com 5
+</pre>
+   <p>which sets the minimum polling interval for the host <code>foo.bar.com</code>
+to 32 seconds.
+
+   <p>Note that the new minimum polling interval only takes effect after the
+next measurement has been made. 
+<!-- }}} -->
+<!-- {{{ offline -->
+<div class="node">
+<a name="offline-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#online-command">online command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#minpoll-command">minpoll command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.30 offline</h5>
+
+<p>The <code>offline</code> command is used to warn <code>chronyd</code> that the network
+connection to a particular host or hosts is about to be lost.  It should
+be used on computers with a dial-up or similar connection to their time
+sources, to warn <code>chronyd</code> that the connection is about to be broken.
+
+   <p>An example of how to use <code>offline</code> in this case is shown in
+<a href="#Advising-chronyd-of-internet-availability">Advising chronyd of internet availability</a>.
+
+   <p>Another case where <code>offline</code> could be used is where a computer
+serves time to a local group of computers, and has a permanant
+connection to true time servers outside the organisation.  However, the
+external connection is heavily loaded at certain times of the day and
+the measurements obtained are less reliable at those times.  In this
+case, it is probably most useful to determine the gain/loss rate during
+the quiet periods and let the whole network coast through the loaded
+periods.  The <code>offline</code> and <code>online</code> commands can be used to
+achieve this.  The situation is shown in the figure below.
+
+<pre class="example">               +----------+
+               |Ext source|
+               +----------+
+                   |
+                   |
+                   |/| &lt;-- Link with variable
+                     |     reliability
+                     |
+           +-------------------+
+           |Local master server|
+           +-------------------+
+                     |
+       +---+---+-----+-----+----+----+
+       |   |   |     |     |    |    |
+                Local clients
+</pre>
+   <p>If the source to which <code>chronyd</code> is currently synchronised is indicated
+offline in this way, <code>chronyd</code> will continue to treat it as the
+synchronisation source.  If the network connection were broken without
+the <code>offline</code> command being used, <code>chronyd</code> would assume that the
+source had failed and would attempt to pick another synchronisation
+source.
+
+   <p>There are three forms of the <code>offline</code> command.  The first form is a
+wildcard, meaning all sources.  The second form allows a IP address mask
+and a masked address to be specified.  The third form uses the CIDR
+notation.  These forms are illustrated below.
+
+<pre class="example">     offline
+     offline 255.255.255.0/1.2.3.0
+     offline 2001:db8:789a::/48
+</pre>
+   <p>The second form means that the <code>offline</code> command is to be applied
+to any source whose IPv4 address is in the <code>1.2.3</code> subnet.  (The host's
+address is logically and-ed with the mask, and if the result matches the
+masked-address the host is processed).  The third form means that the
+command is to be applied to all sources whose IPv6 addresses have first
+48 bits equal to <code>2001:db8:789a</code>.
+
+   <p>The wildcard form of the address is actually equivalent to
+
+<pre class="example">     offline 0.0.0.0/0.0.0.0
+     offline ::/0
+</pre>
+   <!-- }}} -->
+<!-- {{{ online -->
+<div class="node">
+<a name="online-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#password-command">password command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#offline-command">offline command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.31 online</h5>
+
+<p>The <code>online</code> command is opposite in function to the <code>offline</code>
+command.  It is used to advise <code>chronyd</code> that network connectivity to a
+particular source or sources has been restored.
+
+   <p>The syntax is identical to that of the <code>offline</code> command, see
+<a href="#offline-command">offline command</a>. 
+<!-- }}} -->
+<!-- {{{ password -->
+<div class="node">
+<a name="password-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#quit-command">quit command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#online-command">online command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.32 password</h5>
+
+<p>The password command is used to allow chronyc to send privileged
+commands to <code>chronyd</code>.  The password can either be entered on the command
+line, or can be entered without echoing.  The syntax for entering the
+password on the command line is as follows
+
+<pre class="example">     password xyzzy
+</pre>
+   <p>To enter the password without it being echoed, enter
+
+<pre class="example">     password
+</pre>
+   <p>The computer will respond with a &lsquo;<samp><span class="samp">Password:</span></samp>&rsquo; prompt, at which you
+should enter the password and press return.  (Note that the no-echo mode
+is limited to 8 characters on SunOS 4.1 due to limitations in the system
+library.  Other systems do not have this restriction.)
+
+   <p>The password is any string of characters not containing whitespace.  It
+has to match <code>chronyd's</code> currently defined command key (see <a href="#commandkey-directive">commandkey directive</a>). 
+<!-- }}} -->
+<!-- {{{ quit -->
+<div class="node">
+<a name="quit-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#rtcdata-command">rtcdata command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#password-command">password command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.33 quit</h5>
+
+<p>The quit command exits from chronyc and returns the user to the shell
+(same as the exit command). 
+<!-- }}} -->
+<!-- {{{ rtcdata -->
+<div class="node">
+<a name="rtcdata-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#settime-command">settime command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#quit-command">quit command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.34 rtcdata</h5>
+
+<p>The <code>rtcdata</code> command displays the current real time clock RTC parameters.
+
+   <p>An example output is shown below.
+
+<pre class="example">     RTC ref time (GMT) : Sat May 30 07:25:56 1998
+     Number of samples  : 10
+     Number of runs     : 5
+     Sample span period :  549
+     RTC is fast by     :    -1.632736 seconds
+     RTC gains time at  :  -107.623 ppm
+</pre>
+   <p>The fields have the following meaning
+
+     <dl>
+<dt><code>RTC ref time (GMT)</code><dd>This is the RTC reading the last time its error was measured. 
+<br><dt><code>Number of samples</code><dd>This is the number of previous measurements being used to determine the
+RTC gain/loss rate. 
+<br><dt><code>Number of runs</code><dd>This is the number of runs of residuals of the same sign following the
+regression fit for (RTC error) versus (RTC time).  A value which is
+small indicates that the measurements are not well approximated by a
+linear model, and that the algorithm will tend to delete the older
+measurements to improve the fit. 
+<br><dt><code>Sample span period</code><dd>This is the period that the measurements span (from the oldest to the
+newest).  Without a unit the value is in seconds; suffixes `m' for
+minutes, `h' for hours, `d' for days or `y' for years may be used. 
+<br><dt><code>RTC is fast by</code><dd>This is the estimate of how many seconds fast the RTC when it thought
+the time was at the reference time (above).  If this value is large, you
+may (or may not) want to use the <code>trimrtc</code> command to bring the RTC
+into line with the system clock.  (Note, a large error will not affect
+<code>chronyd's</code> operation, unless it becomes so big as to start causing
+rounding errors. 
+<br><dt><code>RTC gains time at</code><dd>This is the amount of time gained (positive) or lost (negative) by the
+real time clock for each second that it ticks.  It is measured in parts
+per million.  So if the value shown was +1, suppose the RTC was exactly
+right when it crosses a particular second boundary.  Then it would be 1
+microsecond fast when it crosses its next second boundary. 
+</dl>
+   <!-- }}} -->
+<!-- {{{ settime -->
+<div class="node">
+<a name="settime-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#sources-command">sources command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#rtcdata-command">rtcdata command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.35 settime</h5>
+
+<p>The <code>settime</code> command allows the current time to be entered
+manually, if this option has been configured into <code>chronyd</code>.  (It may be
+configured either with the <code>manual</code> directive in the configuration
+file (see <a href="#manual-directive">manual directive</a>), or with the <code>manual</code> command of
+chronyc (see <a href="#manual-command">manual command</a>).
+
+   <p>It should be noted that the computer's sense of time will only be as
+accurate as the reference you use for providing this input (e.g. your
+watch), as well as how well you can time the press of the return key. 
+When inputting time to an isolated network, I have a battery operated
+alarm clock that is synchronised to the Rugby MSF time signal in the UK.
+
+   <p>Providing your computer's time zone is set up properly, you will be able
+to enter a local time (rather than UTC).
+
+   <p>The response to a successful <code>settime</code> command indicates the amount
+that the computer's clock was wrong.  It should be apparent from this if
+you have entered the time wrongly, e.g. with the wrong time zone.
+
+   <p>The rate of drift of the system clock is estimated by a regression
+process using the entered measurement and all previous measurements
+entered during the present run of <code>chronyd</code>.  However, the entered
+measurement is used for adjusting the current clock offset (rather than
+the estimated intercept from the regression, which is ignored). 
+Contrast what happens with the <code>manual delete</code> command, where the
+intercept is used to set the current offset (since there is no
+measurement that has just been typed in in that case).
+
+   <p>The time is parsed by the public domain <samp><span class="file">getdate</span></samp> algorithm. 
+Consequently, you can only specify time to the nearest second.
+
+   <p>Examples of inputs that are valid are shown below.
+
+<pre class="example">     settime 16:30
+     settime 16:30:05
+     settime Nov 21, 1997 16:30:05
+</pre>
+   <p>For a full description of <code>getdate</code>, get hold of the getdate
+documentation (bundled, for example, with the source for GNU tar). 
+<!-- }}} -->
+<!-- {{{ sources -->
+<div class="node">
+<a name="sources-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#sourcestats-command">sourcestats command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#settime-command">settime command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.36 sources</h5>
+
+<p>This command displays information about the current time sources that
+<code>chronyd</code> is accessing.
+
+   <p>The optional argument <code>-v</code> can be specified, meaning <em>verbose</em>.  In
+this case, extra caption lines are shown as a reminder of the meanings of the
+columns.
+
+<pre class="example">     210 Number of sources = 3
+     MS Name/IP address      Stratum Poll LastRx Last sample
+     =======================================================================
+     ^+ a.b.c                    3     6    47m  -9491us[-6983us] +/-  159ms
+     ^+ d.e.f                    3     6    47m    +32ms[  +35ms] +/-  274ms
+     ^* g.h.i                    2     6    47m  +8839us[  +11ms] +/-  214ms
+</pre>
+   <p>The columns are as follows:
+
+     <dl>
+<dt><code>M</code><dd>This indicates the mode of the source.  <code>^</code> means a server,
+<code>=</code> means a peer and <code>#</code> indicates a locally connected
+reference clock.
+
+     <br><dt><code>S</code><dd>This column indicates the state of the sources.  <code>*</code> indicates the
+source to which <code>chronyd</code> is current synchronised.  <code>+</code> indicates
+other acceptable sources.  <code>?</code> indicates sources to which
+connectivity has been lost.  <code>x</code> indicates a clock which <code>chronyd</code>
+thinks is is a falseticker (i.e. its time is inconsistent with a
+majority of other sources).  <code>~</code> indicates a source whose time
+appears to have too much variability.  The <code>~</code> condition is also
+shown at start-up, until at least 3 samples have been gathered from it.
+
+     <br><dt><code>Name/IP address</code><dd>This shows the name or the IP address of the source, or refid for
+reference clocks.
+
+     <br><dt><code>Stratum</code><dd>This shows the stratum of the source, as reported in its most recently
+received sample.  Stratum 1 indicates a computer with a locally attached
+reference clock.  A computer that is synchronised to a stratum 1
+computer is at stratum 2.  A computer that is synchronised to a stratum
+2 computer is at stratum 3, and so on.
+
+     <br><dt><code>Poll</code><dd>This shows the rate at which the source is being polled, as a base-2
+logarithm of the interval in seconds.  Thus, a value of 6 would indicate
+that a measurement is being made every 64 seconds.
+
+     <p><code>chronyd</code> automatically varies the polling rate in response to prevailing
+conditions.
+
+     <br><dt><code>LastRx</code><dd>This column shows how long ago the last sample was received from the
+source.  This is normally in seconds.  The letters <code>m</code>, <code>h</code>,
+<code>d</code> or <code>y</code> indicate minutes, hours, days or years.
+
+     <br><dt><code>Last sample</code><dd>This column shows the offset between the local clock and the source at
+the last measurement.  The number in the square brackets shows the
+actual measured offset.  This may be suffixed by <code>ns</code> (indicating
+nanoseconds), <code>us</code> (indicating
+microseconds), <code>ms</code> (indicating milliseconds), or <code>s</code>
+(indicating seconds).  The number to the left of the square brackets
+shows the original measurement, adjusted to allow for any slews applied
+to the local clock since.  The number following the <code>+/-</code> indicator
+shows the margin of error in the measurement.
+
+     <p>Positive offsets indicate that the local clock is fast of the source.
+
+   </dl>
+   <!-- }}} -->
+<!-- {{{ sourcestats -->
+<div class="node">
+<a name="sourcestats-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#tracking-command">tracking command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#sources-command">sources command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.37 sourcestats</h5>
+
+<p>The <code>sourcestats</code> command displays information about the drift rate
+and offset estimatation process for each of the sources currently being
+examined by <code>chronyd</code>.
+
+   <p>The optional argument <code>-v</code> can be specified, meaning <em>verbose</em>.  In
+this case, extra caption lines are shown as a reminder of the meanings of the
+columns.
+
+   <p>An example report is
+
+<pre class="example">     210 Number of sources = 1
+     Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
+     ===============================================================================
+     abc.def.ghi                11   5   46m     -0.001      0.045      1us    25us
+</pre>
+   <p>The columns are as follows
+
+     <dl>
+<dt><code>Name/IP Address</code><dd>This is the name or IP address of the NTP server (or peer) or refid of
+the refclock to which the rest of the line relates.
+
+     <br><dt><code>NP</code><dd>This is the number of sample points currently being retained for the
+server.  The drift rate and current offset are estimated by performing a
+linear regression through these points.
+
+     <br><dt><code>NR</code><dd>This is the number of runs of residuals having the same sign following
+the last regression.  If this number starts to become too small relative
+to the number of samples, it indicates that a straight line is no longer
+a good fit to the data.  If the number of runs is too low,
+<code>chronyd</code> discards older samples and re-runs the regression until
+the number of runs becomes acceptable.
+
+     <br><dt><code>Span</code><dd>This is the interval between the oldest and newest samples.  If no unit
+is shown the value is in seconds.  In the example, the interval is 46
+minutes.
+
+     <br><dt><code>Frequency</code><dd>This is the estimated residual frequency for the server, in parts per
+million.  In this case, the computer's clock is estimated to be running
+1 part in 10**9 slow relative to the server.
+
+     <br><dt><code>Freq Skew</code><dd>This is the estimated error bounds on <code>Freq</code> (again in parts per
+million).
+
+     <br><dt><code>Offset</code><dd>This is the estimated offset of the source.
+
+     <br><dt><code>Std Dev</code><dd>This is the estimated sample standard deviation.
+
+   </dl>
+   <!-- }}} -->
+<!-- {{{ tracking -->
+<div class="node">
+<a name="tracking-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#trimrtc-command">trimrtc command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#sourcestats-command">sourcestats command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.38 tracking</h5>
+
+<p>The <code>tracking</code> command displays parameters about the system's clock
+performance.  An example of the output is shown below.
+
+<pre class="example">     Reference ID    : 1.2.3.4 (a.b.c)
+     Stratum         : 3
+     Ref time (UTC)  : Sun May 17 06:13:11 1998
+     System time     : 0.000000000 seconds fast of NTP time
+     Frequency       : 331.898 ppm fast
+     Residual freq   : 0.004 ppm
+     Skew            : 0.154 ppm
+     Root delay      : 0.373169 seconds
+     Root dispersion : 0.024780 seconds
+</pre>
+   <p>The fields are explained as follows.
+
+     <dl>
+<dt><code>Reference ID</code><dd>This is the refid and name (or IP address) if available, of the server to which
+the computer is currently synchronised.  If this is <code>127.127.1.1</code>
+it means the computer is not synchronised to any external source and
+that you have the `local' mode operating (via the <code>local</code> command
+in <code>chronyc</code> (see <a href="#local-command">local command</a>), or the <code>local</code> directive
+in the <samp><span class="file">/etc/chrony.conf</span></samp> file (see <a href="#local-directive">local directive</a>)).
+
+     <br><dt><code>Stratum</code><dd>The stratum indicates how many hops away from a computer with an
+attached reference clock we are.  Such a computer is a stratum-1
+computer, so the computer in the example is two hops away
+(i.e. <code>a.b.c</code> is a stratum-2 and is synchronised from a stratum-1).
+
+     <br><dt><code>Ref time</code><dd>This is the time (GMT) at which the last measurement from the reference
+source was processed.
+
+     <br><dt><code>System time</code><dd>In normal operation, <code>chronyd</code> <em>never</em> steps the system clock,
+because any jump in the timescale can have adverse consequences for
+certain application programs.  Instead, any error in the system clock is
+corrected by slightly speeding up or slowing down the system clock until
+the error has been removed, and then returning to the system clock's
+normal speed.  A consequence of this is that there will be a period when
+the system clock (as read by other programs using the
+<code>gettimeofday()</code> system call, or by the <code>date</code> command in the
+shell) will be different from <code>chronyd's</code> estimate of the current
+true time (which it reports to NTP clients when it is operating in
+server mode).  The value reported on this line is the difference due to
+this effect.
+
+     <p>On systems such as Solaris and SunOS, <code>chronyd</code> has no means to
+adjust the fundamental rate of the system clock, so keeps the system
+time correct by periodically making offsets to it as though an error had
+been measured.  The build up of these offsets will be observed in this
+report.  On systems such as Linux where <code>chronyd</code> can adjust the
+fundamental rate of the system clock, this value will show zero unless a
+very recent measurement has shown the system to be error.
+
+     <br><dt><code>Frequency</code><dd>The `frequency' is the rate by which the system's clock would be would
+be wrong if <code>chronyd</code> was not correcting it.  It is expressed in
+ppm (parts per million).  For example, a value of 1ppm would mean that
+when the system's clock thinks it has advanced 1 second, it has actually
+advanced by 1.000001 seconds relative to true time.
+
+     <p>As you can see in the example, the clock in the computer I developed
+<code>chrony</code> on is not a very good one - it gains about 30 seconds per
+day!  This was the reason I started to write <code>chrony</code> in the first
+place.
+
+     <br><dt><code>Residual freq</code><dd>This shows the `residual frequency' for the currently selected reference
+source.  This reflects any difference between what the measurements from
+the reference source indicate the frequency should be and the frequency
+currently being used.
+
+     <p>The reason this is not always zero is that a smoothing procedure is
+applied to the frequency.  Each time a measurement from the reference
+source is obtained and a new residual frequency computed, the estimated
+accuracy of this residual is compared with the estimated accuracy (see
+`skew' next) of the existing frequency value.  A weighted average is
+computed for the new frequency, with weights depending on these
+accuracies.  If the measurements from the reference source follow a
+consistent trend, the residual will be driven to zero over time.
+
+     <br><dt><code>Skew</code><dd>This is the estimated error bound on the the frequency.
+
+     <br><dt><code>Root delay</code><dd>This is the total of the network path delays to the stratum-1 computer
+from which the computer is ultimately synchronised.
+
+     <p>In certain extreme situations, this value can be negative.  (This can
+arise in a symmetric peer arrangement where the computers' frequencies
+are not tracking each other and the network delay is very short relative
+to the turn-around time at each computer.)
+
+     <br><dt><code>Root dispersion</code><dd>This is the total dispersion accumulated through all the computers back
+to the stratum-1 computer from which the computer is ultimately
+synchronised.  Dispersion is due to system clock resolution, statistical
+measurement variations etc.
+
+     <p>An absolute bound on the computer's clock accuracy (assuming the
+stratum-1 computer is correct) is given by
+
+     <pre class="example">          clock_error &lt;= root_dispersion + (0.5 * |root_delay|)
+</pre>
+     </dl>
+   <!-- }}} -->
+<!-- {{{ trimrtc -->
+<div class="node">
+<a name="trimrtc-command"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#writertc-command">writertc command</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#tracking-command">tracking command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.39 trimrtc</h5>
+
+<p>The <code>trimrtc</code> command is used to correct the system's real time
+clock (RTC) to the main system clock.  It has no effect if the error
+between the two clocks is currently estimated at less than a second (the
+resolution of the RTC is only 1 second).
+
+   <p>The command takes no arguments.  It performs the following steps (if the
+RTC is more than 1 second away from the system clock):
+
+     <ol type=1 start=1>
+<li>Remember the currently estimated gain/loss rate of the RTC and flush the
+previous measurements. 
+<li>Step the real time clock to bring it within a second of the system clock. 
+<li>Make several measurements to accurately determine the new offset between
+the RTC and the system clock (i.e. the remaining fraction of a second
+error)
+<li>Save the RTC parameters to the RTC file (specified with the
+<code>rtcfile</code> directive in the configuration file (see <a href="#rtcfile-directive">rtcfile directive</a>).
+        </ol>
+
+   <p>The last step is done as a precaution against the computer suffering a
+power failure before either the daemon exits or the <code>writertc</code>
+command is issued.
+
+   <p><code>chronyd</code> will still work perfectly well both whilst operating and
+across machine reboots even if the <code>trimrtc</code> command is never used
+(and the RTC is allowed to drift away from true time).  The
+<code>trimrtc</code> command is provided as a method by which it can be
+corrected, in a manner compatible with <code>chronyd</code> using it to
+maintain accurate time across machine reboots. 
+<!-- }}} -->
+<!-- {{{ writertc -->
+<div class="node">
+<a name="writertc-command"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#trimrtc-command">trimrtc command</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Chronyc-command-reference">Chronyc command reference</a>
+
+</div>
+
+<h5 class="subsubsection">4.3.4.40 writertc</h5>
+
+<p>The <code>writertc</code> command writes the currently estimated error and
+gain/loss rate parameters for the RTC to the RTC file (specified with
+the <code>rtcfile</code> directive (see <a href="#rtcfile-directive">rtcfile directive</a>)).  This
+information is also written automatically when <code>chronyd</code> is killed
+(with SIGHUP, SIGINT, SIGQUIT or SIGTERM). 
+<!-- }}} -->
+<!-- }}} -->
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ apx: porting guide -->
+<div class="node">
+<a name="Porting-guide"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#GPL">GPL</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Usage-reference">Usage reference</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="appendix">Appendix A Porting guide</h2>
+
+<!-- {{{ section top -->
+<p>This appendix discusses issues that have arisen in writing the
+system-specific parts of the existing ports.  This will provide useful
+information for those attempting to write ports to other systems.
+
+<ul class="menu">
+<li><a accesskey="1" href="#System-driver-files">System driver files</a>:          What needs to go in a driver file for a
+                                particular type of system
+<li><a accesskey="2" href="#Quirks-of-particular-systems">Quirks of particular systems</a>:   Problem areas that have been found on ports
+                                already written. 
+</ul>
+<!-- }}} -->
+<!-- {{{ S:system driver files -->
+<div class="node">
+<a name="System-driver-files"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Quirks-of-particular-systems">Quirks of particular systems</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Porting-guide">Porting guide</a>
+
+</div>
+
+<h3 class="section">A.1 System driver files</h3>
+
+<p>The system specific parts of the software are contained in files with
+names like <code>sys_linux.c</code>.
+
+   <p>The following functions are required in a system driver file:
+
+     <ol type=1 start=1>
+<li>A function to read the current frequency
+<li>A function to set the current frequency
+<li>A function to slew the system time by a specified delta
+<li>A function to step the system time by a specified delta
+<li>A function to work out the error at a particular time between the
+system's clock and <code>chronyd's</code> estimate of real time.  (This is required
+because some systems have to track real time by making the system time
+follow it in a 'sawtooth' fashion).
+        </ol>
+
+   <p>The <dfn>frequency</dfn> is the rate at which the system gains or loses time,
+measured relative to the system when running uncompensated. 
+<!-- }}} -->
+<!-- {{{ system quirks -->
+<div class="node">
+<a name="Quirks-of-particular-systems"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#System-driver-files">System driver files</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Porting-guide">Porting guide</a>
+
+</div>
+
+<h3 class="section">A.2 Quirks of particular systems</h3>
+
+<!-- {{{ section top -->
+<p>These sections describe quirks in each system type that needed to be
+investigated to port the software to each system type.
+
+<ul class="menu">
+<li><a accesskey="1" href="#Linux-porting-quirks">Linux porting quirks</a>
+<li><a accesskey="2" href="#Solaris-2_002e5-porting-quirks">Solaris 2.5 porting quirks</a>
+<li><a accesskey="3" href="#SunOS-4_002e1_002e4-porting-quirks">SunOS 4.1.4 porting quirks</a>
+</ul>
+<!-- }}} -->
+<!-- {{{ linux -->
+<div class="node">
+<a name="Linux-porting-quirks"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#Solaris-2_002e5-porting-quirks">Solaris 2.5 porting quirks</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Quirks-of-particular-systems">Quirks of particular systems</a>
+
+</div>
+
+<h4 class="subsection">A.2.1 Linux</h4>
+
+<p>The following quirks have been found in developing the Linux port.
+
+     <ol type=1 start=1>
+<li>In order to avoid floating point arithmetic, the kernel uses shifting
+and adding to approximate a scaling of 100/128.  This approximation
+implies that the frequency set via the <code>adjtimex()</code> system call is
+not the frequency that is actually obtained.  The method of
+approximation varies between kernel versions and must be determined by
+examining the kernel source.  An inverse factor must be included in the
+driver to compensate. 
+<li>In some kernel versions, an <code>adjtimex()</code> system call with the flags
+bits all zeroed will return the amount of offset still to be corrected. 
+In others (e.g. the 2.0 series beyond 2.0.32), the offset must be
+changed in order to get the old offset returned (similar to
+<code>adjtime()</code> on other systems).
+
+        </ol>
+<!-- }}} -->
+<!-- {{{ solaris 2.5 -->
+<div class="node">
+<a name="Solaris-2.5-porting-quirks"></a>
+<a name="Solaris-2_002e5-porting-quirks"></a>
+<p><hr>
+Next:&nbsp;<a rel="next" accesskey="n" href="#SunOS-4_002e1_002e4-porting-quirks">SunOS 4.1.4 porting quirks</a>,
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Linux-porting-quirks">Linux porting quirks</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Quirks-of-particular-systems">Quirks of particular systems</a>
+
+</div>
+
+<h4 class="subsection">A.2.2 Solaris 2.5</h4>
+
+<p>The following quirks have been found in developing the Solaris port.
+
+     <ol type=1 start=1>
+<li>The <code>adjtime()</code> system call with a zero argument does not cancel an
+adjustment that is in progress - it just reports the remaining
+adjustment. 
+<li>The <code>settimeofday()</code> system call only observes the seconds part of
+the argument - any fractional seconds part is lost. 
+second. 
+<li>The kernel variable <code>dosynctodr</code> has to be set to zero, otherwise
+the system clock is periodically reset to the real-time clock.
+        </ol>
+<!-- }}} -->
+<!-- {{{ sunos 4.1.4 -->
+<div class="node">
+<a name="SunOS-4.1.4-porting-quirks"></a>
+<a name="SunOS-4_002e1_002e4-porting-quirks"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Solaris-2_002e5-porting-quirks">Solaris 2.5 porting quirks</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Quirks-of-particular-systems">Quirks of particular systems</a>
+
+</div>
+
+<h4 class="subsection">A.2.3 SunOS 4.1.4</h4>
+
+<p>The following quirks have been found in developing the SunOS port.
+
+     <ol type=1 start=1>
+<li>The <code>adjtime()</code> system call truncates its argument to a multiple of
+the system's <code>tickadj</code> variable.  (<code>chronyd</code> sets that to 100,
+giving a 1 part in 100 slewing capability for correcting offsets.) 
+<li>The kernel variable <code>dosynctodr</code> has to be set to zero, otherwise
+the system clock is periodically reset to the real-time clock.
+        </ol>
+<!-- }}} -->
+<!-- }}} -->
+<!-- }}} -->
+<!-- {{{ apx:GNU General Public License -->
+<div class="node">
+<a name="GPL"></a>
+<p><hr>
+Previous:&nbsp;<a rel="previous" accesskey="p" href="#Porting-guide">Porting guide</a>,
+Up:&nbsp;<a rel="up" accesskey="u" href="#Top">Top</a>
+
+</div>
+
+<h2 class="appendix">Appendix B GNU General Public License</h2>
+
+<div align="center">GNU GENERAL PUBLIC LICENSE</div>
+<div align="center">Version 2, June 1991</div>
+
+   <p>Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+   <p>			    Preamble
+
+   <p>The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software&ndash;to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+   <p>When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+   <p>To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights. 
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+   <p>For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+   <p>We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+   <p>Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+   <p>Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+   <p>The precise terms and conditions for copying, distribution and
+modification follow.
+
+   <p>		    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+   <p>0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+   <p>Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program). 
+Whether that is true depends on what the Program does.
+
+   <p>1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+   <p>You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+   <p>2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+   <p>a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+   <p>b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+   <p>c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+   <p>These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+   <p>Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+   <p>In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+   <p>3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+   <p>a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+   <p>b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+   <p>c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+   <p>The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+   <p>If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+   <p>4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License. 
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+   <p>5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+   <p>6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein. 
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+   <p>7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+   <p>If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+   <p>It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+   <p>This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+   <p>8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+   <p>9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+   <p>Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and "any
+later version", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+   <p>10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+   <p>			    NO WARRANTY
+
+   <p>11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+   <p>12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+   <p>		     END OF TERMS AND CONDITIONS
+
+   <p>	    How to Apply These Terms to Your New Programs
+
+   <p>If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+   <p>To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+   <p>&lt;one line to give the program's name and a brief idea of what it does.&gt;
+    Copyright (C) &lt;year&gt;  &lt;name of author&gt;
+
+   <p>This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+   <p>This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+   <p>You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+   <p>Also add information on how to contact you by electronic and paper mail.
+
+   <p>If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+   <p>Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. 
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+   <p>The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items&ndash;whatever suits your program.
+
+   <p>You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the program, if
+necessary.  Here is a sample; alter the names:
+
+   <p>Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+   <p>&lt;signature of Ty Coon&gt;, 1 April 1989
+  Ty Coon, President of Vice
+
+   <p>This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License. 
+<!-- }}} -->
+   <div class="contents">
+<h2>Table of Contents</h2>
+<ul>
+<li><a name="toc_Top" href="#Top">User guide for the chrony suite</a>
+<li><a name="toc_Introduction" href="#Introduction">1 Introduction</a>
+<ul>
+<li><a href="#Overview">1.1 Overview</a>
+<li><a href="#Acknowledgements">1.2 Acknowledgements</a>
+<li><a href="#Availability">1.3 Availability</a>
+<ul>
+<li><a href="#Getting-the-software">1.3.1 Getting the software</a>
+<li><a href="#Platforms">1.3.2 Platforms</a>
+</li></ul>
+<li><a href="#Other-time-synchronisation-packages">1.4 Relationship to other software packages</a>
+<ul>
+<li><a href="#Comparison-with-xntpd">1.4.1 xntpd</a>
+<li><a href="#Comparison-with-timed">1.4.2 timed</a>
+</li></ul>
+<li><a href="#Distribution-and-warranty">1.5 Distribution rights and (lack of) warranty</a>
+<li><a href="#Bug-reporting">1.6 Bug reporting and suggestions</a>
+<li><a href="#Contributing">1.7 Contributions</a>
+</li></ul>
+<li><a name="toc_Installation" href="#Installation">2 Installation</a>
+<ul>
+<li><a href="#line-editing-support">2.1 Support for line editing libraries</a>
+<li><a href="#package-builders">2.2 Extra options for package builders</a>
+</li></ul>
+<li><a name="toc_Typical-scenarios" href="#Typical-scenarios">3 Typical operating scenarios</a>
+<ul>
+<li><a href="#Computers-on-the-net">3.1 Computers connected to the internet</a>
+<li><a href="#Infrequent-connection">3.2 Infrequent connection to true NTP servers</a>
+<ul>
+<li><a href="#Configuration-for-infrequent-connections">3.2.1 Setting up the configuration file for infrequent connections</a>
+<li><a href="#Advising-chronyd-of-internet-availability">3.2.2 How to tell chronyd when the internet link is available.</a>
+</li></ul>
+<li><a href="#Isolated-networks">3.3 Isolated networks</a>
+<li><a href="#Dial_002dup-home-PCs">3.4 The home PC with a dial-up connection</a>
+<ul>
+<li><a href="#Dial_002dup-overview">3.4.1 Assumptions/how the software works</a>
+<li><a href="#Dial_002dup-configuration">3.4.2 Typical configuration files.</a>
+</li></ul>
+<li><a href="#Configuration-options-overview">3.5 Other important configuration options</a>
+</li></ul>
+<li><a name="toc_Usage-reference" href="#Usage-reference">4 Usage reference</a>
+<ul>
+<li><a href="#Starting-chronyd">4.1 Starting chronyd</a>
+<li><a href="#Configuration-file">4.2 The chronyd configuration file</a>
+<ul>
+<li><a href="#comments-in-config-file">4.2.1 Comments in the configuration file</a>
+<li><a href="#acquisitionport-directive">4.2.2 acquisitionport</a>
+<li><a href="#allow-directive">4.2.3 allow</a>
+<li><a href="#bindaddress-directive">4.2.4 bindaddress</a>
+<li><a href="#bindcmdaddress-directive">4.2.5 bindcmdaddress</a>
+<li><a href="#broadcast-directive">4.2.6 broadcast</a>
+<li><a href="#cmdallow-directive">4.2.7 cmdallow</a>
+<li><a href="#cmddeny-directive">4.2.8 cmddeny</a>
+<li><a href="#commandkey-directive">4.2.9 commandkey</a>
+<li><a href="#cmdport-directive">4.2.10 cmdport</a>
+<li><a href="#deny-directive">4.2.11 deny</a>
+<li><a href="#driftfile-directive">4.2.12 driftfile</a>
+<li><a href="#dumpdir-directive">4.2.13 dumpdir</a>
+<li><a href="#dumponexit-directive">4.2.14 dumponexit</a>
+<li><a href="#initstepslew-directive">4.2.15 initstepslew</a>
+<li><a href="#keyfile-directive">4.2.16 keyfile</a>
+<li><a href="#local-directive">4.2.17 local</a>
+<li><a href="#linux_005fhz-directive">4.2.18 linux_hz</a>
+<li><a href="#linux_005ffreq_005fscale-directive">4.2.19 linux_freq_scale</a>
+<li><a href="#log-directive">4.2.20 log</a>
+<ul>
+<li><a href="#measurements-log">4.2.20.1 Measurements log file format</a>
+<li><a href="#statistics-log">4.2.20.2 Statistics log file format</a>
+<li><a href="#tracking-log">4.2.20.3 Tracking log file format</a>
+<li><a href="#RTC-log">4.2.20.4 Real-time clock log file format</a>
+<li><a href="#refclocks-log">4.2.20.5 Refclocks log file format</a>
+</li></ul>
+<li><a href="#logchange-directive">4.2.21 logchange</a>
+<li><a href="#logdir-directive">4.2.22 logdir</a>
+<li><a href="#mailonchange-directive">4.2.23 mailonchange</a>
+<li><a href="#makestep-directive">4.2.24 makestep</a>
+<li><a href="#manual-directive">4.2.25 manual</a>
+<li><a href="#maxupdateskew-directive">4.2.26 maxupdateskew</a>
+<li><a href="#noclientlog-directive">4.2.27 noclientlog</a>
+<li><a href="#clientloglimit-directive">4.2.28 clientloglimit</a>
+<li><a href="#peer-directive">4.2.29 peer</a>
+<li><a href="#pidfile-directive">4.2.30 pidfile</a>
+<li><a href="#port-directive">4.2.31 port</a>
+<li><a href="#refclock-directive">4.2.32 refclock</a>
+<li><a href="#rtcdevice-directive">4.2.33 rtcdevice</a>
+<li><a href="#rtcfile-directive">4.2.34 rtcfile</a>
+<li><a href="#rtconutc-directive">4.2.35 rtconutc</a>
+<li><a href="#sched_005fpriority-directive">4.2.36 sched_priority</a>
+<li><a href="#lock_005fall-directive">4.2.37 lock_all</a>
+<li><a href="#server-directive">4.2.38 server</a>
+</li></ul>
+<li><a href="#Running-chronyc">4.3 Running chronyc</a>
+<ul>
+<li><a href="#Chronyc-basic-use">4.3.1 Basic use</a>
+<li><a href="#Chronyc-command-line-options">4.3.2 Command line options</a>
+<li><a href="#Security-with-chronyc">4.3.3 Security with chronyc</a>
+<li><a href="#Chronyc-command-reference">4.3.4 Command reference</a>
+<ul>
+<li><a href="#accheck-command">4.3.4.1 accheck</a>
+<li><a href="#activity-command">4.3.4.2 activity</a>
+<li><a href="#add-peer-command">4.3.4.3 add peer</a>
+<li><a href="#add-server-command">4.3.4.4 add server</a>
+<li><a href="#allow-command">4.3.4.5 allow</a>
+<li><a href="#allow-all-command">4.3.4.6 allow all</a>
+<li><a href="#burst-command">4.3.4.7 burst</a>
+<li><a href="#clients-command">4.3.4.8 clients</a>
+<li><a href="#cmdaccheck-command">4.3.4.9 cmdaccheck</a>
+<li><a href="#cmdallow-command">4.3.4.10 cmdallow</a>
+<li><a href="#cmdallow-all-command">4.3.4.11 cmdallow all</a>
+<li><a href="#cmddeny-command">4.3.4.12 cmddeny</a>
+<li><a href="#cmddeny-all-command">4.3.4.13 cmddeny all</a>
+<li><a href="#cyclelogs-command">4.3.4.14 cyclelogs</a>
+<li><a href="#delete-command">4.3.4.15 delete</a>
+<li><a href="#deny-command">4.3.4.16 deny</a>
+<li><a href="#deny-all-command">4.3.4.17 deny all</a>
+<li><a href="#dns-command">4.3.4.18 dns</a>
+<li><a href="#dump-command">4.3.4.19 dump</a>
+<li><a href="#exit-command">4.3.4.20 exit</a>
+<li><a href="#help-command">4.3.4.21 help</a>
+<li><a href="#local-command">4.3.4.22 local</a>
+<li><a href="#makestep-command">4.3.4.23 makestep</a>
+<li><a href="#manual-command">4.3.4.24 manual</a>
+<li><a href="#maxdelay-command">4.3.4.25 maxdelay</a>
+<li><a href="#maxdelayratio-command">4.3.4.26 maxdelayratio</a>
+<li><a href="#maxpoll-command">4.3.4.27 maxpoll</a>
+<li><a href="#maxupdateskew-command">4.3.4.28 maxupdateskew</a>
+<li><a href="#minpoll-command">4.3.4.29 minpoll</a>
+<li><a href="#offline-command">4.3.4.30 offline</a>
+<li><a href="#online-command">4.3.4.31 online</a>
+<li><a href="#password-command">4.3.4.32 password</a>
+<li><a href="#quit-command">4.3.4.33 quit</a>
+<li><a href="#rtcdata-command">4.3.4.34 rtcdata</a>
+<li><a href="#settime-command">4.3.4.35 settime</a>
+<li><a href="#sources-command">4.3.4.36 sources</a>
+<li><a href="#sourcestats-command">4.3.4.37 sourcestats</a>
+<li><a href="#tracking-command">4.3.4.38 tracking</a>
+<li><a href="#trimrtc-command">4.3.4.39 trimrtc</a>
+<li><a href="#writertc-command">4.3.4.40 writertc</a>
+</li></ul>
+</li></ul>
+</li></ul>
+<li><a name="toc_Porting-guide" href="#Porting-guide">Appendix A Porting guide</a>
+<ul>
+<li><a href="#System-driver-files">A.1 System driver files</a>
+<li><a href="#Quirks-of-particular-systems">A.2 Quirks of particular systems</a>
+<ul>
+<li><a href="#Linux-porting-quirks">A.2.1 Linux</a>
+<li><a href="#Solaris-2_002e5-porting-quirks">A.2.2 Solaris 2.5</a>
+<li><a href="#SunOS-4_002e1_002e4-porting-quirks">A.2.3 SunOS 4.1.4</a>
+</li></ul>
+</li></ul>
+<li><a name="toc_GPL" href="#GPL">Appendix B GNU General Public License</a>
+</li></ul>
+</div>
+
+
+
+</body></html>
+
diff -urNpa s01/chrony.info s02/chrony.info
--- s01/chrony.info	1970-01-01 01:00:00.000000000 +0100
+++ s02/chrony.info	2015-04-10 21:57:00.000000000 +0200
@@ -0,0 +1,4492 @@
+This is chrony.info, produced by makeinfo version 4.13 from chrony.texi.
+
+INFO-DIR-SECTION Net Utilities
+START-INFO-DIR-ENTRY
+* chrony: (chrony).			How to use chronyd and chronyc
+* chronyd: (chrony)Starting chronyd.	Reference for chronyd
+* chronyc: (chrony)Running chronyc.	Reference for chronyc
+END-INFO-DIR-ENTRY
+
+
+File: chrony.info,  Node: Top,  Next: Introduction,  Up: (dir)
+
+User guide for the chrony suite
+*******************************
+
+* Menu:
+
+* Introduction::                What the chrony suite does
+* Installation::                How to compile and install the software
+* Typical scenarios::           How to configure the software for some common cases
+* Usage reference::             Reference manual
+* Porting guide::               Hints to help with porting the software
+* GPL::                         The GNU General Public License
+
+
+File: chrony.info,  Node: Introduction,  Next: Installation,  Prev: Top,  Up: Top
+
+1 Introduction
+**************
+
+* Menu:
+
+* Overview::                    What the programs do
+* Acknowledgements::            Credit where credit is due
+* Availability::                Where to get the software
+* Other time synchronisation packages::  Comparision with other software
+* Distribution and warranty::   There is no warranty
+* Bug reporting::               How to report bugs and make suggestions
+* Contributing::                Areas where contributions are particularly welcome
+
+
+File: chrony.info,  Node: Overview,  Next: Acknowledgements,  Up: Introduction
+
+1.1 Overview
+============
+
+Chrony is a software package for maintaining the accuracy of computer
+system clocks.  It consists of a pair of programs :
+
+   * `chronyd'.  This is a daemon which runs in background on the
+     system.  It obtains measurements (e.g. via the network) of the
+     system's offset relative to other systems, and adjusts the system
+     time accordingly.  For isolated systems, the user can periodically
+     enter the correct time by hand (using `chronyc').  In either case,
+     `chronyd' determines the rate at which the computer gains or loses
+     time, and compensates for this.
+
+     `chronyd' can also act as an NTP server, and provide a time-of-day
+     service to other computers.  A typical set-up is to run `chronyd'
+     on a gateway computer that has a dial-up link to the Internet, and
+     use it to serve time to computers on a private LAN sitting behind
+     the gateway.  The IP addresses that can act as clients of
+     `chronyd' can be tightly controlled.  The default is no client
+     access.
+
+   * `chronyc'.  This is a command-line driven control and monitoring
+     program.  An administrator can use this to fine-tune various
+     parameters within the daemon, add or delete servers etc whilst the
+     daemon is running.
+
+     The IP addresses from which `chronyc' clients may connect can be
+     tightly controlled.  The default is just the computer that
+     `chronyd' itself is running on.
+
+
+File: chrony.info,  Node: Acknowledgements,  Next: Availability,  Prev: Overview,  Up: Introduction
+
+1.2 Acknowledgements
+====================
+
+The `chrony' suite makes use of the algorithm known as _RSA Data
+Security, Inc. MD5 Message-Digest Algorithm_ for authenticating
+messages between different machines on the network.
+
+   In writing the `chronyd' program, extensive use has been made of
+RFC1305, written by David Mills.  I have occasionally referred to the
+`xntp' suite's source code to check details of the protocol that the
+RFC did not make absolutely clear.  The core algorithms in `chronyd'
+are all completely distinct from `xntp', however.
+
+
+File: chrony.info,  Node: Availability,  Next: Other time synchronisation packages,  Prev: Acknowledgements,  Up: Introduction
+
+1.3 Availability
+================
+
+* Menu:
+
+* Getting the software::        Where can I get the software from?
+* Platforms::                   Which platforms will it run on?
+
+
+File: chrony.info,  Node: Getting the software,  Next: Platforms,  Up: Availability
+
+1.3.1 Getting the software
+--------------------------
+
+Links on the chrony home page (http://chrony.tuxfamily.org) describe
+how to obtain the software.
+
+
+File: chrony.info,  Node: Platforms,  Prev: Getting the software,  Up: Availability
+
+1.3.2 Platforms
+---------------
+
+Although most of the program is portable between Unix-like systems,
+there are parts that have to be tailored to each specific vendor's
+system.  These are the parts that interface with the operating system's
+facilities for adjusting the system clock; different operating systems
+may provide different function calls to achieve this, and even where
+the same function is used it may have different quirks in its behaviour.
+
+   The software is known to work in the following environments:
+   * Linux on i386, x86_64 and PowerPC architectures.  The software is
+     known to work on Linux 2.0.x and newer.  Prior to 2.0.31, the real
+     time clock can't be used.
+
+   * NetBSD
+
+   * BSD/386
+
+   * Solaris 2.3/2.5/2.5.1/2.6/2.7/2.8 on Sparc (Sparc 20, Ultrasparc)
+     and i386
+
+   * SunOS 4.1.4 on Sparc 2 and Sparc20.
+
+   Closely related systems may work too, but they have not been tested.
+
+   Porting the software to other system (particularly to those
+supporting an `adjtime' system call) should not be difficult, however it
+requires access to such systems to test out the driver.
+
+
+File: chrony.info,  Node: Other time synchronisation packages,  Next: Distribution and warranty,  Prev: Availability,  Up: Introduction
+
+1.4 Relationship to other software packages
+===========================================
+
+* Menu:
+
+* Comparison with xntpd::
+* Comparison with timed::
+
+
+File: chrony.info,  Node: Comparison with xntpd,  Next: Comparison with timed,  Up: Other time synchronisation packages
+
+1.4.1 xntpd
+-----------
+
+The `reference' implementation of the Network Time Protocol is the
+program `xntpd', available via The NTP home page
+(http://www.eecis.udel.edu/~ntp).
+
+   `xntpd' is designed to support all the operating modes defined by
+RFC1305, and has driver support for a large number of reference clocks
+(such as GPS receivers) that can be connected directly to a computer,
+thereby providing a so-called 'stratum 1' server.
+
+   Things `chronyd' can do that `xntpd' can't:
+
+   * `chronyd' can perform usefully in an environment where access to
+     the time reference is intermittent.  `chronyd' estimates _both_
+     the current time offset _and_ the rate at which the computer's
+     clock gains or loses time, and can use that rate estimate to trim
+     the clock after the reference disappears.  `xntpd' corrects any
+     time offset by speeding up and slowing down the computer clock, and
+     so could be left with a significant rate error if the reference
+     disappears whilst it is trying to correct a big offset.
+
+   * `chronyd' provides support for isolated networks whether the only
+     method of time correction is manual entry (e.g. by the
+     administrator looking at a clock).  `chronyd' can look at the
+     errors corrected at different updates to work out the rate at
+     which the computer gains or loses time, and use this estimate to
+     trim the computer clock subsequently.
+
+   * `chronyd' provides support to work out the gain or loss rate of the
+     `real-time clock', i.e. the clock that maintains the time when the
+     computer is turned off.  It can use this data when the system
+     boots to set the system time from a corrected version of the
+     real-time clock.  These real-time clock facilities are only
+     available on certain releases of Linux, so far.
+
+   * The `xntpd' program is supported by other programs to carry out
+     certain functions.  `ntpdate' is used to provide an initial
+     correction to the system clock based on a `one-shot' sampling of
+     other NTP servers.  `tickadj' is used to adjust certain operating
+     system parameters to make `xntpd' work better.  All this
+     functionality is integrated into `chronyd'.
+
+   Things `xntpd' can do that `chronyd' can't:
+
+   * `xntpd' supports effectively all of RFC1305, including broadcast /
+     multicast clients and extra encryption schemes for authenticating
+     data packets.
+
+   * `xntpd' has been ported to more types of computer / operating
+     system (so far).
+
+   * xntpd is designed to work solely with integer arithmetic (i.e.
+     does not require floating point support from its host).
+
+
+File: chrony.info,  Node: Comparison with timed,  Prev: Comparison with xntpd,  Up: Other time synchronisation packages
+
+1.4.2 timed
+-----------
+
+`timed' is a program that is part of the BSD networking suite.  It uses
+broadcast packets to find all machines running the daemon within a
+subnet.  The machines elect a master which periodically measures the
+system clock offsets of the other computers using ICMP timestamps.
+Corrections are sent to each member as a result of this process.
+
+   Problems that may arise with `timed' are :
+
+   * Because it uses broadcasts, it is not possible to isolate its
+     functionality to a particular group of computers; there is a risk
+     of upsetting other computers on the same network (e.g. where a
+     whole company is on the same subnet but different departments are
+     independent from the point of view of administering their
+     computers.)
+
+   * The update period appears to be 10 minutes.  Computers can build up
+     significant offsets relative to each other in that time.  If a
+     computer can estimate its rate of drift it can keep itself closer
+     to the other computers between updates by adjusting its clock
+     every few seconds.  `timed' does not seem to do this.
+
+   * `timed' does not have any integrated capability for feeding
+     real-time into its estimates, or for estimating the average rate
+     of time loss/gain of the machines relative to real-time (unless
+     one of the computers in the group has access to an external
+     reference and is always appointed as the `master').
+
+   `timed' does have the benefit over `chronyd' that for isolated
+networks of computers, they will track the `majority vote' time.  For
+such isolated networks, `chronyd' requires one computer to be the
+`master' with the others slaved to it.  If the master has a particular
+defective clock, the whole set of computers will tend to slip relative
+to real time (but they _will_ stay accurate relative to one another).
+
+
+File: chrony.info,  Node: Distribution and warranty,  Next: Bug reporting,  Prev: Other time synchronisation packages,  Up: Introduction
+
+1.5 Distribution rights and (lack of) warranty
+==============================================
+
+Chrony may be distributed in accordance with the GNU General Public
+License version 2, reproduced in *Note GPL::.
+
+
+File: chrony.info,  Node: Bug reporting,  Next: Contributing,  Prev: Distribution and warranty,  Up: Introduction
+
+1.6 Bug reporting and suggestions
+=================================
+
+If you think you've found a bug in chrony, or have a suggestion, please
+let us know.  You can join chrony users mailing list by sending a
+message with the subject subscribe to
+<chrony-users-request@chrony.tuxfamily.org>.  Only subscribers can post
+to the list.
+
+   When you are reporting a bug, please send us all the information you
+can.  Unfortunately, chrony has proven to be one of those programs
+where it is very difficult to reproduce bugs in a different
+environment.  So we may have to interact with you quite a lot to obtain
+enough extra logging and tracing to pin-point the problem in some
+cases.  Please be patient and plan for this!
+
+   Of course, if you can debug the problem yourself and send us a
+source code patch to fix it, we will be very grateful!
+
+
+File: chrony.info,  Node: Contributing,  Prev: Bug reporting,  Up: Introduction
+
+1.7 Contributions
+=================
+
+Although chrony is now a fairly mature and established project, there
+are still areas that could be improved.  If you can program in C and
+have some expertise in these areas, you might be able to fill the gaps.
+
+   Particular areas that need addressing are :
+
+  1. Porting to other Unices
+
+     This involves creating equivalents of sys_solaris.c, sys_linux.c
+     etc for the new system.  Note, the Linux driver has been reported
+     as working on a range of different architectures (Alpha, Sparc,
+     MIPS as well as x86 of course).
+
+  2. Porting to Windows NT
+
+     I did a small amount of work on this under Cygwin.  Only the
+     sorting out of the include files has really been achieved so far.
+     The two main areas still to address are
+
+       1. The system clock driver.
+
+       2. How to make chronyd into an NT service (i.e. what to replace
+          fork(), setsid() etc with so that chronyd can be
+          automatically started in the system bootstrap.
+
+  3. More drivers for reference clock support
+
+  4. Automation of the trimrtc and writertc mechanisms
+
+     Currently, the RTC trimming mechanism is a manual operation,
+     because there has to be a reasonable guarantee that the system
+     will stay up for a reasonable length of time afterwards.  (If it
+     is shut down too soon, a poor characterisation of the RTC drift
+     rate will be stored on disc, giving a bad system clock error when
+     the system is next booted.)
+
+     To make chrony more automated for the non-expert user, it would be
+     useful if this problem could be avoided so that trimrtc could be
+     done automatically (e.g.  in a crontab, or as part of the ip-up or
+     ip-down scripts.)
+
+
+
+File: chrony.info,  Node: Installation,  Next: Typical scenarios,  Prev: Introduction,  Up: Top
+
+2 Installation
+**************
+
+The software is distributed as source code which has to be compiled.
+The source code is supplied in the form of a gzipped tar file, which
+unpacks to a subdirectory identifying the name and version of the
+program.
+
+   After unpacking the source code, change directory into it, and type
+
+     ./configure
+
+   This is a shell script that automatically determines the system type.
+There is a single optional parameter, `--prefix' which indicates the
+directory tree where the software should be installed.  For example,
+
+     ./configure --prefix=/opt/free
+
+   will install the `chronyd' daemon into /opt/free/sbin and the
+chronyc control program into /opt/free/bin.  The default value for the
+prefix is /usr/local.
+
+   The configure script assumes you want to use gcc as your compiler.
+If you want to use a different compiler, you can configure this way:
+
+     CC=cc CFLAGS=-O ./configure --prefix=/opt/free
+
+   for Bourne-family shells, or
+
+     setenv CC cc
+     setenv CFLAGS -O
+     ./configure --prefix=/opt/free
+
+   for C-family shells.
+
+   If the software cannot (yet) be built on your system, an error
+message will be shown.  Otherwise, `Makefile' will be generated.
+
+   If editline or readline library is available, chronyc will be built
+with line editing support.  If you don't want this, specify the
+-disable-readline flag to configure.  Please refer to *note line
+editing support:: for more information.
+
+   If a `timepps.h' header is available, chronyd will be built with PPS
+API reference clock driver.  If the header is installed in a location
+that isn't normally searched by the compiler, you can add it to the
+searched locations by setting `CPPFLAGS' variable to
+`-I/path/to/timepps'.
+
+   Now type
+
+     make
+
+   to build the programs.
+
+   If you want to build the manual in plain text, HTML and info
+versions, type
+
+     make docs
+
+   Once the programs have been successfully compiled, they need to be
+installed in their target locations.  This step normally needs to be
+performed by the superuser, and requires the following command to be
+entered.
+
+     make install
+
+   This will install the binaries, plain text manual and manpages.
+
+   To install the HTML and info versions of the manual as well, enter
+the command
+
+     make install-docs
+
+   If you want chrony to appear in the top level info directory
+listing, you need to run the `install-info' command manually after this
+step.  `install-info' takes 2 arguments.  The first is the path to the
+`chrony.info' file you have just installed.  This will be the argument
+you gave to -prefix when you configured (`/usr/local' by default), with
+`/share/info/chrony.info' on the end.  The second argument is the
+location of the file called `dir'.  This will typically be
+`/usr/share/info/dir'.  So the typical command line would be
+
+     install-info /usr/local/share/info/chrony.info /usr/share/info/dir
+
+   Now that the software is successfully installed, the next step is to
+set up a configuration file.  The contents of this depend on the
+network environment in which the computer operates.  Typical scenarios
+are described in the following section of the document.
+
+* Menu:
+
+* line editing support::        If libraries are in a non-standard place
+* package builders::            Extra options useful to package builders
+
+
+File: chrony.info,  Node: line editing support,  Next: package builders,  Up: Installation
+
+2.1 Support for line editing libraries
+======================================
+
+Chronyc can be built with support for line editing, this allows you to
+use the cursor keys to replay and edit old commands.  Two libraries are
+supported which provide such functionality, editline and GNU readline.
+
+   Please note that readline since version 6.0 is licensed under GPLv3+
+which is incompatible with chrony's license GPLv2.  You should use
+editline instead if you don't want to use older readline versions.
+
+   The configure script will automatically enable the line editing
+support if one of the supported libraries is available.  If they are
+both available, the editline library will be used.
+
+   If you don't want to use it (in which case chronyc will use a
+minimal command line interface), invoke configure like this:
+
+     ./configure --disable-readline other-options...
+
+   If you have editline, readline or ncurses installed in locations
+that aren't normally searched by the compiler and linker, you need to
+use extra options:
+
+`--with-readline-includes=directory_name'
+     This defines the name of the directory above the one where
+     `readline.h' is.  `readline.h' is assumed to be in `editline' or
+     `readline' subdirectory of the named directory.
+
+`--with-readline-library=directory_name'
+     This defines the directory containing the `libedit.a' or
+     `libedit.so' file, or `libreadline.a' or `libreadline.so' file.
+
+`--with-ncurses-library=directory_name'
+     This defines the directory containing the `libncurses.a' or
+     `libncurses.so' file.
+
+
+File: chrony.info,  Node: package builders,  Prev: line editing support,  Up: Installation
+
+2.2 Extra options for package builders
+======================================
+
+The configure and make procedures have some extra options that may be
+useful if you are building a distribution package for chrony.
+
+   The -infodir=DIR option to configure specifies an install directory
+for the info files.  This overrides the `info' subdirectory of the
+argument to the -prefix option.  For example, you might use
+
+     ./configure --prefix=/usr --infodir=/usr/share/info
+
+   The -mandir=DIR option to configure specifies an install directory
+for the man pages.  This overrides the `man' subdirectory of the
+argument to the -prefix option.
+
+     ./configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man
+
+   to set both options together.
+
+   The final option is the DESTDIR option to the make command.  For
+example, you could use the commands
+
+     ./configure --prefix=/usr --infodir=/usr/share/info --mandir=/usr/share/man
+     make all docs
+     make install DESTDIR=./tmp
+     cd tmp
+     tar cvf - . | gzip -9 > chrony.tar.gz
+
+   to build a package.  When untarred within the root directory, this
+will install the files to the intended final locations.
+
+
+File: chrony.info,  Node: Typical scenarios,  Next: Usage reference,  Prev: Installation,  Up: Top
+
+3 Typical operating scenarios
+*****************************
+
+* Menu:
+
+* Computers on the net::        Your computer is permanently on the Internet (or on
+                                a private network with NTP servers)
+* Infrequent connection::       You connect to the Internet sometimes (e.g. via a modem)
+* Isolated networks::           You have an isolated network with no reference clocks
+* Dial-up home PCs::            Additional considerations if you turn your computer off
+                                when it's not in use.
+* Configuration options overview::  Overview of some configuration options.
+
+
+File: chrony.info,  Node: Computers on the net,  Next: Infrequent connection,  Up: Typical scenarios
+
+3.1 Computers connected to the internet
+=======================================
+
+In this section we discuss how to configure chrony for computers that
+have permanent connections to the internet (or to any network
+containing true NTP servers which ultimately derive their time from a
+reference clock).
+
+   To operate in this mode, you will need to know the names of the NTP
+server machines you wish to use.  You may be able to find names of
+suitable servers by one of the following methods:
+
+   * Your institution may already operate servers on its network.
+     Contact your system administrator to find out.
+
+   * Your ISP probably has one or more NTP servers available for its
+     customers.
+
+   * Somewhere under the NTP homepage there is a list of public stratum
+     1 and stratum 2 servers.  You should find one or more servers that
+     are near to you -- check that their access policy allows you to
+     use their facilities.
+
+   Assuming that you have found some servers, you need to set up a
+configuration file to run chrony.  The (compiled-in) default location
+for this file is `/etc/chrony.conf'.  Assuming that your ntp servers
+are called `a.b.c' and `d.e.f', your `chrony.conf' file could contain
+as a minimum
+
+     server a.b.c
+     server d.e.f
+     server g.h.i
+
+   However, you will probably want to include some of the other
+directives described later.  The following directives will be
+particularly useful : `driftfile', `commandkey', `keyfile'.  The
+smallest useful configuration file would look something like
+
+     server a.b.c
+     server d.e.f
+     server g.h.i
+     keyfile /etc/chrony.keys
+     commandkey 1
+     driftfile /etc/chrony.drift
+
+
+File: chrony.info,  Node: Infrequent connection,  Next: Isolated networks,  Prev: Computers on the net,  Up: Typical scenarios
+
+3.2 Infrequent connection to true NTP servers
+=============================================
+
+In this section we discuss how to configure chrony for computers that
+have occasional connections to the internet.
+
+* Menu:
+
+* Configuration for infrequent connections::  How to set up the `/etc/chrony' file
+* Advising chronyd of internet availability::  How to tell chronyd when the link is available
+
+
+File: chrony.info,  Node: Configuration for infrequent connections,  Next: Advising chronyd of internet availability,  Up: Infrequent connection
+
+3.2.1 Setting up the configuration file for infrequent connections
+------------------------------------------------------------------
+
+As in the previous section, you will need access to NTP servers on the
+internet.  The same remarks apply for how to find them.
+
+   In this case, you will need some additional configuration to tell
+`chronyd' when the connection to the internet goes up and down.  This
+saves the program from continuously trying to poll the servers when
+they are inaccessible.
+
+   Again, assuming that your ntp servers are called `a.b.c' and
+`d.e.f', your `chrony.conf' file would need to contain something like
+
+     server a.b.c
+     server d.e.f
+     server g.h.i
+
+   However, the following issues need to be addressed:
+
+  1. Your computer probably doesn't have DNS access whilst offline to
+     turn the machine names into IP addresses.
+
+  2. Your computer will keep trying to contact the servers to obtain
+     timestamps, even whilst offline.  If you operate a dial-on-demand
+     system, things are even worse, because the link to the internet
+     will keep getting established.
+
+   For this reason, it would be better to specify this part of your
+configuration file in the following way:
+
+     server 1.2.3.4 offline
+     server 5.6.7.8 offline
+     server 9.10.11.12 offline
+
+   Because numeric IP addresses have been used, the first problem is
+overcome.  The `offline' keyword indicates that the servers start in an
+offline state, and that they should not be contacted until `chronyd'
+receives notification that the link to the internet is present.
+
+   An alternative is to use the names of the NTP servers, and put
+entries for them into your `/etc/hosts' file.  This will be OK as long
+as `files' comes before `dns' in the `hosts' line of the
+`/etc/nsswitch.conf' file.
+
+   In order to notify `chronyd' of the presence of the link, you will
+need to be able to log in to it with the program chronyc.  To do this,
+`chronyd' needs to be configured with an administrator password.  To
+set up an administrator password, you can create a file
+`/etc/chrony.keys' containing a single line
+
+     1 xyzzy
+
+   and add the following line to `/etc/chrony.conf' (the order of the
+lines does not matter)
+
+     commandkey 1
+
+   The smallest useful configuration file would look something like
+
+     server 1.2.3.4 offline
+     server 5.6.7.8 offline
+     server 9.10.11.12 offline
+     keyfile /etc/chrony.keys
+     commandkey 1
+     driftfile /etc/chrony.drift
+
+   The next section describes how to tell `chronyd' when the internet
+link goes up and down.
+
+
+File: chrony.info,  Node: Advising chronyd of internet availability,  Prev: Configuration for infrequent connections,  Up: Infrequent connection
+
+3.2.2 How to tell chronyd when the internet link is available.
+--------------------------------------------------------------
+
+To use this option, you will need to configure a command key in
+`chronyd's' configuration file `/etc/chrony.conf', as described in the
+previous section.
+
+   To tell `chronyd' when to start and finish sampling the servers, the
+`online' and `offline' commands of chronyc need to be used.  To give an
+example of their use, we assume that `pppd' is the program being used
+to connect to the internet, and that chronyc has been installed at its
+default location `/usr/local/bin/chronyc'.  We also assume that the
+command key has been set up as described in the previous section.
+
+   In the file `/etc/ppp/ip-up' we add the command sequence
+
+     /usr/local/bin/chronyc <<EOF
+     password xyzzy
+     online
+     EOF
+
+   and in the file `/etc/ppp/ip-down' we add the sequence
+
+     /usr/local/bin/chronyc <<EOF
+     password xyzzy
+     offline
+     EOF
+
+   `chronyd's' polling of the servers will now only occur whilst the
+machine is actually connected to the Internet.
+
+
+File: chrony.info,  Node: Isolated networks,  Next: Dial-up home PCs,  Prev: Infrequent connection,  Up: Typical scenarios
+
+3.3 Isolated networks
+=====================
+
+In this section we discuss how to configure chrony for computers that
+never have network conectivity to any computer which ultimately derives
+its time from a reference clock.
+
+   In this situation, one computer is selected to be the master
+timeserver.  The other computers are either direct clients of the
+master, or clients of clients.
+
+   The rate value in the master's drift file needs to be set to the
+average rate at which the master gains or loses time.  `chronyd'
+includes support for this, in the form of the `manual' directive in the
+configuration file and the `settime' command in the `chronyc' program.
+
+   If the master is rebooted, `chronyd' can re-read the drift rate from
+the drift file.  However, the master has no accurate estimate of the
+current time.  To get around this, the system can be configured so that
+the master can initially set itself to a `majority-vote' of selected
+clients' times; this allows the clients to `flywheel' the master across
+its outage.
+
+   A typical configuration file for the master (called `master') might
+be (assuming the clients are in the 192.168.165.x subnet and that the
+master's address is 192.168.169.170)
+
+     driftfile /etc/chrony.drift
+     commandkey 25
+     keyfile /etc/chrony.keys
+     initstepslew 10 client1 client3 client6
+     local stratum 8
+     manual
+     allow 192.168.165
+
+   For the clients that have to resynchronise the master when it
+restarts, the configuration file might be
+
+     server master
+     driftfile /etc/chrony.drift
+     logdir /var/log/chrony
+     log measurements statistics tracking
+     keyfile /etc/chrony.keys
+     commandkey 24
+     local stratum 10
+     initstepslew 20 master
+     allow 192.168.169.170
+
+   The rest of the clients would be the same, except that the `local'
+and `allow' directives are not required.
+
+
+File: chrony.info,  Node: Dial-up home PCs,  Next: Configuration options overview,  Prev: Isolated networks,  Up: Typical scenarios
+
+3.4 The home PC with a dial-up connection
+=========================================
+
+* Menu:
+
+* Dial-up overview::            General discussion of how the software operates in this mode
+* Dial-up configuration::       Typical configuration files
+
+
+File: chrony.info,  Node: Dial-up overview,  Next: Dial-up configuration,  Up: Dial-up home PCs
+
+3.4.1 Assumptions/how the software works
+----------------------------------------
+
+This section considers the home computer which has a dial-up connection.
+It assumes that Linux is run exclusively on the computer.  Dual-boot
+systems may work; it depends what (if anything) the other system does to
+the system's real-time clock.
+
+   Much of the configuration for this case is discussed earlier (*note
+Infrequent connection::).  This section addresses specifically the case
+of a computer which is turned off between 'sessions'.
+
+   In this case, `chronyd' relies on the computer's real-time clock
+(RTC) to maintain the time between the periods when it is powered up.
+The arrangement is shown in the figure below.
+
+                 trim if required                          PSTN
+           +---------------------------+               +----------+
+           |                           |               |          |
+           v                           |               |          |
+     +---------+                    +-------+       +-----+     +---+
+     | System's|  measure error/    |chronyd|       |modem|     |ISP|
+     |real-time|------------------->|       |-------|     |     |   |
+     |  clock  |   drift rate       +-------+       +-----+     +---+
+     +---------+                       ^                          |
+           |                           |                          |
+           +---------------------------+                  --o-----o---
+              set time at boot up                           |
+                                                       +----------+
+                                                       |NTP server|
+                                                       +----------+
+
+   When the computer is connected to the Internet (via the modem),
+`chronyd' has access to external NTP servers which it makes
+measurements from.  These measurements are saved, and straight-line fits
+are performed on them to provide an estimate of the computer's time
+error and rate of gaining/losing time.
+
+   When the computer is taken offline from the Internet, the best
+estimate of the gain/loss rate is used to free-run the computer until
+it next goes online.
+
+   Whilst the computer is running, `chronyd' makes measurements of the
+real-time clock (RTC) (via the `/dev/rtc' interface, which must be
+compiled into the kernel).  An estimate is made of the RTC error at a
+particular RTC second, and the rate at which the RTC gains or loses time
+relative to true time.
+
+   The RTC is fully supported in 2.2, 2.4 and 2.6 kernels.
+
+   On 2.6 kernels, if your motherboard has a HPET, you need to enable
+the `HPET_EMULATE_RTC' option in your kernel configuration.  Otherwise,
+chrony will not be able to interact with the RTC device and will give
+up using it.
+
+   For kernels in the 2.0 series prior to 2.0.32, the kernel was set up
+to trim the RTC every 11 minutes.  This would be disasterous for
+`chronyd' - there is no reliable way of synchronising with this
+trimming. For this reason, `chronyd' only supports the RTC in 2.0
+kernels from v2.0.32 onwards.
+
+   When the computer is powered down, the measurement histories for all
+the NTP servers are saved to files (if the `dumponexit' directive is
+specified in the configuration file), and the RTC tracking information
+is also saved to a file (if the `rtcfile' directive has been
+specified).  These pieces of information are also saved if the `dump'
+and `writertc' commands respectively are issued through `chronyc'.
+
+   When the computer is rebooted, `chronyd' reads the current RTC time
+and the RTC information saved at the last shutdown.  This information is
+used to set the system clock to the best estimate of what its time would
+have been now, had it been left running continuously.  The measurement
+histories for the servers are then reloaded.
+
+   The next time the computer goes online, the previous sessions'
+measurements can contribute to the line-fitting process, which gives a
+much better estimate of the computer's gain/loss rate.
+
+   One problem with saving the measurements and RTC data when the
+machine is shut down is what happens if there is a power failure; the
+most recent data will not be saved.  Although `chronyd' is robust enough
+to cope with this, some performance may be lost.  (The main danger
+arises if the RTC has been changed during the session, with the
+`trimrtc' command in `chronyc'.  Because of this, `trimrtc' will make
+sure that a meaningful RTC file is saved out after the change is
+completed).
+
+   The easiest protection against power failure is to put the `dump'
+and `writertc' commands in the same place as the `offline' command is
+issued to take `chronyd' offline; because `chronyd' free-runs between
+online sessions, no parameters will change significantly between going
+offline from the Internet and any power failure.
+
+   A final point regards home computers which are left running for
+extended periods and where it is desired to spin down the hard disc
+when it is not in use (e.g. when not accessed for 15 minutes).
+`chronyd' has been planned so it supports such operation; this is the
+reason why the RTC tracking parameters are not saved to disc after
+every update, but only when the user requests such a write, or during
+the shutdown sequence.  The only other facility that will generate
+periodic writes to the disc is the `log rtc' facility in the
+configuration file; this option should not be used if you want your
+disc to spin down.
+
+
+File: chrony.info,  Node: Dial-up configuration,  Prev: Dial-up overview,  Up: Dial-up home PCs
+
+3.4.2 Typical configuration files.
+----------------------------------
+
+To illustrate how a dial-up home computer might be configured, example
+configuration files are shown in this section.
+
+   For the `/etc/chrony.conf' file, the following can be used as an
+example.  _NOTE : The `server' directives are only applicable to
+customers of Demon Internet; users of other ISPs will need to use their
+own ISP's NTP servers or public NTP servers._
+
+     server 158.152.1.65 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 158.152.1.76 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.159.253.2 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     logdir /var/log/chrony
+     log statistics measurements tracking
+     driftfile /etc/chrony.drift
+     keyfile /etc/chrony.keys
+     commandkey 25
+     maxupdateskew 100.0
+     dumponexit
+     dumpdir /var/log/chrony
+     rtcfile /etc/chrony.rtc
+
+   With Freeserve as the ISP, I use the following server lines :
+
+     server 194.152.64.68 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.152.64.35 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+     server 194.152.64.34 minpoll 5 maxpoll 10 maxdelay 0.4 offline
+
+   I use `pppd' for connecting to my ISP.  This runs two scripts
+`/etc/ppp/ip-up' and `/etc/ppp/ip-down' when the link goes online and
+offline respectively.
+
+   The relevant part of the `/etc/ppp/ip-up' file is (with a dummy
+password)
+
+     /usr/local/bin/chronyc <<EOF
+     password xxxxxxxx
+     online
+     EOF
+
+   and the relevant part of the `/etc/ppp/ip-down' script is
+
+     /usr/local/bin/chronyc <<EOF
+     password xxxxxxxx
+     offline
+     dump
+     writertc
+     EOF
+
+   (Because they have to contain the administrator password, it would be
+desirable to make the files readable only by root on a multiuser
+machine).
+
+   To start `chronyd' during the boot sequence, I have the following in
+`/etc/rc.d/rc.local' (this is a Slackware system)
+
+     if [ -f /usr/local/sbin/chronyd -a -f /etc/chrony.conf ]; then
+       /usr/local/sbin/chronyd -r -s
+       echo "Start chronyd"
+     fi
+
+   The placement of this command may be important on some systems.  In
+particular, `chronyd' may need to be started several seconds (about 10
+as a minimum) before any software that depends on the system clock not
+jumping or moving backwards, depending on the directives in `chronyd's'
+configuration file.
+
+   For the system shutdown, `chronyd' should receive a SIGTERM several
+seconds before the final SIGKILL; the SIGTERM causes the measurement
+histories and RTC information to be saved out.  There should be no need
+to add anything to the shutdown sequence, unless (as my system had)
+there is no pause between the SIGTERM and SIGKILL being delivered to the
+remaining processes.  So if you find something like
+
+     killall5 -15
+     killall5 -9
+
+   in your `/etc/rc.d/rc.0' script, you will need to insert a sleep,
+e.g.
+
+     killall5 -15
+     sleep 5
+     killall5 -9
+
+   Otherwise, `chronyd' will not always save information on shutdown,
+which could be a problem if you don't use `dump' and `writertc' when
+you go offline.
+
+
+File: chrony.info,  Node: Configuration options overview,  Prev: Dial-up home PCs,  Up: Typical scenarios
+
+3.5 Other important configuration options
+=========================================
+
+The most common option to include in the configuration file is the
+`driftfile' option.  One of the major tasks of `chronyd' is to work out
+how fast or how slow the system clock runs relative to real time - e.g.
+in terms of seconds gained or lost per day.  Measurements over a long
+period are usually required to refine this estimate to an acceptable
+degree of accuracy.  Therefore, it would be bad if `chronyd' had to
+work the value out each time it is restarted, because the system clock
+would not run so accurately whilst the determination is taking place.
+
+   To avoid this problem, `chronyd' allows the gain or loss rate to be
+stored in a file, which can be read back in when the program is
+restarted.  This file is called the drift file, and might typically be
+stored in `/etc/chrony.drift'.  By specifying an option like the
+following
+
+     driftfile /etc/chrony.drift
+
+   in the configuration file (`/etc/chrony.conf'), the drift file
+facility will be activated.
+
+
+File: chrony.info,  Node: Usage reference,  Next: Porting guide,  Prev: Typical scenarios,  Up: Top
+
+4 Usage reference
+*****************
+
+* Menu:
+
+* Starting chronyd::            Command line options for the daemon
+* Configuration file::          Format of the configuration file
+* Running chronyc::             The run-time configuration program
+
+
+File: chrony.info,  Node: Starting chronyd,  Next: Configuration file,  Up: Usage reference
+
+4.1 Starting chronyd
+====================
+
+If `chronyd' has been installed to its default location
+`/usr/local/sbin/chronyd', starting it is simply a matter of entering
+the command
+
+     /usr/local/sbin/chronyd
+
+   Information messages and warnings will be logged to syslog.
+
+   The command line options supported are as follows:
+
+`-d'
+     When run in this mode, the program will not detach itself from the
+     terminal, and all messages will be sent to the terminal instead of
+     to syslog.
+
+`-f <conf-file>'
+     This option can be used to specify an alternate location for the
+     configuration file (default `/etc/chrony.conf').
+
+`-r'
+     This option will reload sample histories for each of the servers
+     being used.  These histories are created by using the `dump'
+     command in `chronyc', or by setting the `dumponexit' directive in
+     the configuration file.  This option is useful if you want to stop
+     and restart `chronyd' briefly for any reason, e.g. to install a new
+     version.  However, it only makes sense on systems where the kernel
+     can maintain clock compensation whilst not under `chronyd's'
+     control.  The only version where this happens so far is Linux.  On
+     systems where this is not the case, e.g. Solaris and SunOS the
+     option should not be used.
+
+`-s'
+     This option will set the system clock from the computer's real-time
+     clock.  This is analogous to supplying the `-s' flag to the
+     `/sbin/clock' program during the Linux boot sequence.
+
+     Support for real-time clocks is limited at present - the criteria
+     are described in the section on the `rtcfile' directive (*note
+     rtcfile directive::).
+
+     If `chronyd' cannot support the real time clock on your computer,
+     this option cannot be used and a warning message will be logged to
+     the syslog.
+
+     If used in conjunction with the `-r' flag, `chronyd' will attempt
+     to preserve the old samples after setting the system clock from
+     the real time clock.  This can be used to allow `chronyd' to
+     perform long term averaging of the gain or loss rate across system
+     reboots, and is useful for dial-up systems that are shut down when
+     not in use.  For this to work well, it relies on `chronyd' having
+     been able to determine accurate statistics for the difference
+     between the real time clock and system clock last time the
+     computer was on.
+
+`-u <user>'
+     When this option is used, chronyd will drop root privileges to the
+     specified user.  So far, it works only on Linux when compiled with
+     capabilities support.
+
+`-v'
+     This option displays `chronyd's' version number to the terminal and
+     exits.
+
+`-P <priority>'
+     This option will select the SCHED_FIFO real-time scheduler at the
+     specified priority (which must be between 0 and 100).  This mode is
+     supported only on Linux.
+
+`-m'
+     This option will lock chronyd into RAM so that it will never be
+     paged out.  This mode is only supported on Linux.
+
+`-4'
+     With this option hostnames will be resolved only to IPv4 addresses.
+
+`-6'
+     With this option hostnames will be resolved only to IPv6 addresses.
+
+   On systems that support an `/etc/rc.local' file for starting
+programs at boot time, `chronyd' can be started from there.
+
+   On systems with a System V style initialisation (e.g. Solaris), a
+suitable start/stop script might be as shown below.  This might be
+placed in the file `/etc/rc2.d/S83chrony'.
+
+     #!/bin/sh
+     # This file should have uid root, gid sys and chmod 744
+     #
+
+     killproc() {            # kill the named process(es)
+             pid=`/usr/bin/ps -e |
+                  /usr/bin/grep -w $1 |
+                  /usr/bin/sed -e 's/^  *//' -e 's/ .*//'`
+             [ "$pid" != "" ] && kill $pid
+     }
+
+     case "$1" in
+
+     'start')
+        if [ -f /opt/free/sbin/chronyd -a -f /etc/chrony.conf ]; then
+          /opt/free/sbin/chronyd
+        fi
+        ;;
+     'stop')
+        killproc chronyd
+        ;;
+     *)
+        echo "Usage: /etc/rc2.d/S83chrony { start | stop }"
+        ;;
+     esac
+
+   (In both cases, you may want to bear in mind that `chronyd' can step
+the time when it starts.  There may be other programs started at boot
+time that could be upset by this, so you may need to consider the
+ordering carefully.  However, `chronyd' will need to start after
+daemons providing services that it may require, e.g. the domain name
+service.)
+
+
+File: chrony.info,  Node: Configuration file,  Next: Running chronyc,  Prev: Starting chronyd,  Up: Usage reference
+
+4.2 The chronyd configuration file
+==================================
+
+The configuration file is normally called `/etc/chrony.conf'; in fact,
+this is the compiled-in default. However, other locations can be
+specified with a command line option.
+
+   Each command in the configuration file is placed on a separate line.
+The following sections describe each of the commands in turn.  The
+directives can occur in any order in the file.
+
+* Menu:
+
+* comments in config file::     How to write a comment
+* acquisitionport directive::   Set port to use for initial time probes
+* allow directive::             Give access to NTP clients
+* bindaddress directive::       Limit the network interface that is used for NTP
+* bindcmdaddress directive::    Limit the network interface that is used for commands
+* broadcast directive::         Make chronyd act as an NTP broadcast server
+* cmdallow directive::          Give control access to chronyc on other computers
+* cmddeny directive::           Deny control access to chronyc on other computers
+* commandkey directive::        Set runtime command key
+* cmdport directive::           Set port to use for runtime commanding
+* deny directive::              Deny access to NTP clients
+* driftfile directive::         Specify location of file containing drift data
+* dumpdir directive::           Specify directory for dumping measurements
+* dumponexit directive::        Dump measurements when daemon exits
+* initstepslew directive::      Trim the system clock on boot-up.
+* keyfile directive::           Specify location of file containing keys
+* linux_hz directive::          Define a non-standard value of the kernel HZ constant
+* linux_freq_scale directive::  Define a non-standard value to compensate the kernel frequency bias
+* local directive::             Allow unsynchronised machine to act as server
+* log directive::               Make daemon log certain sets of information
+* logchange directive::         Generate syslog messages if large offsets occur
+* logdir directive::            Specify directory for logging
+* mailonchange directive::      Send email if a clock correction above a threshold occurs
+* makestep directive::          Step system clock if large correction is needed
+* manual directive::            Allow manual entry using chronyc's settime cmd.
+* maxupdateskew directive::     Stop bad estimates upsetting machine clock
+* noclientlog directive::       Prevent chronyd from gathering data about clients
+* clientloglimit directive::    Set client log memory limit
+* peer directive::              Specify an NTP peer
+* pidfile directive::           Specify the file where chronyd's pid is written
+* port directive::              Set port to use for NTP packets
+* refclock directive::          Specify a reference clock
+* rtcdevice directive::         Specify name of enhanced RTC device (if not /dev/rtc)
+* rtcfile directive::           Specify the file where real-time clock data is stored
+* rtconutc directive::          Specify that the real time clock keeps UTC not local time
+* server directive::            Specify an NTP server
+* sched_priority directive::    Require real-time scheduling and specify a priority for it.
+* lock_all directive::          Require that chronyd be locked into RAM.
+
+
+File: chrony.info,  Node: comments in config file,  Next: acquisitionport directive,  Up: Configuration file
+
+4.2.1 Comments in the configuration file
+----------------------------------------
+
+The configuration file may contain comment lines.  A comment line is
+any line that starts with zero or more spaces followed by any one of
+the following characters:
+   * !
+
+   * ;
+
+   * #
+
+   * %
+   Any line with this format will be ignored.
+
+
+File: chrony.info,  Node: acquisitionport directive,  Next: allow directive,  Prev: comments in config file,  Up: Configuration file
+
+4.2.2 acquisitionport
+---------------------
+
+`chronyd' uses a separate client-side port for the rapid-fire
+measurements requested with the `initstepslew' directive (*note
+initstepslew directive::).  Normally, that port is chosen arbitrarily
+by the operating system.  However, you can use `acquisitionport' to
+explicitly specify a port.  This may be useful for getting through
+firewalls.
+
+   Do not make acquisition and regular NTP service (*note port
+directive::) use the same port.
+
+   An example of the `acquisitionport' command is
+
+     acquisitionport 1123
+
+   This would change the port used for rapid queries to udp/1123.  You
+could then persuade the firewall administrator to let that port through.
+
+
+File: chrony.info,  Node: allow directive,  Next: bindaddress directive,  Prev: acquisitionport directive,  Up: Configuration file
+
+4.2.3 allow
+-----------
+
+The `allow' command is used to designate a particular subnet from which
+NTP clients are allowed to access the computer as an NTP server.
+
+   The default is that no clients are allowed access, i.e. `chronyd'
+operates purely as an NTP client.  If the `allow' directive is used,
+`chronyd' will be both a client of its servers, and a server to other
+clients.
+
+   Examples of use of the command are as follows:
+
+     allow foo.bar.com
+     allow 1.2
+     allow 3.4.5
+     allow 6.7.8/22
+     allow 6.7.8.9/22
+     allow 2001:db8::/32
+     allow 0/0
+     allow ::/0
+     allow
+
+   The first command allows the named node to be an NTP client of this
+computer.  The second command allows any node with an IPv4 address of
+the form 1.2.x.y (with x and y arbitrary) to be an NTP client of this
+computer.  Likewise, the third command allows any node with an IPv4
+address of the form 3.4.5.x to have client NTP access.  The fourth and
+fifth forms allow access from any node with an IPv4 address of the form
+6.7.8.x, 6.7.9.x, 6.7.10.x or 6.7.11.x (with x arbitrary), i.e. the
+value 22 is the number of bits defining the specified subnet.  (In the
+fifth form, the final byte is ignored).  The sixth form is used for IPv6
+addresses.  The seventh and eighth forms allow access by any IPv4 and
+IPv6 node respectively.  The ninth forms allows access by any node
+(IPv4 or IPv6).
+
+   A second form of the directive, `allow all', has a greater effect,
+depending on the ordering of directives in the configuration file.  To
+illustrate the effect, consider the two examples
+
+     allow 1.2.3.4
+     deny 1.2.3
+     allow 1.2
+
+   and
+
+     allow 1.2.3.4
+     deny 1.2.3
+     allow all 1.2
+
+   In the first example, the effect is the same regardles of what order
+the three directives are given in.  So the 1.2.x.y subnet is allowed
+access, except for the 1.2.3.x subnet, which is denied access, however
+the host 1.2.3.4 is allowed access.
+
+   In the second example, the `allow all 1.2' directives overrides the
+effect of _any_ previous directive relating to a subnet within the
+specified subnet.  Within a configuration file this capability is
+probably rather moot; however, it is of greater use for reconfiguration
+at run-time via `chronyc' (*note allow all command::).
+
+   Note, if the `initstepslew' directive (*note initstepslew
+directive::) is used in the configuration file, each of the computers
+listed in that directive must allow client access by this computer for
+it to work.
+
+
+File: chrony.info,  Node: bindaddress directive,  Next: bindcmdaddress directive,  Prev: allow directive,  Up: Configuration file
+
+4.2.4 bindaddress
+-----------------
+
+The bindaddress allows you to restrict the network interface to which
+chronyd will listen for NTP packets.  This provides an additional level
+of access restriction above that available through the 'deny' mechanism.
+
+   Suppose you have a local ethernet with addresses in the 192.168.1.0
+subnet together with a dial-up connection.  The ethernet interface's IP
+address is 192.168.1.1.  Suppose (for some reason) you want to block all
+access through the dialup connection (note, this will even block replies
+from servers on the dialup side, so you will not be able to synchronise
+to an external source).  You could add the line
+
+     bindaddress 192.168.1.1
+
+   to the configuration file.
+
+   This directive affects NTP (UDP port 123) packets.  If no
+`bindcmdaddress' directive is present, the address supplied by
+`bindaddress' will be used to control binding of the command socket
+(UDP port 323) as well.
+
+   The `bindaddress' directive has been found to cause problems when
+used on computers that need to pass NTP traffic over multiple network
+interfaces (e.g.  firewalls).  It is, therefore, not particularly
+useful.  Use of the `allow' and `deny' directives together with a
+network firewall is more likely to be successful.
+
+   For each of IPv4 and IPv6 protocols, only one `bindaddress'
+directive can be specified.
+
+
+File: chrony.info,  Node: bindcmdaddress directive,  Next: broadcast directive,  Prev: bindaddress directive,  Up: Configuration file
+
+4.2.5 bindcmdaddress
+--------------------
+
+The bindcmdaddress allows you to restrict the network interface to which
+chronyd will listen for command packets (issued by chronyc).
+
+   Suppose you have a local ethernet with addresses in the 192.168.1.0
+subnet together with a dial-up connection.  The ethernet interface's IP
+address is 192.168.1.1.  Suppose you want to block all access through
+the dialup connection.  You could add the line
+
+     bindcmdaddress 192.168.1.1
+
+   to the configuration file.
+
+   The `bindcmdaddress' directive has been found to cause problems when
+used on computers that need to pass command traffic over multiple
+network interfaces.  It is, therefore, not particularly useful.  Use of
+the `cmdallow' and `cmddeny' directives together with a network firewall
+is more likely to be successful.
+
+   For each of IPv4 and IPv6 protocols, only one `bindcmdaddress'
+directive can be specified.
+
+
+File: chrony.info,  Node: broadcast directive,  Next: cmdallow directive,  Prev: bindcmdaddress directive,  Up: Configuration file
+
+4.2.6 broadcast
+---------------
+
+The `broadcast' directive is used to declare a broadcast address to
+which chronyd should send packets in NTP broadcast mode (i.e. make
+chronyd act as a broadcast server).  Broadcast clients on that subnet
+will be able to synchronise.
+
+   The syntax is as follows
+
+     broadcast 30 192.168.1.255
+     broadcast 60 192.168.2.255 12123
+     broadcast 60 ff02::101
+
+   In the first example, the destination port defaults to 123/udp (the
+normal NTP port).  In the second example, the destionation port is
+specified as 12123.  The first parameter in each case (30 or 60
+respectively) is the interval in seconds between broadcast packets
+being sent.  The second parameter in each case is the broadcast address
+to send the packet to.  This should correspond to the broadcast address
+of one of the network interfaces on the computer where chronyd is
+running.
+
+   You can have more than 1 `broadcast' directive if you have more than
+1 network interface onto which you wish to send NTP broadcast packets.
+
+   Chronyd itself cannot currently act as a broadcast client; it must
+always be configured as a point-to-point client by defining specific
+NTP servers and peers.  This broadcast server feature is intended for
+providing a time source to other NTP software (e.g. various MS Windows
+clients).
+
+   If xntpd is used as the broadcast client, it will try to use a
+point-to-point client/server NTP access to measure the round-trip
+delay.  Thus, the broadcast subnet should also be the subject of an
+`allow' directive (*note allow directive::).
+
+
+File: chrony.info,  Node: cmdallow directive,  Next: cmddeny directive,  Prev: broadcast directive,  Up: Configuration file
+
+4.2.7 cmdallow
+--------------
+
+This is similar to the `allow' directive (*note allow directive::),
+except that it allows control access (rather than NTP client access) to
+a particular subnet or host.  (By 'control access' is meant that
+chronyc can be run on those hosts and successfully connect to chronyd
+on this computer.)
+
+   The syntax is identical to the `allow' directive.
+
+   There is also a `cmdallow all' directive with similar behaviour to
+the `allow all' directive (but applying to control access in this case,
+of course).
+
+
+File: chrony.info,  Node: cmddeny directive,  Next: commandkey directive,  Prev: cmdallow directive,  Up: Configuration file
+
+4.2.8 cmddeny
+-------------
+
+This is similar to the `cmdallow' directive (*note cmdallow
+directive::), except that it denies control access to a particular
+subnet or host, rather than allowing it.
+
+   The syntax is identical.
+
+   There is also a `cmddeny all' directive with similar behaviour to the
+`cmdallow all' directive.
+
+
+File: chrony.info,  Node: commandkey directive,  Next: cmdport directive,  Prev: cmddeny directive,  Up: Configuration file
+
+4.2.9 commandkey
+----------------
+
+The commandkey command is used to set the key number used for
+authenticating user commands via the chronyc program at run time.  This
+allows certain actions of the chronyc program to be restricted to
+administrators.
+
+   An example of the commandkey command is
+
+     commandkey 20
+
+   In the key file (see the keyfile command) there should be a line of
+the form
+
+     20 foobar
+
+   When running the chronyc program to perform run-time configuration,
+the command
+
+     password foobar
+
+   must be entered before any commands affecting the operation of the
+daemon can be entered.
+
+
+File: chrony.info,  Node: cmdport directive,  Next: deny directive,  Prev: commandkey directive,  Up: Configuration file
+
+4.2.10 cmdport
+--------------
+
+The `cmdport' directive allows the port that is used for run-time
+command and monitoring (via the program `chronyc') to be altered from
+its default (323/udp).
+
+   An example shows the syntax
+
+     cmdport 257
+
+   This would make `chronyd' use 257/udp as its command port.
+(`chronyc' would need to be run with the `-p 257' switch to
+inter-operate correctly).
+
+
+File: chrony.info,  Node: deny directive,  Next: driftfile directive,  Prev: cmdport directive,  Up: Configuration file
+
+4.2.11 deny
+-----------
+
+This is similar to the `allow' directive (*note allow directive::),
+except that it denies NTP client access to a particular subnet or host,
+rather than allowing it.
+
+   The syntax is identical.
+
+   There is also a `deny all' directive with similar behaviour to the
+`allow all' directive.
+
+
+File: chrony.info,  Node: driftfile directive,  Next: dumpdir directive,  Prev: deny directive,  Up: Configuration file
+
+4.2.12 driftfile
+----------------
+
+One of the main activities of the `chronyd' program is to work out the
+rate at which the system clock gains or loses time relative to real
+time.
+
+   Whenever `chronyd' computes a new value of the gain/loss rate, it is
+desirable to record it somewhere.  This allows `chronyd' to begin
+compensating the system clock at that rate whenever it is restarted,
+even before it has had a chance to obtain an equally good estimate of
+the rate during the new run.  (This process may take many minutes, at
+least).
+
+   The driftfile command allows a file to be specified into which
+`chronyd' can store the rate information.  Two parameters are recorded
+in the file.  The first is the rate at which the system clock gains or
+loses time, expressed in parts per million, with gains positive.
+Therefore, a value of 100.0 indicates that when the system clock has
+advanced by a second, it has gained 100 microseconds on reality (so the
+true time has only advanced by 999900 microseconds).  The second is an
+estimate of the error bound around the first value in which the true
+rate actually lies.
+
+   An example of the driftfile command is
+
+     driftfile /etc/chrony.drift
+
+
+File: chrony.info,  Node: dumpdir directive,  Next: dumponexit directive,  Prev: driftfile directive,  Up: Configuration file
+
+4.2.13 dumpdir
+--------------
+
+To compute the rate of gain or loss of time, `chronyd' has to store a
+measurement history for each of the time sources it uses.
+
+   Certain systems (so far only Linux) have operating system support for
+setting the rate of gain or loss to compensate for known errors.  (On
+other systems, `chronyd' must simulate such a capability by
+periodically slewing the system clock forwards or backwards by a
+suitable amount to compensate for the error built up since the previous
+slew).
+
+   For such systems, it is possible to save the measurement history
+across restarts of `chronyd' (assuming no changes are made to the system
+clock behaviour whilst it is not running).  If this capability is to be
+used (via the dumponexit command in the configuration file, or the dump
+command in chronyc), the dumpdir command should be used to define the
+directory where the measurement histories are saved.
+
+   An example of the command is
+
+     dumpdir /var/log/chrony
+
+   A source whose reference id (the IP address for IPv4 sources) is
+1.2.3.4 would have its measurement history saved in the file
+`/var/log/chrony/1.2.3.4.dat'.
+
+
+File: chrony.info,  Node: dumponexit directive,  Next: initstepslew directive,  Prev: dumpdir directive,  Up: Configuration file
+
+4.2.14 dumponexit
+-----------------
+
+If this command is present, it indicates that `chronyd' should save the
+measurement history for each of its time sources recorded whenever the
+program exits.  (See the dumpdir command above).
+
+
+File: chrony.info,  Node: initstepslew directive,  Next: keyfile directive,  Prev: dumponexit directive,  Up: Configuration file
+
+4.2.15 initstepslew
+-------------------
+
+In normal operation, `chronyd' always slews the time when it needs to
+adjust the system clock.  For example, to correct a system clock which
+is 1 second slow, `chronyd' slightly increases the amount by which the
+system clock is advanced on each clock interrupt, until the error is
+removed.  (Actually, this is done by calling the `adjtime()' or similar
+system function which does it for us.)  Note that at no time does time
+run backwards with this method.
+
+   On most Unix systems it is not desirable to step the system clock,
+because many programs rely on time advancing monotonically forwards.
+
+   When the `chronyd' daemon is initially started, it is possible that
+the system clock is considerably in error.  Attempting to correct such
+an error by slewing may not be sensible, since it may take several hours
+to correct the error by this means.
+
+   The purpose of the `initstepslew' directive is to allow `chronyd' to
+make a rapid measurement of the system clock error at boot time, and to
+correct the system clock by stepping before normal operation begins.
+Since this would normally be performed only at an appropriate point in
+the system boot sequence, no other software should be adversely affected
+by the step.
+
+   If the correction required is less than a specified threshold, a
+slew is used instead.  This makes it easier to restart `chronyd' whilst
+the system is in normal operation.
+
+   The `initstepslew' directive takes a threshold and a list of NTP
+servers as arguments.  A maximum of 8 will be used.  Each of the servers
+is rapidly polled several times, and a majority voting mechanism used to
+find the most likely range of system clock error that is present.  A
+step (or slew) is applied to the system clock to correct this error.
+`chronyd' then enters its normal operating mode (where only slews are
+used).
+
+   An example of use of the command is
+
+     initstepslew 30 foo.bar.com baz.quz.com
+
+   where 2 NTP servers are used to make the measurement.  The `30'
+indicates that if the system's error is found to be 30 seconds or less,
+a slew will be used to correct it; if the error is above 30 seconds, a
+step will be used.
+
+   The `initstepslew' directive can also be used in an isolated LAN
+environment, where the clocks are set manually.  The most stable
+computer is chosen as the master, and the other computers are slaved to
+it.  If each of the slaves is configured with the local option (see
+below), the master can be set up with an `initstepslew' directive which
+references some or all of the slaves.  Then, if the master machine has
+to be rebooted, the slaves can be relied on to 'flywheel' the time for
+the master.
+
+
+File: chrony.info,  Node: keyfile directive,  Next: linux_hz directive,  Prev: initstepslew directive,  Up: Configuration file
+
+4.2.16 keyfile
+--------------
+
+This command is used to specify the location of the file containing
+ID/key pairs for the following 2 uses:
+
+   * Authentication of NTP packets.
+
+   * Authentication of administrator commands entered via chronyc.
+
+   The format of the command is shown in the example below
+
+     keyfile /etc/chrony.keys
+
+   The argument is simply the name of the file containing the ID/key
+pairs.  The format of the file is shown below
+
+     10 tulip
+     11 hyacinth
+     20 crocus
+     25 iris
+      ...
+
+   Each line consists of an ID and a password.  The ID can be any
+unsigned integer in the range 0 through 2**32-1.  The password can be
+any string of characters not containing a space.
+
+   For NTP use, the MD5 authentication scheme is always used.  This
+must be borne in mind if `chronyd' is to inter-operate in authenticated
+mode with `xntpd' running on other computers.
+
+   The ID for the chronyc authentication key is specified with the
+commandkey command (see earlier).
+
+
+File: chrony.info,  Node: local directive,  Next: log directive,  Prev: linux_freq_scale directive,  Up: Configuration file
+
+4.2.17 local
+------------
+
+The local keyword is used to allow `chronyd' to appear synchronised to
+real time (from the viewpoint of clients polling it), even if it has no
+current synchronisation source.
+
+   This option is normally used on computers in an isolated network,
+where several computers are required to synchronise to one other, this
+being the "master" which is kept vaguely in line with real time by
+manual input.
+
+   An example of the command is
+
+     local stratum 10
+
+   The value 10 may be substituted with other values in the range 1
+through 15.  Stratum 1 indicates a computer that has a true real-time
+reference directly connected to it (e.g. GPS, atomic clock etc) &ndash;
+such computers are expected to be very close to real time.  Stratum 2
+computers are those which have a stratum 1 server; stratum 3 computers
+have a stratum 2 server and so on.
+
+   A large value of 10 indicates that the clock is so many hops away
+from a reference clock that its time is fairly unreliable.  Put another
+way, if the computer ever has access to another computer which is
+ultimately synchronised to a reference clock, it will almost certainly
+be at a stratum less than 10.  Therefore, the choice of a high value
+like 10 for the local command prevents the machine's own time from ever
+being confused with real time, were it ever to leak out to clients that
+have visibility of real servers.
+
+
+File: chrony.info,  Node: linux_hz directive,  Next: linux_freq_scale directive,  Prev: keyfile directive,  Up: Configuration file
+
+4.2.18 linux_hz
+---------------
+
+(This option only applies to Linux).
+
+   By default, chronyd will find the value of `HZ' from a kernel header
+file at compile time.  `HZ' is the nominal number of timer interrupts
+per second.  If you're running chronyd on the system where it was
+built, the value it has should be right, and you don't need to worry
+about this option.
+
+   This option is provided for people who move a pre-built chronyd onto
+a system where the value of HZ in the kernel headers has been changed
+from the default value.
+
+   An example of the command is
+
+     linux_hz 100
+
+
+File: chrony.info,  Node: linux_freq_scale directive,  Next: local directive,  Prev: linux_hz directive,  Up: Configuration file
+
+4.2.19 linux_freq_scale
+-----------------------
+
+(This option only applies to Linux).
+
+   By default, chronyd will find the value of `HZ' and `SHIFT_HZ' from
+kernel header files at compile time.  An internal value called
+`freq_scale' is calculated from this.  By default it is
+(1<<SHIFT_HZ)/HZ, except for the case HZ=100, when special case code is
+used which leads to the value 128/128.125.  If you're running chronyd
+on the system where it was built, the value it has should be right, and
+you don't need to worry about this option.
+
+   This option is provided for people who move a pre-built chronyd onto
+a system where the method by which the kernel computes the reciprocal
+of this value has been changed or where the HZ and SHIFT_HZ constants
+differ from those on the system where chronyd was built.
+
+   An example of the command is
+
+     linux_freq_scale 0.99902439
+
+
+File: chrony.info,  Node: log directive,  Next: logchange directive,  Prev: local directive,  Up: Configuration file
+
+4.2.20 log
+----------
+
+The log command indicates that certain information is to be logged.
+
+`measurements'
+     This option logs the raw NTP measurements and related information
+     to a file called measurements.log.
+
+`statistics'
+     This option logs information about the regression processing to a
+     file called statistics.log.
+
+`tracking'
+     This option logs changes to the estimate of the system's gain or
+     loss rate, and any slews made, to a file called tracking.log.
+
+`rtc'
+     This option logs information about the system's real-time clock.
+
+`refclocks'
+     This option logs the raw reference clock measurements to a file
+     called refclocks.log.
+
+   The files are written to the directory specified by the logdir
+command.
+
+   An example of the command is
+
+     log measurements statistics tracking
+
+* Menu:
+
+* measurements log::            The format of the measurements log
+* statistics log::              The format of the statistics log
+* tracking log::                The format of the tracking log
+* RTC log::                     The format of the RTC log
+* refclocks log::               The format of the refclocks log
+
+
+File: chrony.info,  Node: measurements log,  Next: statistics log,  Up: log directive
+
+4.2.20.1 Measurements log file format
+.....................................
+
+An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+     1998-07-22 05:40:50 158.152.1.76    N  8 1111 11 1111 10 10  1 \
+        -4.966e-03  2.296e-01  1.577e-05  1.615e-01  7.446e-03
+
+   The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+  1. Date [1998-07-22]
+
+  2. Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+     expressed in UTC, not the local time zone.
+
+  3. IP address of server/peer from which measurement comes
+     [158.152.1.76]
+
+  4. Leap status (`N' means normal, `+' means that the last minute of
+     today has 61 seconds, `-' means that the last minute of the day
+     has 59 seconds, `?' means the remote computer is not currently
+     synchronised.) [N]
+
+  5. Stratum of remote computer. [2]
+
+  6. RFC1305 tests 1 through 4 (1=pass, 0=fail) [1111]
+
+  7. Tests for maximum delay and maximum delay ratio, against user
+     defined parameters (1=pass, 0=fail) [11]
+
+  8. RFC1305 tests 5 through 8 (1=pass, 0=fail) [1111]
+
+  9. Local poll [10]
+
+ 10. Remote poll [10]
+
+ 11. `Score' (an internal score within each polling level used to
+     decide when to increase or decrease the polling level.  This is
+     adjusted based on changes to the variance of the measurements
+     obtained from the source). [1]
+
+ 12. The estimated local clock error (`theta' in RFC1305).  Positive
+     indicates that the local clock is slow. [-4.966e-03].
+
+ 13. The peer delay (`delta' in RFC1305). [2.296e-01]
+
+ 14. The peer dispersion (`epsilon' in RFC1305). [1.577e-05]
+
+ 15. The root delay (`Delta' in RFC1305). [1.615e-01]
+
+ 16. The root dispersion (`E' in RFC1305). [7.446e-03]
+
+   A banner is periodically written to the log file to indicate the
+meanings of the columns.
+
+
+File: chrony.info,  Node: statistics log,  Next: tracking log,  Prev: measurements log,  Up: log directive
+
+4.2.20.2 Statistics log file format
+...................................
+
+An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+     1998-07-22 05:40:50 158.152.1.76     6.261e-03 -3.247e-03 \
+          2.220e-03  1.874e-06  1.080e-06 7.8e-02  16   0   8
+
+   The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+  1. Date [1998-07-22]
+
+  2. Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+     expressed in UTC, not the local time zone.
+
+  3. IP address of server/peer from which measurement comes
+     [158.152.1.76]
+
+  4. The estimated standard deviation of the measurements from the
+     source (in seconds). [6.261e-03]
+
+  5. The estimated offset of the source (in seconds, positive means the
+     local clock is estimated to be fast, in this case). [-3.247e-03]
+
+  6. The estimated standard deviation of the offset estimate (in
+     seconds). [2.220e-03]
+
+  7. The estimated rate at which the local clock is gaining or losing
+     time relative to the source (in seconds per second, positive means
+     the local clock is gaining).  This is relative to the compensation
+     currently being applied to the local clock, _not_ to the local
+     clock without any compensation. [1.874e-06]
+
+  8. The estimated error in the rate value (in seconds per second).
+     [1.080e-06].
+
+  9. The ration of |old_rate - new_rate| / old_rate_error.  Large values
+     indicate the statistics are not modelling the source very well.
+     [7.8e-02]
+
+ 10. The number of measurements currently being used for the regression
+     algorithm. [16]
+
+ 11. The new starting index (the oldest sample has index 0; this is the
+     method used to prune old samples when it no longer looks like the
+     measurements fit a linear model). [0, i.e. no samples discarded
+     this time]
+
+ 12. The number of runs.  The number of runs of regression residuals
+     with the same sign is computed.  If this is too small it indicates
+     that the measurements are no longer represented well by a linear
+     model and that some older samples need to be discarded.  The
+     number of runs for the data that is being retained is tabulated.
+     Values of approximately half the number of samples are expected.
+     [8]
+
+   A banner is periodically written to the log file to indicate the
+meanings of the columns.
+
+
+File: chrony.info,  Node: tracking log,  Next: RTC log,  Prev: statistics log,  Up: log directive
+
+4.2.20.3 Tracking log file format
+.................................
+
+An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+     1998-07-22 05:40:50 158.152.1.76     3    340.529      1.606  1.046e-03
+
+   The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+  1. Date [1998-07-22]
+
+  2. Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+     expressed in UTC, not the local time zone.
+
+  3. The IP address of the server/peer to which the local system is
+     synchronised. [158.152.1.76]
+
+  4. The stratum of the local system. [3]
+
+  5. The local system frequency (in ppm, positive means the local
+     system runs fast of UTC). [340.529]
+
+  6. The error bounds on the frequency (in ppm) [1.606]
+
+  7. The estimated local offset at the epoch (which is rapidly
+     corrected by slewing the local clock.  (In seconds, positive
+     indicates the local system is fast of UTC). [1.046e-3]
+
+   A banner is periodically written to the log file to indicate the
+meanings of the columns.
+
+
+File: chrony.info,  Node: RTC log,  Next: refclocks log,  Prev: tracking log,  Up: log directive
+
+4.2.20.4 Real-time clock log file format
+........................................
+
+An example line (which actually appears as a single line in the file)
+from the measurements log file is shown below.
+
+     1998-07-22 05:40:50     -0.037360 1       -0.037434\
+               -37.948  12   5  120
+
+   The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+  1. Date [1998-07-22]
+
+  2. Hour:Minute:Second [05:40:50].  Note that the date/time pair is
+     expressed in UTC, not the local time zone.
+
+  3. The measured offset between the system's real time clock and the
+     system (`gettimeofday()') time.  In seconds, positive indicates
+     that the RTC is fast of the system time. [-0.037360].
+
+  4. Flag indicating whether the regression has produced valid
+     coefficients. (1 for yes, 0 for no). [1]
+
+  5. Offset at the current time predicted by the regression process.  A
+     large difference between this value and the measured offset tends
+     to indicate that the measurement is an outlier with a serious
+     measurement error. [-0.037434].
+
+  6. The rate at which the RTC is losing or gaining time relative to the
+     system clock.  In ppm, with positive indicating that the RTC is
+     gaining time. [-37.948]
+
+  7. The number of measurements used in the regression. [12]
+
+  8. The number of runs of regression residuals of the same sign.  Low
+     values indicate that a straight line is no longer a good model of
+     the measured data and that older measurements should be discarded.
+     [5]
+
+  9. The measurement interval used prior to the measurement being made
+     (in seconds). [120]
+
+   A banner is periodically written to the log file to indicate the
+meanings of the columns.
+
+
+File: chrony.info,  Node: refclocks log,  Prev: RTC log,  Up: log directive
+
+4.2.20.5 Refclocks log file format
+..................................
+
+An example line (which actually appears as a single line in the file)
+from the refclocks log file is shown below.
+
+     2009-11-30 14:33:27.000000 PPS2    7 N 1  4.900000e-07 -6.741777e-07
+
+   The columns are as follows (the quantities in square brackets are the
+values from the example line above) :
+
+  1. Date [2009-11-30]
+
+  2. Hour:Minute:Second.Microsecond [14:33:27.000000].  Note that the
+     date/time pair is expressed in UTC, not the local time zone.
+
+  3. Reference ID of refclock from which measurement comes. [PPS2]
+
+  4. Sequence number of driver poll within one polling interval. [7]
+
+  5. Leap status (`N' means normal, `+' means that the last minute of
+     today has 61 seconds, `-' means that the last minute of the day
+     has 59 seconds). [N]
+
+  6. Flag indicating whether the sample comes from PPS source. (1 for
+     yes, 0 for no). [1]
+
+  7. Local clock error measured by refclock driver. [4.900000e-07]
+
+  8. Local clock error with applied corrections.  Positive indicates
+     that the local clock is slow. [-6.741777e-07]
+
+   A banner is periodically written to the log file to indicate the
+meanings of the columns.
+
+
+File: chrony.info,  Node: logchange directive,  Next: logdir directive,  Prev: log directive,  Up: Configuration file
+
+4.2.21 logchange
+----------------
+
+This directive forces `chronyd' to send a message to syslog if it makes
+a system clock adjustment larger than a threshold value.  An example of
+use is
+
+     logchange 0.5
+
+   which would cause a syslog message to be generated a system clock
+error of over 0.5 seconds starts to be compensated.
+
+   Clock errors detected either via NTP packets or via timestamps
+entered via the `settime' command of `chronyc' are logged.
+
+   This directive assumes that syslog messages are appearing where
+somebody can see them.  This allows that person to see if a large error
+has arisen, e.g. because of a fault, or because of faulty timezone
+handling, for example when summer time (daylight saving) starts or ends.
+
+
+File: chrony.info,  Node: logdir directive,  Next: mailonchange directive,  Prev: logchange directive,  Up: Configuration file
+
+4.2.22 logdir
+-------------
+
+This directive allows the directory where log files are written to be
+specified.
+
+   An example of the use of this directive is
+
+     logdir /var/log/chrony
+
+
+File: chrony.info,  Node: mailonchange directive,  Next: makestep directive,  Prev: logdir directive,  Up: Configuration file
+
+4.2.23 mailonchange
+-------------------
+
+This directive defines an email address to which mail should be sent if
+chronyd applies a correction exceeding a particular threshold to the
+system clock.
+
+   An example of use of this directive is
+
+     mailonchange root@localhost 0.5
+
+   This would send a mail message to root if a change of more than 0.5
+seconds were applied to the system clock.
+
+
+File: chrony.info,  Node: makestep directive,  Next: manual directive,  Prev: mailonchange directive,  Up: Configuration file
+
+4.2.24 makestep
+---------------
+
+Normally chronyd will cause the system to gradually correct any time
+offset, by slowing down or speeding up the clock as required.  In
+certain situations, the system clock may be so far adrift that this
+slewing process would take a very long time to correct the system clock.
+
+   This directive forces `chronyd' to step system clock if the
+adjustment is larger than a threshold value, but only if there were no
+more clock updates since `chronyd' was started than a specified limit
+(a negative value can be used to disable the limit).
+
+   This is particularly useful when using reference clocks, because the
+`initstepslew' directive (*note initstepslew directive::) works only
+with NTP sources.
+
+   An example of the use of this directive is
+
+     makestep 1000 10
+
+   This would step system clock if the adjustment is larger than 1000
+seconds, but only in the first ten clock updates.
+
+
+File: chrony.info,  Node: manual directive,  Next: maxupdateskew directive,  Prev: makestep directive,  Up: Configuration file
+
+4.2.25 manual
+-------------
+
+The `manual' directive enables support at run-time for the `settime'
+command in chronyc (*note settime command::).  If no `manual' directive
+is included, any attempt to use the `settime' command in chronyc will
+be met with an error message.
+
+   Note that the `settime' command can be enabled at run-time using the
+`manual' command in chronyc (*note manual command::).  (The idea of the
+two commands is that the `manual' command controls the manual clock
+driver's behaviour, whereas the `settime' command allows samples of
+manually entered time to be provided).
+
+
+File: chrony.info,  Node: maxupdateskew directive,  Next: noclientlog directive,  Prev: manual directive,  Up: Configuration file
+
+4.2.26 maxupdateskew
+--------------------
+
+One of `chronyd's' tasks is to work out how fast or slow the computer's
+clock runs relative to its reference sources.  In addition, it computes
+an estimate of the error bounds around the estimated value.
+
+   If the range of error is too large, it probably indicates that the
+measurements have not settled down yet, and that the estimated gain or
+loss rate is not very reliable.
+
+   The `maxupdateskew' parameter allows the threshold for determining
+whether an estimate may be so unreliable that it should not be used.
+
+   The syntax is
+
+     maxupdateskew <skew-in-ppm>
+
+   Typical values for <skew-in-ppm> might be 100 for a dial-up
+connection to servers over a phone line, and 5 or 10 for a computer on
+a LAN.
+
+   It should be noted that this is not the only means of protection
+against using unreliable estimates.  At all times, `chronyd' keeps
+track of both the estimated gain or loss rate, and the error bound on
+the estimate.  When a new estimate is generated following another
+measurement from one of the sources, a weighted combination algorithm is
+used to update the master estimate.  So if `chronyd' has an existing
+highly-reliable master estimate and a new estimate is generated which
+has large error bounds, the existing master estimate will dominate in
+the new master estimate.
+
+
+File: chrony.info,  Node: noclientlog directive,  Next: clientloglimit directive,  Prev: maxupdateskew directive,  Up: Configuration file
+
+4.2.27 noclientlog
+------------------
+
+This directive, which takes no arguments, specifies that client accesses
+are not to be logged.  Normally they are logged, allowing statistics to
+be reported using the `clients' command in `chronyc'.
+
+
+File: chrony.info,  Node: clientloglimit directive,  Next: peer directive,  Prev: noclientlog directive,  Up: Configuration file
+
+4.2.28 clientloglimit
+---------------------
+
+This directive specifies the maximum size of the memory allocated to
+log client accesses.  When the limit is reached, only information for
+clients that have already been logged will be updated.  If 0 is
+specified, the memory size will be unlimited.  The default is 524288
+bytes.
+
+   An example of the use of this directive is
+
+     clientloglimit 1048576
+
+
+File: chrony.info,  Node: peer directive,  Next: pidfile directive,  Prev: clientloglimit directive,  Up: Configuration file
+
+4.2.29 peer
+-----------
+
+The syntax of this directive is identical to that for the `server'
+directive (*note server directive::), except that it is used to specify
+an NTP peer rather than an NTP server.
+
+
+File: chrony.info,  Node: pidfile directive,  Next: port directive,  Prev: peer directive,  Up: Configuration file
+
+4.2.30 pidfile
+--------------
+
+chronyd always writes its process ID (pid) to a file, and checks this
+file on startup to see if another chronyd may already be running on the
+system.  By default, the file used is `/var/run/chronyd.pid'.  The
+`pidfile' directive allows the name to be changed, e.g.
+
+     pidfile /var/tmp/chronyd.pid
+
+
+File: chrony.info,  Node: port directive,  Next: refclock directive,  Prev: pidfile directive,  Up: Configuration file
+
+4.2.31 port
+-----------
+
+This option allows you to configure the port used for the NTP service
+on your machine.
+
+   The compiled in default is udp/123, the standard NTP port.  It is
+unlikely that you would ever need to change this value.  A possible
+exception would be if you wanted to operate strictly in client-only
+mode and never be available as a server to xntpd clients.
+
+   An example of the port command is
+
+     port 11123
+
+   This would change the NTP port served by chronyd on the computer to
+udp/11123.
+
+
+File: chrony.info,  Node: refclock directive,  Next: rtcdevice directive,  Prev: port directive,  Up: Configuration file
+
+4.2.32 refclock
+---------------
+
+The `refclock' directive allows reference clocks to be specified.  The
+directive is immediately followed by a refclock driver name and its
+parameter.
+
+   There are currently three drivers implemented:
+
+`PPS'
+     Pulse per second (PPS) API driver.  The parameter is a path to the
+     PPS device.  Assert events are used by default.  Driver option
+     `:clear' can be appended to the path to use clear events instead.
+
+     PPS refclock needs another source (NTP or non-PPS refclock) or
+     local directive (*note local directive::) enabled to function.
+     For example:
+
+          refclock SHM 0 offset 0.5 delay 0.1
+          refclock PPS /dev/pps0
+
+`SHM'
+     NTP shared memory driver.  The parameter is the number of the
+     shared memory segment that should be used for receiving
+     timestamps, usually 0, 1, 2 or 3.  For example:
+
+          refclock SHM 1 poll 3 refid GPS1
+
+     A driver option in form `:perm=NNN' can be appended to the segment
+     number to create the segment with permissions other than the
+     default `0600'.
+
+     Software that can be used as a source of reference time includes
+     `gpsd' and `shmpps'.
+
+`SOCK'
+     Unix domain socket driver.  The parameter is a path to the socket
+     which is used as the source of timestamps.  This is as a better
+     alternative to SHM, it does not require polling, the offset
+     resolution is not limited to microsecond and it supports PPS.  The
+     format for messages sent over the socket is declared in file
+     `refclock_sock.c'.
+
+   The `refclock' command also supports a number of subfields (which
+may be defined in any order):
+
+`poll'
+     Timestamps produced by refclock drivers are not used immediately,
+     but they are stored and processed by a median filter in intervals
+     specified by this option.  This is defined as a power of 2.  The
+     default is 4 (16 seconds).  A shorter interval allows `chronyd' to
+     react faster to frequency changes, but it may increase noise.
+
+`dpoll'
+     Some drivers are not controlled by external events and thus require
+     polling.  Again this is defined as a power of 2 and can be negative
+     for sub-second intervals.  The default is 0 (1 second).
+
+`refid'
+     This option is used to specify a reference id of the refclock, as
+     up to four ASCII characters.  By default, first three characters
+     from driver name and the number of the refclock are used as refid.
+     Each refclock has to use an unique refid.
+
+`filter'
+     This option sets the length of the median filter which is used to
+     reduce noise.  With each poll about half of the stored samples are
+     discarded and one final sample is calculated as average of the
+     remaining samples.  The default is 15.
+
+`rate'
+     PPS signal frequency (in Hz).  This option only controls how the
+     received pulses are aligned.  To actually receive more than one
+     pulse per second, a negative `dpoll' has to be specified (-3 for
+     5Hz signal).  The default is 1.
+
+`lock'
+     This option can be used to lock a PPS refclock to another refclock
+     whose reference id is specified by this option.  In this mode
+     received pulses are aligned directly to unfiltered samples from
+     the refclock.  By default, pulses are aligned to local clock, but
+     only when it is well synchronised.
+
+`offset'
+     This option can be used to compensate a constant error.  The
+     specified offset (in seconds) is applied to all samples produced
+     by the refclock.  The default is 0.0.
+
+`delay'
+     This option is used to specify how the refclock is assumed to be
+     inaccurate (in seconds).  Increasing the value is useful to avoid
+     having no majority in the source selection algorithm or to make
+     the algorithm prefer other refclocks.  The default is 1e-9 (1
+     nanosecond).
+
+
+File: chrony.info,  Node: rtcdevice directive,  Next: rtcfile directive,  Prev: refclock directive,  Up: Configuration file
+
+4.2.33 rtcdevice
+----------------
+
+The `rtcdevice' directive defines the name of the device file for
+accessing the real time clock.  By default this is `/dev/rtc/', unless
+the directive is used to set a different value.  This applies to Linux
+systems with devfs.  An example of use is
+
+     rtcdevice /dev/misc/rtc
+
+
+File: chrony.info,  Node: rtcfile directive,  Next: rtconutc directive,  Prev: rtcdevice directive,  Up: Configuration file
+
+4.2.34 rtcfile
+--------------
+
+The `rtcfile' directive defines the name of the file in which `chronyd'
+can save parameters associated with tracking the accuracy of the
+system's real-time clock (RTC).
+
+   The syntax is illustrated in the following example
+
+     rtcfile /etc/chrony.rtc
+
+   `chronyd' saves information in this file when it exits and when the
+`writertc' command is issued in `chronyc'.  The information saved is
+the RTC's error at some epoch, that epoch (in seconds since January 1
+1970), and the rate at which the RTC gains or loses time.
+
+   So far, the support for real-time clocks is limited - their code is
+even more system-specific than the rest of the software.  You can only
+use the real time clock facilities (the `rtcfile' directive and the
+`-s' command line option to `chronyd') if the following three
+conditions apply:
+
+  1. You are running Linux version 2.2.x or 2.4.x (for any value of x),
+     or v2.0.x with x>=32.
+
+  2. You have compiled the kernel with extended real-time clock support
+     (i.e. the `/dev/rtc' device is capable of doing useful things).
+
+  3. You don't have other applications that need to make use of
+     `/dev/rtc' at all.
+
+
+
+File: chrony.info,  Node: rtconutc directive,  Next: server directive,  Prev: rtcfile directive,  Up: Configuration file
+
+4.2.35 rtconutc
+---------------
+
+`chronyd' assumes by default that the real time clock (RTC) keeps local
+time (including any daylight saving changes).  This is convenient on
+PCs running Linux which are dual-booted with DOS or Windows.
+
+   NOTE : IF YOU KEEP THE REAL TIME CLOCK ON LOCAL TIME AND YOUR
+COMPUTER IS OFF WHEN DAYLIGHT SAVING (SUMMER TIME) STARTS OR ENDS, THE
+COMPUTER'S SYSTEM TIME WILL BE ONE HOUR IN ERROR WHEN YOU NEXT BOOT AND
+START CHRONYD.
+
+   An alternative is for the RTC to keep Universal Coordinated Time
+(UTC).  This does not suffer from the 1 hour problem when daylight
+saving starts or ends.
+
+   If the `rtconutc' directive appears, it means the RTC is required to
+keep UTC.  The directive takes no arguments.  It is equivalent to
+specifying the `-u' switch to the Linux `/sbin/clock' program.
+
+
+File: chrony.info,  Node: sched_priority directive,  Next: lock_all directive,  Prev: server directive,  Up: Configuration file
+
+4.2.36 sched_priority
+---------------------
+
+The `sched_priority' directive will select the SCHED_FIFO real-time
+scheduler at the specified priority (which must be between 0 and 100).
+This mode is supported only on Linux.
+
+   This directive uses the Linux sched_setscheduler() system call to
+instruct the kernel to use the SCHED_FIFO first-in, first-out real-time
+scheduling policy for Chronyd with the specified priority.  This means
+that whenever Chronyd is ready to run it will run, interrupting
+whatever else is running unless it is a higher priority real-time
+process.  This should not impact performance as Chronyd's resource
+requirements are modest, but it should result in lower and more
+consistent latency since Chronyd will not need to wait for the
+scheduler to get around to running it.  You should not use this unless
+you really need it.  The sched_setscheduler man page has more details.
+
+
+File: chrony.info,  Node: lock_all directive,  Prev: sched_priority directive,  Up: Configuration file
+
+4.2.37 lock_all
+---------------
+
+The `lock_all' directive will lock chronyd into RAM so that it will
+never be paged out.  This mode is only supported on Linux.  This
+directive uses the Linux mlockall() system call to prevent Chronyd from
+ever being swapped out.  This should result in lower and more
+consistent latency.  It should not have significant impact on
+performance as Chronyd's memory usage is modest.  The mlockall man page
+has more details.
+
+
+File: chrony.info,  Node: server directive,  Next: sched_priority directive,  Prev: rtconutc directive,  Up: Configuration file
+
+4.2.38 server
+-------------
+
+The `server' directive allows NTP servers to be specified.  The
+client/server relationship is strictly hierarchical : a client may
+synchronise its system time to that of the server, but the server's
+system time will never be influenced by that of a client.
+
+   The `server' directive is immediately followed by either the name of
+the server, or its IP address.  The server command also supports a
+number of subfields (which may be defined in any order):
+
+`port'
+     This option allows the UDP port on which the server understands NTP
+     requests to be specified.  For normal servers this option should
+     not be required (the default is 123, the standard NTP port).
+
+`minpoll'
+     Although `chronyd' will trim the rate at which it samples the
+     server during normal operation, the user may wish to constrain the
+     minimum polling interval.  This is always defined as a power of 2,
+     so <tt/minpoll 5/ would mean that the polling interval cannot drop
+     below 32 seconds.  The default is 6 (64 seconds).
+
+`maxpoll'
+     In a similar way, the user may wish to constrain the maximum
+     polling interval.  Again this is specified as a power of 2, so
+     <tt/maxpoll 9/ indicates that the polling interval must stay at or
+     below 512 seconds.  The default is 10 (1024 seconds).
+
+`maxdelay'
+     `chronyd' uses the network round-trip delay to the server to
+     determine how accurate a particular measurement is likely to be.
+     Long round-trip delays indicate that the request, or the response,
+     or both were delayed.  If only one of the messages was delayed the
+     measurement error is likely to be substantial.
+
+     For small variations in round trip delay, `chronyd' uses a
+     weighting scheme when processing the measurements.  However,
+     beyond a certain level of delay the measurements are likely to be
+     so corrupted as to be useless.  (This is particularly so on
+     dial-up or other slow links, where a long delay probably indicates
+     a highly asymmetric delay caused by the response waiting behind a
+     lot of packets related to a download of some sort).
+
+     If the user knows that round trip delays above a certain level
+     should cause the measurement to be ignored, this level can be
+     defined with the maxdelay command.  For example, <tt/maxdelay 0.3/
+     would indicate that measurements with a round-trip delay of 0.3
+     seconds or more should be ignored.
+
+`maxdelayratio'
+     This option is similar to the maxdelay option above.  `chronyd'
+     keeps a record of the minimum round-trip delay amongst the previous
+     measurements that it has buffered.  If a measurement has a round
+     trip delay that is greater than the maxdelayratio times the
+     minimum delay, it will be rejected.
+
+`presend'
+     If the timing measurements being made by `chronyd' are the only
+     network data passing between two computers, you may find that some
+     measurements are badly skewed due to either the client or the
+     server having to do an ARP lookup on the other party prior to
+     transmitting a packet.  This is more of a problem with long
+     sampling intervals, which may be similar in duration to the
+     lifetime of entries in the ARP caches of the machines.
+
+     In order to avoid this problem, the `presend' option may be used.
+     It takes a single integer argument, which is the smallest polling
+     interval for which a pair of packets will be exchanged between the
+     client and the server prior to the actual measurement being
+     initiated by the client.  For example, with the following option
+     included in a `server' directive :
+
+          presend 9
+
+     when the polling interval is 512 seconds or more, a UDP echo
+     datagram will be sent to the server a short time (currently 4
+     seconds) before the NTP client mode datagram.
+
+`key'
+     The NTP protocol supports the inclusion of checksums in the
+     packets, to prevent computers having their system time upset by
+     rogue packets being sent to them.  The checksums are generated as
+     a function of a password, using the MD5 algorithm.
+
+     The association between key numbers and passwords is contained in
+     the keys file, defined by the keyfile command.
+
+     If the key option is present, `chronyd' will attempt to use
+     authenticated packets when communicating with this server.  The key
+     number used will be the single argument to the key option.  The
+     server must have the same password for this key number configured,
+     otherwise no relationship between the computers will be possible.
+
+`offline'
+     If the server will not be reachable when `chronyd' is started, the
+     offline option may be specified.  `chronyd' will not try to poll
+     the server until it is enabled to do so (by using the online
+     option of `chronyc').
+
+`auto_offline'
+     If this option is set, the server will be assumed to have gone
+     offline when 2 requests have been sent to it without receiving a
+     response.  This option avoids the need to run the `offline' (*note
+     offline command::) command from chrony when disconnecting the
+     dial-up link.  (It will still be necessary to use chronyc's
+     `online' (*note online command::) command when the link has been
+     established, to enable measurements to start.)
+
+
+
+File: chrony.info,  Node: Running chronyc,  Prev: Configuration file,  Up: Usage reference
+
+4.3 Running chronyc
+===================
+
+Chronyc is the program that can be used to reconfigure options within
+the `chronyd' program whilst it is running.  Chronyc can also be used
+to generate status reports about the operation of `chronyd'.
+
+* Menu:
+
+* Chronyc basic use::           How to run chronyc
+* Chronyc command line options::  Chrony's command line options
+* Security with chronyc::       How chronyd restricts access
+* Chronyc command reference::   All the commands chronyc supports
+
+
+File: chrony.info,  Node: Chronyc basic use,  Next: Chronyc command line options,  Up: Running chronyc
+
+4.3.1 Basic use
+---------------
+
+The program chronyc is run by entering
+
+     chronyc
+
+   at the command line.  The prompt `chronyc' is displayed whilst
+chronyc is expecting input from the user, when it is being run from a
+terminal.  If chronyc's input or output are redirected from/to a file,
+the prompt is now shown.
+
+   When you are finished entering commands, the commands `exit' or
+`quit' will terminate the program.  (Entering <Control-D> will also
+terminate the program.)
+
+
+File: chrony.info,  Node: Chronyc command line options,  Next: Security with chronyc,  Prev: Chronyc basic use,  Up: Running chronyc
+
+4.3.2 Command line options
+--------------------------
+
+Chronyc supports the following command line options.
+
+`-v'
+     Displays the version number of chronyc on the terminal, and exists.
+
+`-h <host>'
+     This option allows the user to specify which host running the
+     `chronyd' program is to be contacted.  This allows for remote
+     configuration, without having to telnet or rlogin to the other host
+     first.
+
+     The default is to contact `chronyd' running on the same host as
+     that where chronyc is being run.
+
+`-p <port>'
+     This option allows the user to specify the UDP port number which
+     the target `chronyd' is using for its command & monitoring
+     connections.  This defaults to the compiled-in default; there
+     would rarely be a need to change this.
+
+`-n'
+     This option disables resolving IP addresses to hostnames.
+
+`-4'
+     With this option hostnames will be resolved only to IPv4 addresses.
+
+`-6'
+     With this option hostnames will be resolved only to IPv6 addresses.
+
+
+File: chrony.info,  Node: Security with chronyc,  Next: Chronyc command reference,  Prev: Chronyc command line options,  Up: Running chronyc
+
+4.3.3 Security with chronyc
+---------------------------
+
+Many of the commands available through chronyc have a fair amount of
+power to reconfigure the run-time behaviour of `chronyd'.  Consequently,
+`chronyc' is quite dangerous for the integrity of the target system's
+clock performance.  Having access to `chronyd' via chronyc is more or
+less equivalent to being able to modify `chronyd's' configuration file
+(typically `/etc/chrony.conf') and to restart `chronyd'.
+
+   Chronyc also provides a number of monitoring (as opposed to
+commanding) commands, which will not affect the behaviour of `chronyd'.
+However, you may still want to restrict access to these commands.
+
+   In view of this, access to some of the capabilities of chronyc will
+usually be tightly controlled.  There are two mechanisms supported:
+
+  1. The set of hosts from which `chronyd' will accept commands can be
+     restricted.  By default, commands will only be accepted from the
+     same host that `chronyd' is running on.
+
+  2. Any command that actually reconfigures some aspect of `chronyd's'
+     behaviour requires the user of chronyc to know a password.  This
+     password is specified in `chronyd's' keys file (*note keyfile
+     directive::) and specified via the commandkey option in its
+     configuration file (*note commandkey directive::).
+
+   Only the following commands can be used _without_ providing a
+password:
+
+   * `activity'
+
+   * `clients'
+
+   * `dns'
+
+   * `exit'
+
+   * `help'
+
+   * `password'
+
+   * `quit'
+
+   * `rtcdata'
+
+   * `sources'
+
+   * `sourcestats'
+
+   * `tracking'
+
+   All other commands require a password to have been specified
+previously, because they affect `chronyd's' operation.
+
+
+File: chrony.info,  Node: Chronyc command reference,  Prev: Security with chronyc,  Up: Running chronyc
+
+4.3.4 Command reference
+-----------------------
+
+This section describes each of the commands available within the chronyc
+program.  Chronyc offers the user a simple command-line driven
+interface.
+
+* Menu:
+
+* accheck command::             Verifying NTP client access
+* activity command::            Check how many NTP servers/peers are online/offline
+* add peer command::            Add a new NTP peer
+* add server command::          Add a new NTP server
+* allow command::               Allowing NTP client access
+* allow all command::           Allowing NTP client access
+* burst command::               Initiating a rapid set of measurements
+* clients command::             Show clients that have accessed the server
+* cmdaccheck command::          Verifying command client access
+* cmdallow command::            Allowing command client access
+* cmdallow all command::        Allowing command client access
+* cmddeny command::             Denying command client access
+* cmddeny all command::         Denying command client access
+* cyclelogs command::           Close and re-open open log files
+* delete command::              Remove an NTP server or peer
+* deny command ::               Denying NTP client access
+* deny all command::            Denying NTP client access
+* dns command::                 Configure how are hostnames and IP addresses resolved
+* dump command::                Dump measurement histories to files
+* exit command::                Exit from chronyc
+* help command::                Generate help summary
+* local command::               Let computer be a server when it is unsynchronised
+* makestep command::            Immediately correct the system clock instead of slewing
+* manual command::              Enable/disable/configure options for settime
+* maxdelay command::            Set max measurement delay for a source
+* maxdelayratio command::       Set max measurement delay for a source as ratio
+* maxpoll command::             Set maximum polling interval for a source
+* maxupdateskew command::       Set safety threshold for clock gain/loss rate
+* minpoll command::             Set minimum polling interval for a source
+* offline command::             Warn that connectivity to a source will be lost
+* online command::              Warn that connectivity to a source has been restored
+* password command::            Provide password needed for most commands
+* quit command::                Exit from chronyc
+* rtcdata command::             Display RTC parameters
+* settime command::             Provide a manual input of the current time
+* sources command::             Display information about the current set of sources
+* sourcestats command::         Display the rate & offset estimation performance of sources
+* tracking command::            Display system clock performance
+* trimrtc command::             Correct the RTC time to the current system time
+* writertc command::            Write the RTC parameters to file.
+
+
+File: chrony.info,  Node: accheck command,  Next: activity command,  Up: Chronyc command reference
+
+4.3.4.1 accheck
+...............
+
+This command allows you to check whether client NTP access is allowed
+from a particular host.
+
+   Examples of use, showing a named host and a numeric IP address, are
+as follows:
+
+     accheck a.b.c
+     accheck 1.2.3.4
+     accheck 2001:db8::1
+
+   This command can be used to examine the effect of a series of
+`allow', `allow all', `deny' and `deny all' commands specified either
+via chronyc, or in `chronyd's' configuration file.
+
+
+File: chrony.info,  Node: activity command,  Next: add peer command,  Prev: accheck command,  Up: Chronyc command reference
+
+4.3.4.2 activity
+................
+
+This command reports the number of servers/peers that are online and
+offline.  If the auto_offline option is used in specifying some of the
+servers/peers, the `activity' command may be useful for detecting when
+all of them have entered the offline state after the PPP link has been
+disconnected.
+
+   The report shows the number of servers/peers in 4 states:
+   * `online' : the server/peer is currently online (i.e. assumed by
+     chronyd to be reachable)
+
+   * `offline' : the server/peer is currently offline (i.e. assumed by
+     chronyd to be unreachable, and no measurements from it will be
+     attempted.)
+
+   * `burst_online' : a burst command has been initiated for the
+     server/peer and is being performed; after the burst is complete,
+     the server/peer will be returned to the online state.
+
+   * `burst_offline' : a burst command has been initiated for the
+     server/peer and is being performed; after the burst is complete,
+     the server/peer will be returned to the offline state.
+
+
+File: chrony.info,  Node: add peer command,  Next: add server command,  Prev: activity command,  Up: Chronyc command reference
+
+4.3.4.3 add peer
+................
+
+The `add peer' command allows a new NTP peer to be added whilst
+`chronyd' is running.
+
+   Following the words `add peer', the syntax of the following
+parameters and options is identical to that for the `peer' directive in
+the configuration file (*note peer directive::).
+
+   An example of using this command is shown below.
+
+     add peer foo.bar.com minpoll 6 maxpoll 10 authkey 25
+
+
+File: chrony.info,  Node: add server command,  Next: allow command,  Prev: add peer command,  Up: Chronyc command reference
+
+4.3.4.4 add server
+..................
+
+The `add server' command allows a new NTP server to be added whilst
+`chronyd' is running.
+
+   Following the words `add server', the syntax of the following
+parameters and options is identical to that for the `server' directive
+in the configuration file (*note server directive::).
+
+   An example of using this command is shown below.
+
+     add server foo.bar.com minpoll 6 maxpoll 10 authkey 25
+
+
+File: chrony.info,  Node: allow command,  Next: allow all command,  Prev: add server command,  Up: Chronyc command reference
+
+4.3.4.5 allow
+.............
+
+The effect of the allow command is identical to the `allow' directive in
+the configuration file (*note allow directive::).
+
+   The syntax is illustrated in the following examples:
+
+     allow foo.bar.com
+     allow 1.2
+     allow 3.4.5
+     allow 6.7.8/22
+     allow 6.7.8.9/22
+     allow 2001:db8:789a::/48
+     allow 0/0
+     allow ::/0
+     allow
+
+   The effect of each of these examples is the same as that of the
+`allow' directive in the configuration file.
+
+
+File: chrony.info,  Node: allow all command,  Next: burst command,  Prev: allow command,  Up: Chronyc command reference
+
+4.3.4.6 allow all
+.................
+
+The effect of the allow command is identical to the `allow all'
+directive in the configuration file (*note allow directive::).
+
+
+File: chrony.info,  Node: burst command,  Next: clients command,  Prev: allow all command,  Up: Chronyc command reference
+
+4.3.4.7 burst
+.............
+
+The `burst' command tells `chronyd' to make a set of measurements to
+each of its NTP sources over a short duration (rather than the usual
+periodic measurements that it makes).  After such a burst, `chronyd'
+will revert to the previous state for each source.  This might be either
+online, if the source was being periodically measured in the normal way,
+or offline, if the source had been indicated as being offline.
+(Switching a source between the online and offline states is described
+in *note online command::, *note offline command::).
+
+   The syntax of the burst command is as follows
+
+     burst <n-good-measurements>/<max-measurements> [<mask>/<masked-address>]
+     burst <n-good-measurements>/<max-measurements> [<masked-address>/<masked-bits>]
+
+   The mask and masked-address arguments are optional, in which case
+`chronyd' will initiate a burst for all of its currently defined
+sources.
+
+   The arguments have the following meaning and format.
+
+`n-good-measurements'
+     This defines the number of good measurements that `chronyd' will
+     want to obtain from each source.  A measurement is good if it
+     passes certain tests, for example, the round trip time to the
+     source must be acceptable.  (This allows `chronyd' to reject
+     measurements that are likely to be bogus.)
+
+`max-measurements'
+     This defines the maximum number of measurements that `chronyd' will
+     attempt to make, even if the required number of good measurements
+     has not been obtained.
+
+`mask'
+     This is an IP address with which the IP address of each of
+     `chronyd''s sources is to be masked.
+
+`masked-address'
+     This is an IP address.  If the masked IP address of a source
+     matches this value then the burst command is applied to that
+     source.
+
+`masked-bits'
+     This can be used with `masked-address' for CIDR notation, which is
+     a shorter alternative to the form with mask.
+
+
+   If no mask or masked address arguments are provided, every source
+will be matched.
+
+   An example of the two-argument form of the command is
+
+     burst 2/10
+
+   This will cause `chronyd' to attempt to get two good measurements
+from each source, stopping after two have been obtained, but in no
+event will it try more than ten probes to the source.
+
+   Examples of the four-argument form of the command are
+
+     burst 2/10 255.255.0.0/1.2.0.0
+     burst 2/10 2001:db8:789a::/48
+
+   In the first case, the two out of ten sampling will only be applied
+to sources whose IPv4 addresses are of the form `1.2.x.y', where x and y
+are arbitrary. In the second case, the sampling will be applied to
+sources whose IPv6 addresses have first 48 bits equal to
+`2001:db8:789a'.
+
+
+File: chrony.info,  Node: clients command,  Next: cmdaccheck command,  Prev: burst command,  Up: Chronyc command reference
+
+4.3.4.8 clients
+...............
+
+This command shows a list of all clients that have accessed the server,
+through either the NTP or command/monitoring ports.  There are no
+arguments.
+
+   An example of the output is
+
+     Hostname                   Client    Peer CmdAuth CmdNorm  CmdBad  LstN  LstC
+     =========================  ======  ======  ======  ======  ======  ====  ====
+     localhost                       0       0      15       1       0   29y     0
+     aardvark.xxx                    4       0       0       0       0    49   29y
+     badger.xxx                      4       0       0       0       0     6   29y
+
+   Each row shows the data for a single host.  Only hosts that have
+passed the host access checks (set with the `allow', `deny', `cmdallow'
+and `cmddeny' commands or configuration file directives) are logged.
+
+   The columns are as follows:
+
+  1. The hostname of the client
+
+  2. The number of times the client has accessed the server using an NTP
+     client mode packet.
+
+  3. The number of times the client has accessed the server using an NTP
+     symmetric active mode packet.
+
+  4. The number of authenticated command packets that have been
+     processed from the client (i.e. those following a successful
+     `password' command).
+
+  5. The number of unauthenticated command packets that have been
+     processed from the client.
+
+  6. The number of bad command packets received from the client (not all
+     forms of bad packet are logged).
+
+  7. Time since the last NTP packet was received
+
+  8. Time since the last command packet was received
+
+   The last two entries will be shown as the time since 1970 if no
+packet of that type has ever been received.
+
+
+File: chrony.info,  Node: cmdaccheck command,  Next: cmdallow command,  Prev: clients command,  Up: Chronyc command reference
+
+4.3.4.9 cmdaccheck
+..................
+
+This command is similar to the `accheck' command, except that it is
+used to check whether command access is permitted from a named host.
+
+   Examples of use are as follows:
+
+     cmdaccheck a.b.c
+     cmdaccheck 1.2.3.4
+     cmdaccheck 2001:db8::1
+
+
+File: chrony.info,  Node: cmdallow command,  Next: cmdallow all command,  Prev: cmdaccheck command,  Up: Chronyc command reference
+
+4.3.4.10 cmdallow
+.................
+
+This is similar to the `allow' command, except that it is used to allow
+particular hosts or subnets to use the chronyc program to interact with
+`chronyd' on the current host.
+
+
+File: chrony.info,  Node: cmdallow all command,  Next: cmddeny command,  Prev: cmdallow command,  Up: Chronyc command reference
+
+4.3.4.11 cmdallow all
+.....................
+
+This is similar to the `allow all' command, except that it is used
+toallow particular hosts or subnets to use the chronyc program to
+interactwith `chronyd' on the current host.
+
+
+File: chrony.info,  Node: cmddeny command,  Next: cmddeny all command,  Prev: cmdallow all command,  Up: Chronyc command reference
+
+4.3.4.12 cmddeny
+................
+
+This is similar to the `deny' command, except that it is used to allow
+particular hosts or subnets to use the chronyc program to interact with
+`chronyd' on the current host.
+
+
+File: chrony.info,  Node: cmddeny all command,  Next: cyclelogs command,  Prev: cmddeny command,  Up: Chronyc command reference
+
+4.3.4.13 cmddeny all
+....................
+
+This is similar to the `deny all' command, except that it is used to
+allow particular hosts or subnets to use the chronyc program to
+interact with `chronyd' on the current host.
+
+
+File: chrony.info,  Node: cyclelogs command,  Next: delete command,  Prev: cmddeny all command,  Up: Chronyc command reference
+
+4.3.4.14 cyclelogs
+..................
+
+The `cyclelogs' command causes all of `chronyd's' open log files to be
+closed and re-opened.  This allows them to be renamed so that they can
+be periodically purged.  An example of how to do this is shown below.
+
+     % mv /var/log/chrony/measurements.log /var/log/chrony/measurements1.log
+     % chronyc
+     chronyc> password aardvark
+     200 OK
+     chronyc> cyclelogs
+     200 OK
+     chronyc> exit
+     % ls -l /var/log/chrony
+     -rw-r--r--   1 root     root            0 Jun  8 18:17 measurements.log
+     -rw-r--r--   1 root     root        12345 Jun  8 18:17 measurements1.log
+     % rm -f measurements1.log
+
+
+File: chrony.info,  Node: delete command,  Next: deny command,  Prev: cyclelogs command,  Up: Chronyc command reference
+
+4.3.4.15 delete
+...............
+
+The `delete' command allows an NTP server or peer to be removed from
+the current set of sources.
+
+   The syntax is illustrated in the examples below.
+
+     delete foo.bar.com
+     delete 1.2.3.4
+     delete 2001:db8::1
+
+   There is one parameter, the name or IP address of the server or peer
+to be deleted.
+
+
+File: chrony.info,  Node: deny command,  Next: deny all command,  Prev: delete command,  Up: Chronyc command reference
+
+4.3.4.16 deny
+.............
+
+The effect of the allow command is identical to the `deny' directive in
+the configuration file (*note deny directive::).
+
+   The syntax is illustrated in the following examples:
+
+     deny foo.bar.com
+     deny 1.2
+     deny 3.4.5
+     deny 6.7.8/22
+     deny 6.7.8.9/22
+     deny 2001:db8:789a::/48
+     deny 0/0
+     deny ::/0
+     deny
+
+
+File: chrony.info,  Node: deny all command,  Next: dns command,  Prev: deny command,  Up: Chronyc command reference
+
+4.3.4.17 deny all
+.................
+
+The effect of the allow command is identical to the `deny all'
+directive in the configuration file (*note deny directive::).
+
+
+File: chrony.info,  Node: dns command,  Next: dump command,  Prev: deny all command,  Up: Chronyc command reference
+
+4.3.4.18 dns
+............
+
+The `dns' command configures how are hostnames and IP addresses
+resolved in `chronyc'.  IP addresses can be resolved to hostnames when
+printing results of `sources', `sourcestats', `tracking' and `clients'
+commands.  Hostnames are resolved in commands that take an address as
+argument.
+
+   There are five forms of the command:
+
+`dns -n'
+     Disables resolving IP addresses to hostnames.  Raw IP addresses
+     will be displayed.
+
+`dns +n'
+     Enables resolving IP addresses to hostnames.  This is the default
+     unless `chronyc' was started with `-n' option.
+
+`dns -4'
+     Resolves hostnames only to IPv4 addresses.
+
+`dns -6'
+     Resolves hostnames only to IPv6 addresses.
+
+`dns -46'
+     Resolves hostnames to both address families.  This is the default
+     unless `chronyc' was started with `-4' or `-6' option.
+
+
+File: chrony.info,  Node: dump command,  Next: exit command,  Prev: dns command,  Up: Chronyc command reference
+
+4.3.4.19 dump
+.............
+
+The `dump' command causes `chronyd' to write its current history of
+measurements for each of its sources to dump files, either for
+inspection or to support the `-r' option when `chronyd' is restarted.
+
+   The `dump' command is somewhat equivalent to the `dumponexit'
+directive in the chrony configuration file.  *Note dumponexit
+directive::.
+
+   To use the `dump', you probably want to configure the name of the
+directory into which the dump files will be written.  This can only be
+done in the configuration file, see *note dumpdir directive::.
+
+
+File: chrony.info,  Node: exit command,  Next: help command,  Prev: dump command,  Up: Chronyc command reference
+
+4.3.4.20 exit
+.............
+
+The exit command exits from chronyc and returns the user to the shell
+(same as the quit command).
+
+
+File: chrony.info,  Node: help command,  Next: local command,  Prev: exit command,  Up: Chronyc command reference
+
+4.3.4.21 help
+.............
+
+The help command displays a summary of the commands and their arguments.
+
+
+File: chrony.info,  Node: local command,  Next: makestep command,  Prev: help command,  Up: Chronyc command reference
+
+4.3.4.22 local
+..............
+
+The `local' command allows `chronyd' to be told that it is to appear as
+a reference source, even if it is not itself properly synchronised to
+an external source.  (This can be used on isolated networks, to allow
+one computer to be a master time server with the other computers slaving
+to it.)  The `local' command is somewhat equivalent to the `local'
+directive in the configuration file, see *note local directive::.
+
+   The syntax is as shown in the following examples.
+
+     local stratum 10
+     local off
+
+   The first example enables the local reference mode on the host, and
+sets the stratum at which it should claim to be synchronised.
+
+   The second example disables the local reference mode.
+
+
+File: chrony.info,  Node: makestep command,  Next: manual command,  Prev: local command,  Up: Chronyc command reference
+
+4.3.4.23 makestep
+.................
+
+Normally chronyd will cause the system to gradually correct any time
+offset, by slowing down or speeding up the clock as required.  In
+certain situations, the system clock may be so far adrift that this
+slewing process would take a very long time to correct the system clock.
+
+   The `makestep' command can be used in this situation.  It cancels
+any remaining correction that was being slewed, and jumps the system
+clock by the equivalent amount, making it correct immediately.
+
+   BE WARNED - certain software will be seriously affected by such
+jumps to the system time.  (That is the reason why chronyd uses slewing
+normally.)
+
+   The `makestep' directive in the configuration file can be used to
+step the clock automatically when the adjustment is larger than a
+specified threshold, see *note makestep directive::.
+
+
+File: chrony.info,  Node: manual command,  Next: maxdelay command,  Prev: makestep command,  Up: Chronyc command reference
+
+4.3.4.24 manual
+...............
+
+The manual command enables and disables use of the `settime' command
+(*note settime command::), and is used to modify the behaviour of the
+manual clock driver.
+
+   Examples of the command are shown below.
+
+     manual on
+     manual off
+     manual delete 1
+     manual list
+     manual reset
+
+   The `on' form of the command enables use of the `settime' command.
+
+   The `off' form of the command disables use of the `settime' command.
+
+   The `list' form of the command lists all the samples currently
+stored in `chronyd'.  The output is illustrated below.
+
+     210 n_samples = 1
+     #    Date  Time(UTC)    Slewed   Original   Residual
+     ====================================================
+      0 27Jan99 22:09:20       0.00       0.97       0.00
+
+   The columns as as follows :
+
+  1. The sample index (used for the `manual delete' command)
+
+  2. The date and time of the sample
+
+  3. The system clock error when the timestamp was entered, adjusted to
+     allow for changes made to the system clock since.
+
+  4. The system clock error when the timestamp was entered, as it
+     originally was (without allowing for changes to the system clock
+     since).
+
+  5. The regression residual at this point, in seconds.  This allows
+     'outliers' to be easily spotted, so that they can be deleted using
+     the `manual delete' command.
+
+   The `delete' form of the command deletes a single sample.  The
+parameter is the index of the sample, as shown in the first column of
+the output from `manual list'.  Following deletion of the data point,
+the current error and drift rate are re-estimated from the remaining
+data points and the system clock trimmed if necessary.  This option is
+intended to allow 'outliers' to be discarded, i.e. samples where the
+administrator realises he/she has entered a very poor timestamp.
+
+   The `reset' form of the command deletes all samples at once.  The
+system clock is left running as it was before the command was entered.
+
+
+File: chrony.info,  Node: maxdelay command,  Next: maxdelayratio command,  Prev: manual command,  Up: Chronyc command reference
+
+4.3.4.25 maxdelay
+.................
+
+This allows the `maxdelay' option for one of the sources to be
+modified, in the same way as specifying the `maxdelay' option for the
+`server' directive in the configuration file (*note server directive::).
+
+   The following examples illustrate the syntax
+
+     maxdelay foo.bar.com 0.3
+     maxdelay 1.2.3.4 0.0015
+     maxdelay 2001:db8::1 0.0015
+
+   The first example sets the maximum network delay allowed for a
+measurement to the host `foo.bar.com' to 0.3 seconds.  The second and
+third examples set the maximum network delay for a measurement to the
+host with IPv4 address `1.2.3.4' and the host with IPv6 address
+`2001:db8::1' to 1.5 milliseconds.
+
+   (Any measurement whose network delay exceeds the specified value is
+discarded.)
+
+
+File: chrony.info,  Node: maxdelayratio command,  Next: maxpoll command,  Prev: maxdelay command,  Up: Chronyc command reference
+
+4.3.4.26 maxdelayratio
+......................
+
+This allows the `maxdelayratio' option for one of the sources to be
+modified, in the same way as specifying the `maxdelayratio' option for
+the `server' directive in the configuration file (*note server
+directive::).
+
+   The following examples illustrate the syntax
+
+     maxdelayratio foo.bar.com 1.5
+     maxdelayratio 1.2.3.4 2.0
+     maxdelayratio 2001:db8::1 2.0
+
+   The first example sets the maximum network delay for a measurement to
+the host `foo.bar.com' to be 1.5 times the minimum delay found amongst
+the previous measurements that have been retained.  The second and
+third examples set the maximum network delay for a measurement to the
+host with IPv4 address `1.2.3.4' and the host with IPv6 address
+`2001:db8::1' to be double the retained minimum.
+
+   As for `maxdelay', any measurement whose network delay is too large
+will be discarded.
+
+
+File: chrony.info,  Node: maxpoll command,  Next: maxupdateskew command,  Prev: maxdelayratio command,  Up: Chronyc command reference
+
+4.3.4.27 maxpoll
+................
+
+The `maxpoll' command is used to modify the minimum polling interval
+for one of the current set of sources.  It is equivalent to the
+`maxpoll' option in the `server' directive in the configuration file
+(*note server directive::).
+
+   The syntax is as follows
+
+     maxpoll <host> <new-maxpoll>
+
+   where the host can be specified as either a machine name or IP
+address.  The new minimum poll is specified as a base-2 logarithm of
+the number of seconds between polls (e.g. specify 6 for 64 second
+sampling).
+
+   An example is
+
+     maxpoll foo.bar.com 10
+
+   which sets the maximum polling interval for the host `foo.bar.com'
+to 1024 seconds.
+
+   Note that the new maximum polling interval only takes effect after
+the next measurement has been made.
+
+
+File: chrony.info,  Node: maxupdateskew command,  Next: minpoll command,  Prev: maxpoll command,  Up: Chronyc command reference
+
+4.3.4.28 maxupdateskew
+......................
+
+This command has the same effect as the `maxupdateskew' directive in
+the configuration file, see *note maxupdateskew directive::.
+
+
+File: chrony.info,  Node: minpoll command,  Next: offline command,  Prev: maxupdateskew command,  Up: Chronyc command reference
+
+4.3.4.29 minpoll
+................
+
+The `minpoll' command is used to modify the minimum polling interval
+for one of the current set of sources.  It is equivalent to the
+`minpoll' option in the `server' directive in the configuration file
+(*note server directive::).
+
+   The syntax is as follows
+
+     minpoll <host> <new-minpoll>
+
+   where the host can be specified as either a machine name or IP
+address.  The new minimum poll is specified as a base-2 logarithm of
+the number of seconds between polls (e.g. specify 6 for 64 second
+sampling).
+
+   An example is
+
+     minpoll foo.bar.com 5
+
+   which sets the minimum polling interval for the host `foo.bar.com'
+to 32 seconds.
+
+   Note that the new minimum polling interval only takes effect after
+the next measurement has been made.
+
+
+File: chrony.info,  Node: offline command,  Next: online command,  Prev: minpoll command,  Up: Chronyc command reference
+
+4.3.4.30 offline
+................
+
+The `offline' command is used to warn `chronyd' that the network
+connection to a particular host or hosts is about to be lost.  It should
+be used on computers with a dial-up or similar connection to their time
+sources, to warn `chronyd' that the connection is about to be broken.
+
+   An example of how to use `offline' in this case is shown in *note
+Advising chronyd of internet availability::.
+
+   Another case where `offline' could be used is where a computer
+serves time to a local group of computers, and has a permanant
+connection to true time servers outside the organisation.  However, the
+external connection is heavily loaded at certain times of the day and
+the measurements obtained are less reliable at those times.  In this
+case, it is probably most useful to determine the gain/loss rate during
+the quiet periods and let the whole network coast through the loaded
+periods.  The `offline' and `online' commands can be used to achieve
+this.  The situation is shown in the figure below.
+
+               +----------+
+               |Ext source|
+               +----------+
+                   |
+                   |
+                   |/| <-- Link with variable
+                     |     reliability
+                     |
+           +-------------------+
+           |Local master server|
+           +-------------------+
+                     |
+       +---+---+-----+-----+----+----+
+       |   |   |     |     |    |    |
+                Local clients
+
+   If the source to which `chronyd' is currently synchronised is
+indicated offline in this way, `chronyd' will continue to treat it as
+the synchronisation source.  If the network connection were broken
+without the `offline' command being used, `chronyd' would assume that
+the source had failed and would attempt to pick another synchronisation
+source.
+
+   There are three forms of the `offline' command.  The first form is a
+wildcard, meaning all sources.  The second form allows a IP address mask
+and a masked address to be specified.  The third form uses the CIDR
+notation.  These forms are illustrated below.
+
+     offline
+     offline 255.255.255.0/1.2.3.0
+     offline 2001:db8:789a::/48
+
+   The second form means that the `offline' command is to be applied to
+any source whose IPv4 address is in the `1.2.3' subnet.  (The host's
+address is logically and-ed with the mask, and if the result matches the
+masked-address the host is processed).  The third form means that the
+command is to be applied to all sources whose IPv6 addresses have first
+48 bits equal to `2001:db8:789a'.
+
+   The wildcard form of the address is actually equivalent to
+
+     offline 0.0.0.0/0.0.0.0
+     offline ::/0
+
+
+File: chrony.info,  Node: online command,  Next: password command,  Prev: offline command,  Up: Chronyc command reference
+
+4.3.4.31 online
+...............
+
+The `online' command is opposite in function to the `offline' command.
+It is used to advise `chronyd' that network connectivity to a
+particular source or sources has been restored.
+
+   The syntax is identical to that of the `offline' command, see *note
+offline command::.
+
+
+File: chrony.info,  Node: password command,  Next: quit command,  Prev: online command,  Up: Chronyc command reference
+
+4.3.4.32 password
+.................
+
+The password command is used to allow chronyc to send privileged
+commands to `chronyd'.  The password can either be entered on the
+command line, or can be entered without echoing.  The syntax for
+entering the password on the command line is as follows
+
+     password xyzzy
+
+   To enter the password without it being echoed, enter
+
+     password
+
+   The computer will respond with a `Password:' prompt, at which you
+should enter the password and press return.  (Note that the no-echo mode
+is limited to 8 characters on SunOS 4.1 due to limitations in the system
+library.  Other systems do not have this restriction.)
+
+   The password is any string of characters not containing whitespace.
+It has to match `chronyd's' currently defined command key (*note
+commandkey directive::).
+
+
+File: chrony.info,  Node: quit command,  Next: rtcdata command,  Prev: password command,  Up: Chronyc command reference
+
+4.3.4.33 quit
+.............
+
+The quit command exits from chronyc and returns the user to the shell
+(same as the exit command).
+
+
+File: chrony.info,  Node: rtcdata command,  Next: settime command,  Prev: quit command,  Up: Chronyc command reference
+
+4.3.4.34 rtcdata
+................
+
+The `rtcdata' command displays the current real time clock RTC
+parameters.
+
+   An example output is shown below.
+
+     RTC ref time (GMT) : Sat May 30 07:25:56 1998
+     Number of samples  : 10
+     Number of runs     : 5
+     Sample span period :  549
+     RTC is fast by     :    -1.632736 seconds
+     RTC gains time at  :  -107.623 ppm
+
+   The fields have the following meaning
+
+`RTC ref time (GMT)'
+     This is the RTC reading the last time its error was measured.
+
+`Number of samples'
+     This is the number of previous measurements being used to
+     determine the RTC gain/loss rate.
+
+`Number of runs'
+     This is the number of runs of residuals of the same sign following
+     the regression fit for (RTC error) versus (RTC time).  A value
+     which is small indicates that the measurements are not well
+     approximated by a linear model, and that the algorithm will tend
+     to delete the older measurements to improve the fit.
+
+`Sample span period'
+     This is the period that the measurements span (from the oldest to
+     the newest).  Without a unit the value is in seconds; suffixes `m'
+     for minutes, `h' for hours, `d' for days or `y' for years may be
+     used.
+
+`RTC is fast by'
+     This is the estimate of how many seconds fast the RTC when it
+     thought the time was at the reference time (above).  If this value
+     is large, you may (or may not) want to use the `trimrtc' command
+     to bring the RTC into line with the system clock.  (Note, a large
+     error will not affect `chronyd's' operation, unless it becomes so
+     big as to start causing rounding errors.
+
+`RTC gains time at'
+     This is the amount of time gained (positive) or lost (negative) by
+     the real time clock for each second that it ticks.  It is measured
+     in parts per million.  So if the value shown was +1, suppose the
+     RTC was exactly right when it crosses a particular second
+     boundary.  Then it would be 1 microsecond fast when it crosses its
+     next second boundary.
+
+
+File: chrony.info,  Node: settime command,  Next: sources command,  Prev: rtcdata command,  Up: Chronyc command reference
+
+4.3.4.35 settime
+................
+
+The `settime' command allows the current time to be entered manually,
+if this option has been configured into `chronyd'.  (It may be
+configured either with the `manual' directive in the configuration file
+(*note manual directive::), or with the `manual' command of chronyc
+(*note manual command::).
+
+   It should be noted that the computer's sense of time will only be as
+accurate as the reference you use for providing this input (e.g. your
+watch), as well as how well you can time the press of the return key.
+When inputting time to an isolated network, I have a battery operated
+alarm clock that is synchronised to the Rugby MSF time signal in the UK.
+
+   Providing your computer's time zone is set up properly, you will be
+able to enter a local time (rather than UTC).
+
+   The response to a successful `settime' command indicates the amount
+that the computer's clock was wrong.  It should be apparent from this if
+you have entered the time wrongly, e.g. with the wrong time zone.
+
+   The rate of drift of the system clock is estimated by a regression
+process using the entered measurement and all previous measurements
+entered during the present run of `chronyd'.  However, the entered
+measurement is used for adjusting the current clock offset (rather than
+the estimated intercept from the regression, which is ignored).
+Contrast what happens with the `manual delete' command, where the
+intercept is used to set the current offset (since there is no
+measurement that has just been typed in in that case).
+
+   The time is parsed by the public domain `getdate' algorithm.
+Consequently, you can only specify time to the nearest second.
+
+   Examples of inputs that are valid are shown below.
+
+     settime 16:30
+     settime 16:30:05
+     settime Nov 21, 1997 16:30:05
+
+   For a full description of `getdate', get hold of the getdate
+documentation (bundled, for example, with the source for GNU tar).
+
+
+File: chrony.info,  Node: sources command,  Next: sourcestats command,  Prev: settime command,  Up: Chronyc command reference
+
+4.3.4.36 sources
+................
+
+This command displays information about the current time sources that
+`chronyd' is accessing.
+
+   The optional argument `-v' can be specified, meaning _verbose_.  In
+this case, extra caption lines are shown as a reminder of the meanings
+of the columns.
+
+     210 Number of sources = 3
+     MS Name/IP address      Stratum Poll LastRx Last sample
+     =======================================================================
+     ^+ a.b.c                    3     6    47m  -9491us[-6983us] +/-  159ms
+     ^+ d.e.f                    3     6    47m    +32ms[  +35ms] +/-  274ms
+     ^* g.h.i                    2     6    47m  +8839us[  +11ms] +/-  214ms
+
+   The columns are as follows:
+
+`M'
+     This indicates the mode of the source.  `^' means a server, `='
+     means a peer and `#' indicates a locally connected reference clock.
+
+`S'
+     This column indicates the state of the sources.  `*' indicates the
+     source to which `chronyd' is current synchronised.  `+' indicates
+     other acceptable sources.  `?' indicates sources to which
+     connectivity has been lost.  `x' indicates a clock which `chronyd'
+     thinks is is a falseticker (i.e. its time is inconsistent with a
+     majority of other sources).  `~' indicates a source whose time
+     appears to have too much variability.  The `~' condition is also
+     shown at start-up, until at least 3 samples have been gathered
+     from it.
+
+`Name/IP address'
+     This shows the name or the IP address of the source, or refid for
+     reference clocks.
+
+`Stratum'
+     This shows the stratum of the source, as reported in its most
+     recently received sample.  Stratum 1 indicates a computer with a
+     locally attached reference clock.  A computer that is synchronised
+     to a stratum 1 computer is at stratum 2.  A computer that is
+     synchronised to a stratum 2 computer is at stratum 3, and so on.
+
+`Poll'
+     This shows the rate at which the source is being polled, as a
+     base-2 logarithm of the interval in seconds.  Thus, a value of 6
+     would indicate that a measurement is being made every 64 seconds.
+
+     `chronyd' automatically varies the polling rate in response to
+     prevailing conditions.
+
+`LastRx'
+     This column shows how long ago the last sample was received from
+     the source.  This is normally in seconds.  The letters `m', `h',
+     `d' or `y' indicate minutes, hours, days or years.
+
+`Last sample'
+     This column shows the offset between the local clock and the
+     source at the last measurement.  The number in the square brackets
+     shows the actual measured offset.  This may be suffixed by `ns'
+     (indicating nanoseconds), `us' (indicating microseconds), `ms'
+     (indicating milliseconds), or `s' (indicating seconds).  The
+     number to the left of the square brackets shows the original
+     measurement, adjusted to allow for any slews applied to the local
+     clock since.  The number following the `+/-' indicator shows the
+     margin of error in the measurement.
+
+     Positive offsets indicate that the local clock is fast of the
+     source.
+
+
+
+File: chrony.info,  Node: sourcestats command,  Next: tracking command,  Prev: sources command,  Up: Chronyc command reference
+
+4.3.4.37 sourcestats
+....................
+
+The `sourcestats' command displays information about the drift rate and
+offset estimatation process for each of the sources currently being
+examined by `chronyd'.
+
+   The optional argument `-v' can be specified, meaning _verbose_.  In
+this case, extra caption lines are shown as a reminder of the meanings
+of the columns.
+
+   An example report is
+
+     210 Number of sources = 1
+     Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev
+     ===============================================================================
+     abc.def.ghi                11   5   46m     -0.001      0.045      1us    25us
+
+   The columns are as follows
+
+`Name/IP Address'
+     This is the name or IP address of the NTP server (or peer) or
+     refid of the refclock to which the rest of the line relates.
+
+`NP'
+     This is the number of sample points currently being retained for
+     the server.  The drift rate and current offset are estimated by
+     performing a linear regression through these points.
+
+`NR'
+     This is the number of runs of residuals having the same sign
+     following the last regression.  If this number starts to become
+     too small relative to the number of samples, it indicates that a
+     straight line is no longer a good fit to the data.  If the number
+     of runs is too low, `chronyd' discards older samples and re-runs
+     the regression until the number of runs becomes acceptable.
+
+`Span'
+     This is the interval between the oldest and newest samples.  If no
+     unit is shown the value is in seconds.  In the example, the
+     interval is 46 minutes.
+
+`Frequency'
+     This is the estimated residual frequency for the server, in parts
+     per million.  In this case, the computer's clock is estimated to
+     be running 1 part in 10**9 slow relative to the server.
+
+`Freq Skew'
+     This is the estimated error bounds on `Freq' (again in parts per
+     million).
+
+`Offset'
+     This is the estimated offset of the source.
+
+`Std Dev'
+     This is the estimated sample standard deviation.
+
+
+
+File: chrony.info,  Node: tracking command,  Next: trimrtc command,  Prev: sourcestats command,  Up: Chronyc command reference
+
+4.3.4.38 tracking
+.................
+
+The `tracking' command displays parameters about the system's clock
+performance.  An example of the output is shown below.
+
+     Reference ID    : 1.2.3.4 (a.b.c)
+     Stratum         : 3
+     Ref time (UTC)  : Sun May 17 06:13:11 1998
+     System time     : 0.000000000 seconds fast of NTP time
+     Frequency       : 331.898 ppm fast
+     Residual freq   : 0.004 ppm
+     Skew            : 0.154 ppm
+     Root delay      : 0.373169 seconds
+     Root dispersion : 0.024780 seconds
+
+   The fields are explained as follows.
+
+`Reference ID'
+     This is the refid and name (or IP address) if available, of the
+     server to which the computer is currently synchronised.  If this
+     is `127.127.1.1' it means the computer is not synchronised to any
+     external source and that you have the `local' mode operating (via
+     the `local' command in `chronyc' (*note local command::), or the
+     `local' directive in the `/etc/chrony.conf' file (*note local
+     directive::)).
+
+`Stratum'
+     The stratum indicates how many hops away from a computer with an
+     attached reference clock we are.  Such a computer is a stratum-1
+     computer, so the computer in the example is two hops away (i.e.
+     `a.b.c' is a stratum-2 and is synchronised from a stratum-1).
+
+`Ref time'
+     This is the time (GMT) at which the last measurement from the
+     reference source was processed.
+
+`System time'
+     In normal operation, `chronyd' _never_ steps the system clock,
+     because any jump in the timescale can have adverse consequences for
+     certain application programs.  Instead, any error in the system
+     clock is corrected by slightly speeding up or slowing down the
+     system clock until the error has been removed, and then returning
+     to the system clock's normal speed.  A consequence of this is that
+     there will be a period when the system clock (as read by other
+     programs using the `gettimeofday()' system call, or by the `date'
+     command in the shell) will be different from `chronyd's' estimate
+     of the current true time (which it reports to NTP clients when it
+     is operating in server mode).  The value reported on this line is
+     the difference due to this effect.
+
+     On systems such as Solaris and SunOS, `chronyd' has no means to
+     adjust the fundamental rate of the system clock, so keeps the
+     system time correct by periodically making offsets to it as though
+     an error had been measured.  The build up of these offsets will be
+     observed in this report.  On systems such as Linux where `chronyd'
+     can adjust the fundamental rate of the system clock, this value
+     will show zero unless a very recent measurement has shown the
+     system to be error.
+
+`Frequency'
+     The `frequency' is the rate by which the system's clock would be
+     would be wrong if `chronyd' was not correcting it.  It is
+     expressed in ppm (parts per million).  For example, a value of
+     1ppm would mean that when the system's clock thinks it has
+     advanced 1 second, it has actually advanced by 1.000001 seconds
+     relative to true time.
+
+     As you can see in the example, the clock in the computer I
+     developed `chrony' on is not a very good one - it gains about 30
+     seconds per day!  This was the reason I started to write `chrony'
+     in the first place.
+
+`Residual freq'
+     This shows the `residual frequency' for the currently selected
+     reference source.  This reflects any difference between what the
+     measurements from the reference source indicate the frequency
+     should be and the frequency currently being used.
+
+     The reason this is not always zero is that a smoothing procedure is
+     applied to the frequency.  Each time a measurement from the
+     reference source is obtained and a new residual frequency
+     computed, the estimated accuracy of this residual is compared with
+     the estimated accuracy (see `skew' next) of the existing frequency
+     value.  A weighted average is computed for the new frequency, with
+     weights depending on these accuracies.  If the measurements from
+     the reference source follow a consistent trend, the residual will
+     be driven to zero over time.
+
+`Skew'
+     This is the estimated error bound on the the frequency.
+
+`Root delay'
+     This is the total of the network path delays to the stratum-1
+     computer from which the computer is ultimately synchronised.
+
+     In certain extreme situations, this value can be negative.  (This
+     can arise in a symmetric peer arrangement where the computers'
+     frequencies are not tracking each other and the network delay is
+     very short relative to the turn-around time at each computer.)
+
+`Root dispersion'
+     This is the total dispersion accumulated through all the computers
+     back to the stratum-1 computer from which the computer is
+     ultimately synchronised.  Dispersion is due to system clock
+     resolution, statistical measurement variations etc.
+
+     An absolute bound on the computer's clock accuracy (assuming the
+     stratum-1 computer is correct) is given by
+
+          clock_error <= root_dispersion + (0.5 * |root_delay|)
+
+
+
+File: chrony.info,  Node: trimrtc command,  Next: writertc command,  Prev: tracking command,  Up: Chronyc command reference
+
+4.3.4.39 trimrtc
+................
+
+The `trimrtc' command is used to correct the system's real time clock
+(RTC) to the main system clock.  It has no effect if the error between
+the two clocks is currently estimated at less than a second (the
+resolution of the RTC is only 1 second).
+
+   The command takes no arguments.  It performs the following steps (if
+the RTC is more than 1 second away from the system clock):
+
+  1. Remember the currently estimated gain/loss rate of the RTC and
+     flush the previous measurements.
+
+  2. Step the real time clock to bring it within a second of the system
+     clock.
+
+  3. Make several measurements to accurately determine the new offset
+     between the RTC and the system clock (i.e. the remaining fraction
+     of a second error)
+
+  4. Save the RTC parameters to the RTC file (specified with the
+     `rtcfile' directive in the configuration file (*note rtcfile
+     directive::).
+
+   The last step is done as a precaution against the computer suffering
+a power failure before either the daemon exits or the `writertc'
+command is issued.
+
+   `chronyd' will still work perfectly well both whilst operating and
+across machine reboots even if the `trimrtc' command is never used (and
+the RTC is allowed to drift away from true time).  The `trimrtc'
+command is provided as a method by which it can be corrected, in a
+manner compatible with `chronyd' using it to maintain accurate time
+across machine reboots.
+
+
+File: chrony.info,  Node: writertc command,  Prev: trimrtc command,  Up: Chronyc command reference
+
+4.3.4.40 writertc
+.................
+
+The `writertc' command writes the currently estimated error and
+gain/loss rate parameters for the RTC to the RTC file (specified with
+the `rtcfile' directive (*note rtcfile directive::)).  This information
+is also written automatically when `chronyd' is killed (with SIGHUP,
+SIGINT, SIGQUIT or SIGTERM).
+
+
+File: chrony.info,  Node: Porting guide,  Next: GPL,  Prev: Usage reference,  Up: Top
+
+Appendix A Porting guide
+************************
+
+This appendix discusses issues that have arisen in writing the
+system-specific parts of the existing ports.  This will provide useful
+information for those attempting to write ports to other systems.
+
+* Menu:
+
+* System driver files::         What needs to go in a driver file for a
+                                particular type of system
+* Quirks of particular systems::  Problem areas that have been found on ports
+                                already written.
+
+
+File: chrony.info,  Node: System driver files,  Next: Quirks of particular systems,  Up: Porting guide
+
+A.1 System driver files
+=======================
+
+The system specific parts of the software are contained in files with
+names like `sys_linux.c'.
+
+   The following functions are required in a system driver file:
+
+  1. A function to read the current frequency
+
+  2. A function to set the current frequency
+
+  3. A function to slew the system time by a specified delta
+
+  4. A function to step the system time by a specified delta
+
+  5. A function to work out the error at a particular time between the
+     system's clock and `chronyd's' estimate of real time.  (This is
+     required because some systems have to track real time by making
+     the system time follow it in a 'sawtooth' fashion).
+
+   The "frequency" is the rate at which the system gains or loses time,
+measured relative to the system when running uncompensated.
+
+
+File: chrony.info,  Node: Quirks of particular systems,  Prev: System driver files,  Up: Porting guide
+
+A.2 Quirks of particular systems
+================================
+
+These sections describe quirks in each system type that needed to be
+investigated to port the software to each system type.
+
+* Menu:
+
+* Linux porting quirks::
+* Solaris 2.5 porting quirks::
+* SunOS 4.1.4 porting quirks::
+
+
+File: chrony.info,  Node: Linux porting quirks,  Next: Solaris 2.5 porting quirks,  Up: Quirks of particular systems
+
+A.2.1 Linux
+-----------
+
+The following quirks have been found in developing the Linux port.
+
+  1. In order to avoid floating point arithmetic, the kernel uses
+     shifting and adding to approximate a scaling of 100/128.  This
+     approximation implies that the frequency set via the `adjtimex()'
+     system call is not the frequency that is actually obtained.  The
+     method of approximation varies between kernel versions and must be
+     determined by examining the kernel source.  An inverse factor must
+     be included in the driver to compensate.
+
+  2. In some kernel versions, an `adjtimex()' system call with the flags
+     bits all zeroed will return the amount of offset still to be
+     corrected.  In others (e.g. the 2.0 series beyond 2.0.32), the
+     offset must be changed in order to get the old offset returned
+     (similar to `adjtime()' on other systems).
+
+
+
+File: chrony.info,  Node: Solaris 2.5 porting quirks,  Next: SunOS 4.1.4 porting quirks,  Prev: Linux porting quirks,  Up: Quirks of particular systems
+
+A.2.2 Solaris 2.5
+-----------------
+
+The following quirks have been found in developing the Solaris port.
+
+  1. The `adjtime()' system call with a zero argument does not cancel an
+     adjustment that is in progress - it just reports the remaining
+     adjustment.
+
+  2. The `settimeofday()' system call only observes the seconds part of
+     the argument - any fractional seconds part is lost.  second.
+
+  3. The kernel variable `dosynctodr' has to be set to zero, otherwise
+     the system clock is periodically reset to the real-time clock.
+
+
+File: chrony.info,  Node: SunOS 4.1.4 porting quirks,  Prev: Solaris 2.5 porting quirks,  Up: Quirks of particular systems
+
+A.2.3 SunOS 4.1.4
+-----------------
+
+The following quirks have been found in developing the SunOS port.
+
+  1. The `adjtime()' system call truncates its argument to a multiple of
+     the system's `tickadj' variable.  (`chronyd' sets that to 100,
+     giving a 1 part in 100 slewing capability for correcting offsets.)
+
+  2. The kernel variable `dosynctodr' has to be set to zero, otherwise
+     the system clock is periodically reset to the real-time clock.
+
+
+File: chrony.info,  Node: GPL,  Prev: Porting guide,  Up: Top
+
+Appendix B GNU General Public License
+*************************************
+
+                      GNU GENERAL PUBLIC LICENSE
+                         Version 2, June 1991
+
+   Copyright (C) 1989, 1991 Free Software Foundation, Inc.,  51
+Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Everyone is
+permitted to copy and distribute verbatim copies  of this license
+document, but changing it is not allowed.
+
+   			    Preamble
+
+   The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software-to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+   When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it in
+new free programs; and that you know you can do these things.
+
+   To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+   For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+   We protect your rights with two steps: (1) copyright the software,
+and (2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+   Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+   Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+   The precise terms and conditions for copying, distribution and
+modification follow.
+
+   		    GNU GENERAL PUBLIC LICENSE    TERMS AND CONDITIONS
+FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+   0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The "Program", below,
+refers to any such program or work, and a "work based on the Program"
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term "modification".)  Each licensee is addressed as "you".
+
+   Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the Program
+(independent of having been made by running the Program).  Whether that
+is true depends on what the Program does.
+
+   1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+   You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+   2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+   a) You must cause the modified files to carry prominent notices
+stating that you changed the files and the date of any change.
+
+   b) You must cause any work that you distribute or publish, that in
+ whole or in part contains or is derived from the Program or any
+part thereof, to be licensed as a whole at no charge to all third
+parties under the terms of this License.
+
+   c) If the modified program normally reads commands interactively
+when run, you must cause it, when started running for such
+interactive use in the most ordinary way, to print or display an
+announcement including an appropriate copyright notice and a     notice
+that there is no warranty (or else, saying that you provide     a
+warranty) and that users may redistribute the program under     these
+conditions, and telling the user how to view a copy of this
+License.  (Exception: if the Program itself is interactive but     does
+not normally print such an announcement, your work based on     the
+Program is not required to print an announcement.)
+
+   These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+   Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+   In addition, mere aggregation of another work not based on the
+Program with the Program (or with a work based on the Program) on a
+volume of a storage or distribution medium does not bring the other
+work under the scope of this License.
+
+   3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+   a) Accompany it with the complete corresponding machine-readable
+source code, which must be distributed under the terms of Sections
+1 and 2 above on a medium customarily used for software interchange; or,
+
+   b) Accompany it with a written offer, valid for at least three
+years, to give any third party, for a charge no more than your     cost
+of physically performing source distribution, a complete
+machine-readable copy of the corresponding source code, to be
+distributed under the terms of Sections 1 and 2 above on a medium
+customarily used for software interchange; or,
+
+   c) Accompany it with the information you received as to the offer
+to distribute corresponding source code.  (This alternative is
+allowed only for noncommercial distribution and only if you
+received the program in object code or executable form with such     an
+offer, in accord with Subsection b above.)
+
+   The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to control
+compilation and installation of the executable.  However, as a special
+exception, the source code distributed need not include anything that
+is normally distributed (in either source or binary form) with the
+major components (compiler, kernel, and so on) of the operating system
+on which the executable runs, unless that component itself accompanies
+the executable.
+
+   If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent access
+to copy the source code from the same place counts as distribution of
+the source code, even though third parties are not compelled to copy
+the source along with the object code.
+
+   4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt otherwise
+to copy, modify, sublicense or distribute the Program is void, and will
+automatically terminate your rights under this License.  However,
+parties who have received copies, or rights, from you under this
+License will not have their licenses terminated so long as such parties
+remain in full compliance.
+
+   5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying the
+Program or works based on it.
+
+   6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+   7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+   If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+   It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+   This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+   8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License may
+add an explicit geographical distribution limitation excluding those
+countries, so that distribution is permitted only in or among countries
+not thus excluded.  In such case, this License incorporates the
+limitation as if written in the body of this License.
+
+   9. The Free Software Foundation may publish revised and/or new
+versions of the General Public License from time to time.  Such new
+versions will be similar in spirit to the present version, but may
+differ in detail to address new problems or concerns.
+
+   Each version is given a distinguishing version number.  If the
+Program specifies a version number of this License which applies to it
+and "any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Program does not specify a
+version number of this License, you may choose any version ever
+published by the Free Software Foundation.
+
+   10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the
+author to ask for permission.  For software which is copyrighted by the
+Free Software Foundation, write to the Free Software Foundation; we
+sometimes make exceptions for this.  Our decision will be guided by the
+two goals of preserving the free status of all derivatives of our free
+software and of promoting the sharing and reuse of software generally.
+
+   			    NO WARRANTY
+
+   11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
+THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS
+WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+   12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+   		     END OF TERMS AND CONDITIONS
+
+   	    How to Apply These Terms to Your New Programs
+
+   If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these
+terms.
+
+   To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+   <one line to give the program's name and a brief idea of what it
+does.>     Copyright (C) <year>  <name of author>
+
+   This program is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by
+   the Free Software Foundation; either version 2 of the License, or
+(at your option) any later version.
+
+   This program is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU
+General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+along     with this program; if not, write to the Free Software
+Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA
+02110-1301 USA.
+
+   Also add information on how to contact you by electronic and paper
+mail.
+
+   If the program is interactive, make it output a short notice like
+this when it starts in an interactive mode:
+
+   Gnomovision version 69, Copyright (C) year name of author
+Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show
+w'.      This is free software, and you are welcome to redistribute it
+  under certain conditions; type `show c' for details.
+
+   The hypothetical commands `show w' and `show c' should show the
+appropriate parts of the General Public License.  Of course, the
+commands you use may be called something other than `show w' and `show
+c'; they could even be mouse-clicks or menu items-whatever suits your
+program.
+
+   You should also get your employer (if you work as a programmer) or
+your school, if any, to sign a "copyright disclaimer" for the program,
+if necessary.  Here is a sample; alter the names:
+
+   Yoyodyne, Inc., hereby disclaims all copyright interest in the
+program   `Gnomovision' (which makes passes at compilers) written by
+James Hacker.
+
+   <signature of Ty Coon>, 1 April 1989   Ty Coon, President of Vice
+
+   This General Public License does not permit incorporating your
+program into proprietary programs.  If your program is a subroutine
+library, you may consider it more useful to permit linking proprietary
+applications with the library.  If this is what you want to do, use the
+GNU Lesser General Public License instead of this License.  
+
+
+
+Tag Table:
+Node: Top316
+Node: Introduction856
+Node: Overview1433
+Node: Acknowledgements2960
+Node: Availability3615
+Node: Getting the software3921
+Node: Platforms4161
+Node: Other time synchronisation packages5362
+Node: Comparison with xntpd5652
+Node: Comparison with timed8405
+Node: Distribution and warranty10380
+Node: Bug reporting10730
+Node: Contributing11683
+Node: Installation13496
+Node: line editing support16915
+Node: package builders18573
+Node: Typical scenarios19840
+Node: Computers on the net20558
+Node: Infrequent connection22333
+Node: Configuration for infrequent connections22859
+Node: Advising chronyd of internet availability25576
+Node: Isolated networks26815
+Node: Dial-up home PCs28800
+Node: Dial-up overview29183
+Node: Dial-up configuration34748
+Node: Configuration options overview37937
+Node: Usage reference39102
+Node: Starting chronyd39452
+Node: Configuration file43996
+Node: comments in config file47382
+Node: acquisitionport directive47819
+Node: allow directive48662
+Node: bindaddress directive51282
+Node: bindcmdaddress directive52770
+Node: broadcast directive53822
+Node: cmdallow directive55522
+Node: cmddeny directive56184
+Node: commandkey directive56639
+Node: cmdport directive57379
+Node: deny directive57893
+Node: driftfile directive58330
+Node: dumpdir directive59642
+Node: dumponexit directive60912
+Node: initstepslew directive61274
+Node: keyfile directive64089
+Node: local directive65215
+Node: linux_hz directive66735
+Node: linux_freq_scale directive67456
+Node: log directive68460
+Node: measurements log69731
+Node: statistics log71715
+Node: tracking log74242
+Node: RTC log75457
+Node: refclocks log77313
+Node: logchange directive78609
+Node: logdir directive79465
+Node: mailonchange directive79782
+Node: makestep directive80303
+Node: manual directive81351
+Node: maxupdateskew directive82072
+Node: noclientlog directive83540
+Node: clientloglimit directive83920
+Node: peer directive84453
+Node: pidfile directive84785
+Node: port directive85235
+Node: refclock directive85872
+Node: rtcdevice directive89831
+Node: rtcfile directive90274
+Node: rtconutc directive91579
+Node: sched_priority directive92524
+Node: lock_all directive93557
+Node: server directive94116
+Node: Running chronyc99578
+Node: Chronyc basic use100167
+Node: Chronyc command line options100753
+Node: Security with chronyc101902
+Node: Chronyc command reference103739
+Node: accheck command106811
+Node: activity command107378
+Node: add peer command108547
+Node: add server command109096
+Node: allow command109658
+Node: allow all command110279
+Node: burst command110567
+Node: clients command113394
+Node: cmdaccheck command115218
+Node: cmdallow command115635
+Node: cmdallow all command115982
+Node: cmddeny command116336
+Node: cmddeny all command116680
+Node: cyclelogs command117033
+Node: delete command117822
+Node: deny command118286
+Node: deny all command118777
+Node: dns command119059
+Node: dump command120027
+Node: exit command120718
+Node: help command120962
+Node: local command121182
+Node: makestep command122037
+Node: manual command123016
+Node: maxdelay command125141
+Node: maxdelayratio command126048
+Node: maxpoll command127081
+Node: maxupdateskew command128003
+Node: minpoll command128312
+Node: offline command129225
+Node: online command132043
+Node: password command132474
+Node: quit command133412
+Node: rtcdata command133663
+Node: settime command135824
+Node: sources command137887
+Node: sourcestats command141132
+Node: tracking command143353
+Node: trimrtc command148674
+Node: writertc command150249
+Node: Porting guide150693
+Node: System driver files151301
+Node: Quirks of particular systems152236
+Node: Linux porting quirks152631
+Node: Solaris 2.5 porting quirks153635
+Node: SunOS 4.1.4 porting quirks154335
+Node: GPL154920
+
+End Tag Table
diff -urNpa s01/faq.html s02/faq.html
--- s01/faq.html	1970-01-01 01:00:00.000000000 +0100
+++ s02/faq.html	2015-04-10 21:57:00.000000000 +0200
@@ -0,0 +1,614 @@
+<html>
+<head>
+<title>Frequently asked questions</title>
+<meta name="description" content="Chrony FAQ (frequently asked questions)">
+<meta name="keywords" content="chrony,network time protocol,NTP,RFC 1305,dial-up connection,real time clock,RTC,Linux,FAQ,frequently asked questns">
+<?php
+  $root = ".";
+  include "$root/styles.php";
+?>
+</head>
+
+<body>
+<?php
+  include 'main_banner.php';
+  include 'header.php';
+?>
+<?php pretty_h1("Introduction") ?>
+<p>
+This is a set of questions and answers to common problems and issues.
+<p>
+As we receive more emails about the software, we will add new questions
+to this page.
+<hr>
+<p>
+The developers can be reached via the chrony-dev mailing list.  See 
+<a href="#question_1.4">question 1.4.</a> for details.
+<hr>
+
+<br clear=all>
+<ul>
+<b><li> <a href="#section_1">1.</a> Administrative issues</b>
+  <ul>
+  <li> <a href="#question_1.1">1.1.</a> Where can I get chrony source code?
+  <li> <a href="#question_1.2">1.2.</a> Are there any packaged versions of chrony?
+  <li> <a href="#question_1.3">1.3.</a> Where is the home page?
+  <li> <a href="#question_1.4">1.4.</a> Is there a mailing list?
+  <li> <a href="#question_1.5">1.5.</a> What licence is applied to chrony?
+  </ul>
+<b><li> <a href="#section_2">2.</a> Chrony compared to other programs</b>
+  <ul>
+  <li> <a href="#question_2.1">2.1.</a> How does chrony compare to xntpd?
+  </ul>
+<b><li> <a href="#section_3">3.</a> Compilation issues</b>
+  <ul>
+  <li> <a href="#question_3.1">3.1.</a> How do I apply source patches?
+  <li> <a href="#question_3.2">3.2.</a> Can I compile chrony with an ANSI-C compiler that is not GCC v2.x?
+  <li> <a href="#question_3.3">3.3.</a> I get errors like 'client.c:44: readline/readline.h: file not found'
+  <li> <a href="#question_3.4">3.4.</a> I have RedHat 7.3 and can't compile rtc_linux.c (error in spinlock.h)
+  </ul>
+<b><li> <a href="#section_4">4.</a> Selection of NTP servers</b>
+  <ul>
+  <li> <a href="#question_4.1">4.1.</a> I have several computers on a LAN.  Should I make one the master, or make them all clients of an external server?
+  </ul>
+<b><li> <a href="#section_5">5.</a> Addressing issues</b>
+  <ul>
+  <li> <a href="#question_5.1">5.1.</a> I get the following error message : "Could not get IP adress for localhost"
+  <li> <a href="#question_5.2">5.2.</a> I have problems if I put the names of my NTP servers in the chrony.conf file.
+  </ul>
+<b><li> <a href="#section_6">6.</a> My computer is not synchronising.</b>
+  <ul>
+  <li> <a href="#question_6.1">6.1.</a> Behind a firewall?
+  <li> <a href="#question_6.2">6.2.</a> Do you have a non-permanant (i.e. intermittent) Internet connection?
+  <li> <a href="#question_6.3">6.3.</a> In measurements.log, do the '7' and '8' flag columns always show zero?
+  </ul>
+<b><li> <a href="#section_7">7.</a> Issues with chronyd</b>
+  <ul>
+  <li> <a href="#question_7.1">7.1.</a> chronyd crashes after a syslog message "adjtimex failed for set frequency"
+  </ul>
+<b><li> <a href="#section_8">8.</a> Issues with chronyc</b>
+  <ul>
+  <li> <a href="#question_8.1">8.1.</a> I keep getting the error '510 No command access from this host --- Reply not authenticated'.
+  <li> <a href="#question_8.2">8.2.</a> I cannot log in from chronyc to carry out privileged tasks.
+  <li> <a href="#question_8.3">8.3.</a> When I enter a command and hit &lt;Return&gt;, chronyc hangs
+  <li> <a href="#question_8.4">8.4.</a> Is the chronyc&lt;-&gt;chronyd protocol documented anywhere?
+  </ul>
+<b><li> <a href="#section_9">9.</a> Real-time clock issues.</b>
+  <ul>
+  <li> <a href="#question_9.1">9.1.</a> What is the real-time clock (RTC)?
+  <li> <a href="#question_9.2">9.2.</a> I want to use chronyd's real-time clock support.  Must I disable hwclock?
+  <li> <a href="#question_9.3">9.3.</a> I just keep getting the '513 RTC driver not running' message
+  </ul>
+<b><li> <a href="#section_10">10.</a> Problems with isolated networks.</b>
+  <ul>
+  <li> <a href="#question_10.1">10.1.</a> When I use the 'settime' command, chronyd crashes.
+  </ul>
+<b><li> <a href="#section_11">11.</a> Microsoft Windows</b>
+  <ul>
+  <li> <a href="#question_11.1">11.1.</a> Does chrony support Windows?
+  <li> <a href="#question_11.2">11.2.</a> Are there any plans to support Windows?
+  <li> <a href="#question_11.3">11.3.</a> What alternative NTP clients are there for Windows?
+  </ul>
+<b><li> <a href="#section_12">12.</a> NTP-specific issues</b>
+  <ul>
+  <li> <a href="#question_12.1">12.1.</a> Can chrony be driven from broadcast NTP servers?
+  <li> <a href="#question_12.2">12.2.</a> Can chronyd transmit broadcast NTP packets (e.g. to synchronise other computers on a private LAN)?
+  <li> <a href="#question_12.3">12.3.</a> Can chrony keep the system clock a fixed offset away from real time?
+  <li> <a href="#question_12.4">12.4.</a> What happens if the network connection is dropped without using chronyc's 'offline' command first?
+  </ul>
+<b><li> <a href="#section_13">13.</a> Development</b>
+  <ul>
+  <li> <a href="#question_13.1">13.1.</a> Can I get the source via git from anywhere?
+  </ul>
+<b><li> <a href="#section_14">14.</a> Linux-specific issues</b>
+  <ul>
+  <li> <a href="#question_14.1">14.1.</a> Why does the source code include kernel header files?
+  <li> <a href="#question_14.2">14.2.</a> I get "Could not open /dev/rtc, Device or resource busy" in my syslog file.
+  </ul>
+<b><li> <a href="#section_15">15.</a> Solaris-specific issues</b>
+  <ul>
+  <li> <a href="#question_15.1">15.1.</a> On Solaris 2.8, I get an error message about not being able to open kvm to change dosynctodr.
+  </ul>
+</ul>
+<hr>
+<a name=section_1>
+<?php pretty_h2("1. Administrative issues"); ?>
+<p>
+<a name=question_1.1>
+<font size=+1 face="arial,helvetica">1.1. Where can I get chrony source code?</font>
+<pre>
+Tarballs are available via the <b>Download</b> link on the Chrony
+Web site.  For the current development from the developers' version control
+system see the <b>Git</b> link on the Web site.
+
+</pre>
+<p>
+<a name=question_1.2>
+<font size=+1 face="arial,helvetica">1.2. Are there any packaged versions of chrony?</font>
+<pre>
+We are aware of packages for Debian, Fedora, Gentoo, Mandriva, Slackware,
+and Ubuntu.  We are not involved with how these are built or distributed.
+
+</pre>
+<p>
+<a name=question_1.3>
+<font size=+1 face="arial,helvetica">1.3. Where is the home page?</font>
+<pre>
+It is currently at <a href="http://chrony.tuxfamily.org/">http://chrony.tuxfamily.org/</a>. 
+
+</pre>
+<p>
+<a name=question_1.4>
+<font size=+1 face="arial,helvetica">1.4. Is there a mailing list?</font>
+<pre>
+Yes, it's currently at chrony-users@chrony.tuxfamily.org. There is a low-volume
+list called chrony-announce which is just for announcements of new releases or
+similar matters of high importance.  You can join the lists by sending a
+message with the subject subscribe to <a href="mailto:chrony-users-request@chrony.tuxfamily.org">chrony-users-request@chrony.tuxfamily.org</a> or
+<a href="mailto:chrony-announce-request@chrony.tuxfamily.org">chrony-announce-request@chrony.tuxfamily.org</a> respectively.
+
+For those who want to contribute to the development of chrony, there is a
+developers' mailing list.  You can subscribe by sending mail with the
+subject subscribe to
+<a href="mailto:chrony-dev-request@chrony.tuxfamily.org">chrony-dev-request@chrony.tuxfamily.org</a>.
+
+</pre>
+<p>
+<a name=question_1.5>
+<font size=+1 face="arial,helvetica">1.5. What licence is applied to chrony?</font>
+<pre>
+Starting from version 1.15, chrony is licensed under the GNU General Public
+License, Version 2.  Versions prior to 1.15 were licensed under a custom BSD-like
+license.
+
+</pre>
+<hr>
+<a name=section_2>
+<?php pretty_h2("2. Chrony compared to other programs"); ?>
+<p>
+<a name=question_2.1>
+<font size=+1 face="arial,helvetica">2.1. How does chrony compare to xntpd?</font>
+<pre>
+If your computer is permenently connected, or connected for long periods (that
+is, for the several hours it takes xntpd to settle down), or you need to
+support hardware reference clocks to your computer, then xntpd will work fine.
+Apart from not supporting hardware clocks, chrony will work fine too.
+
+If your computer connects to the 'net for 5 minutes once a day (or something
+like that), or you turn your (Linux v2.0) computer off when you're not using
+it, or you want to use NTP on an isolated network with no hardware clocks in
+sight, chrony will work much better for you.
+
+The reason I wrote chrony was that I could not get xntpd to do
+anything sensible on my PC at home, which is connected to the 'net for
+about 5 minutes once or twice a day, mainly to upload/download email
+and news.  Nowadays it is also turned off for 22-23 hours a day, when
+not in use.  I wanted a program which would :
+
+- slew the time to correct it when I go online and NTP servers become visible
+
+- determine the rate at which the computer gains or loses time and use this
+  information to keep it reasonably correct between connects to the 'net.  This
+  has to be done using a method that does not care about the intermittent
+  availability of the references or the fact the computer is turned off between
+  groups of measurements..
+
+- maintain the time across reboots, by working out the error and drift rate of
+  the computer's real-time clock and using this information to set the system
+  clock correctly at boot up. (In the last few months, it became impossible for
+  me to leave my computer powered permanently.)
+
+Also, when working with isolated networks with no true time references
+at all, I found xntpd gave me no help with managing the local clock's
+gain/loss rate on the NTP master node (which I set from my watch).  I
+added some automated support in chrony to deal with this.
+
+</pre>
+<hr>
+<a name=section_3>
+<?php pretty_h2("3. Compilation issues"); ?>
+<p>
+<a name=question_3.1>
+<font size=+1 face="arial,helvetica">3.1. How do I apply source patches?</font>
+<pre>
+Sometimes we release source patches rather than a full version when we need to
+provide a fix for small problems.  Supposing you have chrony-1.X.tar.gz and a
+source patch chrony-1.X-1.X.1.gz.  The steps required are:
+
+    tar xzvf ../chrony-1.X.tar.gz
+    cd chrony-1.X
+    gunzip < ../../chrony-1.X-1.X.1.gz  | patch -p1
+    ./configure
+    make
+    make install
+
+</pre>
+<p>
+<a name=question_3.2>
+<font size=+1 face="arial,helvetica">3.2. Can I compile chrony with an ANSI-C compiler that is not GCC v2.x?</font>
+<pre>
+I have had reports that chrony can be compiled with GCC v1.42, by using the
+following trick when running make
+
+   make CC='gcc -D__FUNCTION__=\"function_not_available\"'
+
+(this gets around the lack of a __FUNCTION__ macro in GCC v1.)
+
+The same trick may be enough to allow other compilers to be used.
+
+</pre>
+<p>
+<a name=question_3.3>
+<font size=+1 face="arial,helvetica">3.3. I get errors like 'client.c:44: readline/readline.h: file not found'</font>
+<pre>
+Read the section about 'readline' in the INSTALL file or in chrony.txt.  You
+may need to disable readline support (e.g. if you haven't got readline
+installed at all, or just don't want it), or specify the location of the
+readline files (e.g. if you've installed them in a non-standard place).
+
+</pre>
+<p>
+<a name=question_3.4>
+<font size=+1 face="arial,helvetica">3.4. I have RedHat 7.3 and can't compile rtc_linux.c (error in spinlock.h)</font>
+<pre>
+The following solution has been found for this.  Enter the following 3 commands
+(as root):
+
+  cd  /usr/include/                                                                                                               
+  mv linux linux.rh                                                                                                               
+  ln -s /usr/src/linux/include/linux ./linux                                                                                    
+
+The problem seems to be that RedHat provide their own kernel header files in
+/usr/include/linux.  Besides differing from those used by your current kernel,
+if you compiled it yourself, they also seem to have been changed in a way that
+causes a problem compiling chrony.  Chrony compiles fine with standard kernel
+header files.
+
+There have also been reports that just replacing the file
+/usr/src/linux/spinlock.h by the equivalent file from a vanilla kernel source
+tree is sufficient to fix the problem.
+
+Note : from version 1.21 onwards, this problem no longer exists.  The kernel
+header files are no longer included.
+
+</pre>
+<hr>
+<a name=section_4>
+<?php pretty_h2("4. Selection of NTP servers"); ?>
+<p>
+<a name=question_4.1>
+<font size=+1 face="arial,helvetica">4.1. I have several computers on a LAN.  Should I make one the master, or make them all clients of an external server?</font>
+<pre>
+I think the best configuration is to make one computer the master, with the
+others as clients of it.  Add a 'local' directive to the master's chrony.conf
+file.  This configuration will be better because
+
+* the load on the external connection is less
+* the load on the external NTP server(s) is less
+* if your external connection goes down, the computers on the LAN will maintain
+  a common time with each other.
+
+</pre>
+<hr>
+<a name=section_5>
+<?php pretty_h2("5. Addressing issues"); ?>
+<p>
+<a name=question_5.1>
+<font size=+1 face="arial,helvetica">5.1. I get the following error message : "Could not get IP adress for localhost"</font>
+<pre>
+Add a line like the following to your /etc/hosts file
+    127.0.0.1   localhost
+
+</pre>
+<p>
+<a name=question_5.2>
+<font size=+1 face="arial,helvetica">5.2. I have problems if I put the names of my NTP servers in the chrony.conf file.</font>
+<pre>
+If you have no connection to the Internet at boot time, chrony won't be able to
+turn the names into IP addresses when it starts.  There seem to be 2 solutions:
+
+1. Put the numeric IP addresses in the chrony.conf file
+or
+2. Put the server->IP address mappings in your /etc/hosts file and ensure that
+   /etc/host.conf reads 'order hosts,bind'.
+
+The problem is that chronyd (currently) isn't designed in a way that allows
+hostname->IP address lookups during normal operation.  I hope to work on this
+problem very soon.
+
+</pre>
+<hr>
+<a name=section_6>
+<?php pretty_h2("6. My computer is not synchronising."); ?>
+<pre>
+This is the most common problem.  There are a number of reasons, see the
+following questions.
+
+</pre>
+<p>
+<a name=question_6.1>
+<font size=+1 face="arial,helvetica">6.1. Behind a firewall?</font>
+<pre>
+If there is a firewall between you and the NTP server you're trying to use,
+the packets may be blocked.  Try using a tool like etherfind or tcpdump to see
+if you're getting responses from the server.  If you have an external modem,
+see if the receive light blinks straight after the transmit light (when the
+link is quiet apart from the NTP traffic.)  Try adding 'log measurements' to
+the chrony.conf file and look in the measurements.log file after chrony has
+been running for a short period.  See if any measurements appear.
+
+Most people run chronyd on the firewall itself, to avoid all issues of UDP
+packet forwarding and/or masquerading.
+
+</pre>
+<p>
+<a name=question_6.2>
+<font size=+1 face="arial,helvetica">6.2. Do you have a non-permanant (i.e. intermittent) Internet connection?</font>
+<pre>
+Check that you're using chronyc's 'online' and 'offline' commands
+appropriately.  Again, check in measurements.log to see if you're getting any
+data back from the server.
+
+</pre>
+<p>
+<a name=question_6.3>
+<font size=+1 face="arial,helvetica">6.3. In measurements.log, do the '7' and '8' flag columns always show zero?</font>
+<pre>
+Do you have a 'local stratum X' directive in the chrony.conf file?  If X is
+lower than the stratum of the server you're trying to use, this situation will
+arise.  You should always make X quite high (e.g. 10) in this directive.
+
+</pre>
+<hr>
+<a name=section_7>
+<?php pretty_h2("7. Issues with chronyd"); ?>
+<p>
+<a name=question_7.1>
+<font size=+1 face="arial,helvetica">7.1. chronyd crashes after a syslog message "adjtimex failed for set frequency"</font>
+<pre>
+The usual cause is that the kernel is running with a different value of 'HZ'
+(the timer interrupt rate) than the value that was found in the kernel header
+files when chrony was compiled.  The chrony.conf file can include options to
+modify the HZ value (see the discussion of linux_hz and linux_freq_scale in the
+documentation), however the problem is to find the value of HZ being used.
+
+</pre>
+<hr>
+<a name=section_8>
+<?php pretty_h2("8. Issues with chronyc"); ?>
+<p>
+<a name=question_8.1>
+<font size=+1 face="arial,helvetica">8.1. I keep getting the error '510 No command access from this host --- Reply not authenticated'.</font>
+<pre>
+Make sure that the chrony.conf file (on the computer where chronyd is running)
+has a 'cmdallow' entry for the computer you are running chronyc on.  This
+shouldn't be necessary for localhost, but some people still seem to need an
+entry like 'cmdallow 127.0.0.1'.  (It would be good to understand why problem
+only affects some people).
+
+</pre>
+<p>
+<a name=question_8.2>
+<font size=+1 face="arial,helvetica">8.2. I cannot log in from chronyc to carry out privileged tasks.</font>
+<pre>
+This is the second most common problem.
+
+Perhaps your /etc/chrony.keys file is badly formatted.  Make sure that the
+final line has a line feed at the end, otherwise the key on that line will work
+as though the last character is missing.  (Note, this bug was fixed in version
+1.16.)
+
+</pre>
+<p>
+<a name=question_8.3>
+<font size=+1 face="arial,helvetica">8.3. When I enter a command and hit &lt;Return&gt;, chronyc hangs</font>
+<pre>
+This probably means that chronyc cannot communicate with chronyd.
+
+Perhaps chronyd is not running.  Try using the ps command (e.g. on Linux, 'ps
+-auxw') to see if it's running.  Or try 'netstat -a' and see if the ports
+123/udp and 323/udp are listening.  If chronyd is not running, you may have a
+problem with the way you are trying to start it (e.g. at boot time).
+
+Perhaps you have a firewall set up in a way that blocks packets on port
+323/udp.  You need to amend the firewall configuration in this case.
+
+</pre>
+<p>
+<a name=question_8.4>
+<font size=+1 face="arial,helvetica">8.4. Is the chronyc&lt;-&gt;chronyd protocol documented anywhere?</font>
+<pre>
+Only by the source code :-)  See cmdmon.c (chronyd side) and client.c (chronyc
+side).
+
+</pre>
+<hr>
+<a name=section_9>
+<?php pretty_h2("9. Real-time clock issues."); ?>
+<p>
+<a name=question_9.1>
+<font size=+1 face="arial,helvetica">9.1. What is the real-time clock (RTC)?</font>
+<pre>
+This is the clock which keeps the time even when your computer is turned off.
+It works with 1 second resolution.   chronyd can monitor the rate at which the
+real-time clock gains or loses time, and compensate for it when you set the
+system time from it at the next reboot.  See the documentation for details.
+
+</pre>
+<p>
+<a name=question_9.2>
+<font size=+1 face="arial,helvetica">9.2. I want to use chronyd's real-time clock support.  Must I disable hwclock?</font>
+<pre>
+The hwclock program is often set-up by default in the boot and shutdown scripts
+with many Linux installations.  If you want to use chronyd's real-time clock
+support, the important thing is to disable hwclock in the <b>shutdown</b>
+procedure.  If you don't, it will over-write the RTC with a new value, unknown
+to chronyd.  At the next reboot, chronyd will compensate this (wrong) time with
+its estimate of how far the RTC has drifted whilst the power was off, giving a
+meaningless initial system time.
+
+There is no need to remove hwclock from the boot process, as long as chronyd is
+started after it has run.
+
+</pre>
+<p>
+<a name=question_9.3>
+<font size=+1 face="arial,helvetica">9.3. I just keep getting the '513 RTC driver not running' message</font>
+<pre>
+For the real time clock support to work, you need the following three things:
+                                                                                                                                    
+* a kernel that is supported (e.g. 2.2 onwards)                                                                                     
+* enhanced RTC support compiled into the kernel                                                                                     
+* an 'rtcfile' directive in your chrony.conf file.                                                                                  
+
+</pre>
+<hr>
+<a name=section_10>
+<?php pretty_h2("10. Problems with isolated networks."); ?>
+<p>
+<a name=question_10.1>
+<font size=+1 face="arial,helvetica">10.1. When I use the 'settime' command, chronyd crashes.</font>
+<pre>
+If you enter times that are too far away from the real time, chronyd will
+think the system clock runs fast or slow by an excessive amount.  The required
+compensation factor will be outside the bounds for the adjtimex() system call.
+chronyd will crash when it tries to apply such an excessive adjustment.
+
+</pre>
+<hr>
+<a name=section_11>
+<?php pretty_h2("11. Microsoft Windows"); ?>
+<p>
+<a name=question_11.1>
+<font size=+1 face="arial,helvetica">11.1. Does chrony support Windows?</font>
+<pre>
+No.  The chronyc program (the command-line client used for configuring
+chronyd while it is running) has been successfully built and run under Cygwin
+in the past.  chronyd is not portable, because part of it is very
+system-dependent.  It needs adapting to work with Windows' equivalent of the
+adjtimex() call, and it needs to be made to work as an NT service.
+
+</pre>
+<p>
+<a name=question_11.2>
+<font size=+1 face="arial,helvetica">11.2. Are there any plans to support Windows?</font>
+<pre>
+We have no plans to do this.  Anyone is welcome to pick this work up and
+contribute it back to the project.
+
+</pre>
+<p>
+<a name=question_11.3>
+<font size=+1 face="arial,helvetica">11.3. What alternative NTP clients are there for Windows?</font>
+<pre>
+Some of the names we've seen mentioned are 
+   - Automachron
+   - NetTime (nettime.sourceforge.net)
+
+</pre>
+<hr>
+<a name=section_12>
+<?php pretty_h2("12. NTP-specific issues"); ?>
+<p>
+<a name=question_12.1>
+<font size=+1 face="arial,helvetica">12.1. Can chrony be driven from broadcast NTP servers?</font>
+<pre>
+No.  I remember looking at how they worked when I was first writing chrony.
+Since the 'target market' then was dial-up systems, broadcast packets were not
+relevant so I didn't bother working out how to deal with the complexities of
+doing the delay estimation.
+
+I no longer have root access to a LAN environment to develop and test broadcast
+server support.  Neither have I the time to work on this.  I would be very
+happy to accept a patch from anyone who can develop, test and debug the
+necessary changes!
+
+</pre>
+<p>
+<a name=question_12.2>
+<font size=+1 face="arial,helvetica">12.2. Can chronyd transmit broadcast NTP packets (e.g. to synchronise other computers on a private LAN)?</font>
+<pre>
+Yes.  Starting from version 1.17, chrony has this capability.
+
+</pre>
+<p>
+<a name=question_12.3>
+<font size=+1 face="arial,helvetica">12.3. Can chrony keep the system clock a fixed offset away from real time?</font>
+<pre>
+I have not experimented much, but I don't believe this would be possible as
+the program currently stands.
+
+</pre>
+<p>
+<a name=question_12.4>
+<font size=+1 face="arial,helvetica">12.4. What happens if the network connection is dropped without using chronyc's 'offline' command first?</font>
+<pre>
+In this case chronyd will keep trying to access the server(s) that it thinks
+are online.  Eventually it will decide that they are unreachable and no longer
+consider itself synchronised to them.  If you have other computers on your LAN
+accessing the computer that is affected this way, they too will become
+'unsynchronised', unless you have the 'local' directive set up on the master
+computer.
+
+The 'auto_offline' option to the 'server' entry in the chrony.conf file may be
+useful to avoid this situation.
+
+</pre>
+<hr>
+<a name=section_13>
+<?php pretty_h2("13. Development"); ?>
+<p>
+<a name=question_13.1>
+<font size=+1 face="arial,helvetica">13.1. Can I get the source via git from anywhere?</font>
+<pre>
+Yes.  See the Git link at <a
+href="http://chrony.tuxfamily.org/">http://chrony.tuxfamily.org</a> for
+information.
+
+</pre>
+<hr>
+<a name=section_14>
+<?php pretty_h2("14. Linux-specific issues"); ?>
+<p>
+<a name=question_14.1>
+<font size=+1 face="arial,helvetica">14.1. Why does the source code include kernel header files?</font>
+<pre>
+The program needs to see the definitions of structures used to interact with
+the real time clock (via /dev/rtc) and with the adjtimex() system call.  Sadly
+this has led to a number of compilation problems with newer kernels which have
+been increasingly hard to fix in a way that makes the code compilable on all
+Linux kernel versions (from 2.0 up anyway, I doubt 1.x still works.)  Hopefully
+the situation will not deteriorate further with future kernel versions.
+
+</pre>
+<p>
+<a name=question_14.2>
+<font size=+1 face="arial,helvetica">14.2. I get "Could not open /dev/rtc, Device or resource busy" in my syslog file.</font>
+<pre>
+Check that you haven't accidentally got two copies of chronyd running (perhaps
+defined in different start-up scripts.)
+
+</pre>
+<hr>
+<a name=section_15>
+<?php pretty_h2("15. Solaris-specific issues"); ?>
+<p>
+<a name=question_15.1>
+<font size=+1 face="arial,helvetica">15.1. On Solaris 2.8, I get an error message about not being able to open kvm to change dosynctodr.</font>
+<pre>
+(The dosynctodr variable controls whether Solaris couples the equivalent of its
+BIOS clock into its system clock at regular intervals).  The Solaris port of
+chrony was developed in the Solaris 2.5 era.  Some aspect of the Solaris kernel
+has changed which prevents the same technique working.  I no longer have root
+access to any Solaris machines to work on this, and am reliant on somebody
+developing the patch and testing it.  A good starting point would be to see if
+xntpd has been modified to work for Solaris 2.8.
+
+</pre>
+<hr>
+
+Back to
+<a href="mailto:rc@rc0.org.uk?subject=chrony">the author</a>'s
+<a href="http://www.rc0.org.uk/">main page</a>
+</body>
+</html>
